name: Build

on:
  push:
  workflow_dispatch:
  pull_request:
    branches:
      - 'master'

env:
  build_version: "0.0_0dev_${{github.sha}}"
  
jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        freebsd_version: 
          - FreeBSD-14.0-CURRENT
        
    steps:
      - uses: actions/checkout@v3
      - name: Setup FreeBSD build VM
        run: |
          /usr/local/bin/VBoxManage controlvm ${{matrix.freebsd_version}} poweroff || true
          /usr/local/bin/VBoxManage snapshot ${{matrix.freebsd_version}} restore initial
          /usr/local/bin/VBoxManage startvm ${{matrix.freebsd_version}} --type headless
          sleep 5

      - name: Build pfSense-pkg-API on FreeBSD
        run: |
          /usr/bin/ssh -o StrictHostKeyChecking=no ${{matrix.freebsd_version}}.jaredhendrickson.com 'sudo pkill ntpd || true && sudo ntpdate pool.ntp.org || true'
          /usr/local/bin/python3 tools/make_package.py --host ${{matrix.freebsd_version}}.jaredhendrickson.com --branch ${{github.sha}} --tag ${{env.build_version}}_${{matrix.freebsd_version}}

      - name: Teardown FreeBSD build VM
        if: "${{ always() }}"
        run: |
          /usr/local/bin/VBoxManage controlvm ${{matrix.freebsd_version}} poweroff || true
          /usr/local/bin/VBoxManage snapshot ${{matrix.freebsd_version}} restore initial

      - uses: actions/upload-artifact@v3
        with:
          name: pfSense-pkg-API-${{env.build_version}}_${{matrix.freebsd_version}}.pkg
          path: pfSense-pkg-API-${{env.build_version}}_${{matrix.freebsd_version}}.pkg

  e2e_tests:
    runs-on: self-hosted
    needs: [build]

    strategy:
      matrix:
        include:
          - pfsense_version: pfSense-2.7.0-DEVELOPMENT
            freebsd_version: FreeBSD-14.0-CURRENT
          - pfsense_version: pfSense-23.01-RELEASE
            freebsd_version: FreeBSD-14.0-CURRENT
          - pfsense_version: pfSense-23.05-RELEASE
            freebsd_version: FreeBSD-14.0-CURRENT
        
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: pfSense-pkg-API-${{env.build_version}}_${{matrix.freebsd_version}}.pkg
          path: pfSense-pkg-API-${{env.build_version}}_${{matrix.freebsd_version}}.pkg

      - name: Setup pfSense VM
        run: |
          /usr/local/bin/VBoxManage controlvm ${{matrix.pfsense_version}} poweroff || true
          /usr/local/bin/VBoxManage snapshot ${{matrix.pfsense_version}} restore initial
          /usr/local/bin/VBoxManage startvm ${{matrix.pfsense_version}} --type headless
          sleep 5

      # This is only necessary until GitHub Actions allows an easier way to get a URL to download the artifact within pfSense
      - name: Copy pfSense-pkg-API build to pfSense
        run: |
          pfsense-vshell --host ${{matrix.pfsense_version}}.jaredhendrickson.com -u admin -p pfsense -c 'pfSsh.php playback enablesshd' -k
          pfsense-vshell --host ${{matrix.pfsense_version}}.jaredhendrickson.com -u admin -p pfsense -c "mkdir /root/.ssh/ && echo $(cat ~/.ssh/id_rsa.pub) > /root/.ssh/authorized_keys" -k
          scp -o StrictHostKeyChecking=no pfSense-pkg-API-${{env.build_version}}_${{matrix.freebsd_version}}.pkg/pfSense-pkg-API-${{env.build_version}}_${{matrix.freebsd_version}}.pkg admin@${{matrix.pfsense_version}}.jaredhendrickson.com:/tmp/

      - name: Install pfSense-pkg-API on pfSense
        run: |
          /usr/local/bin/pfsense-vshell --host ${{matrix.pfsense_version}}.jaredhendrickson.com --no_verify -c "pkg add /tmp/pfSense-pkg-API-${{env.build_version}}_${{matrix.freebsd_version}}.pkg" -u admin -p pfsense
          /usr/local/bin/pfsense-vshell --host ${{matrix.pfsense_version}}.jaredhendrickson.com --no_verify -c '/etc/rc.restart_webgui' -u admin -p pfsense || true
          sleep 10

      - name: Run pfSense-pkg-API E2E tests
        run: |
          python3 tests/run_all_tests.py --host ${{matrix.pfsense_version}}.jaredhendrickson.com

      - name: Teardown pfSense VM
        if: "${{ always() }}"
        run: |
          /usr/local/bin/VBoxManage controlvm ${{matrix.pfsense_version}} poweroff || true
          /usr/local/bin/VBoxManage snapshot ${{matrix.pfsense_version}} restore initial
