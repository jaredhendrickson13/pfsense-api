openapi: 3.0.0
servers:
  - url: /

info:
  title: pfSense REST API Documentation
  version: "v1"
  contact:
    name: "Report bugs & issues"
    url: "https://github.com/jaredhendrickson13/pfsense-api"
    email: "github@jaredhendrickson.com"

  license:
    name: "Apache 2.0"
    url: "https://raw.githubusercontent.com/jaredhendrickson13/pfsense-api/master/LICENSE"

  description: >-
    ---

    # Authentication & Authorization

    By default, pfSense API uses the same credentials as the webConfigurator. This behavior allows you to configure pfSense
    from the API out of the box, and user passwords may be changed from the API to immediately add additional security if
    needed. After installation, you can navigate to System > API in the pfSense webConfigurator to configure API
    authentication. Please note that external authentication servers like LDAP or RADIUS are not supported with any API
    authentication method at this time. To authenticate your API call, follow the instructions for your configured
    authentication mode:

    <details>
        <summary>Local Database (default)</summary>

    Uses the same credentials as the pfSense webConfigurator. To authenticate API calls, pass in your username and password
    using basic authentication. For example:<br><br>
    `curl -u admin:pfsense https://pfsense.example.com/api/v1/firewall/rule`
    <br><br>
    _Note: in previous releases, local database authentication used the `client-id` and `client-token` fields in your
    request body to authenticate. This functionality still exists but is not recommended. It will be removed in a future
    release._
    </details>

    <details>
        <summary>JWT</summary>

    Requires a bearer token to be included in the `Authorization` header of your request. These are time-based tokens that
    will expire after the configured amount of time. To configure the JWT expiration, navigate to System > API within the
    webConfigurator and ensure the the Authentication Mode is set to JWT. Then you should have the option to configure the
    JWT Expiration value. Alternatively, you can use the /api/v1/system/api endpoint to update the `jwt_exp` value. To
    receive a JWT, you must make a POST request to the /api/v1/access_token endpoint. This endpoint will always require the
    use of the Local Database authentication type to receive the JWT. <br><br>For example:<br>

    ```
    curl -u admin:pfsense -X POST https://pfsense.example.com/api/v1/access_token
    ```

    <br><br>
    Once you have your JWT, you can authenticate your API calls by adding it to the request's authorization
    header. For example:<br>

    ```
    curl -H "Authorization: Bearer xxxxx.xxxxxx.xxxxxx" -X GET https://pfsense.example.com/api/v1/system/arp
    ```

    </details>

    <details>
        <summary>API Token</summary>

    Uses standalone tokens generated via the webConfigurator. These are better suited to distribute to systems as they are
    revocable and will only allow API authentication; not webConfigurator or SSH authentication (like the local database
    credentials). To generate or revoke credentials, navigate to System > API within the webConfigurator and ensure the
    Authentication Mode is set to API token. Then you should have the options to configure API Token generation, generate
    new tokens, and revoke existing tokens. After generating a new API token, the actual token will display at the top of
    the page on the success banner. This token will only be displayed once so ensure it is stored somewhere safe.<br><br>

    Once you have your API token, you may authenticate your API call by specifying your client-id and client-token within
    an `Authorization` header, these values must be separated by a space. For example:<br>

    ```
    curl -H "Authorization: CLIENT_ID_HERE CLIENT_TOKEN_HERE" -X GET https://pfsense.example.com/api/v1/system/arp
    ```

    <br><br>_Note: In previous versions of pfSense API, the client-id and client-token were provided via the request payload. This
    functionality is still supported but is not recommended. It will be removed in a future release._
    </details>

    ### Authorization

    pfSense API uses the same privileges as the pfSense webConfigurator. The required privileges for each endpoint are
    stated within the API documentation.

    # Content Types

    pfSense API can handle a few different content types. Please note, if a `Content-Type` header is not specified in your
    request, pfSense API will attempt to determine the content type which may have undesired results. It is recommended you
    specify your preferred `Content-Type` on each request.<br><br>
    While several content types may be enabled, `application/json` is the recommended content type. Supported content types
    are:

    <details>
        <summary>application/json</summary>

    Parses the request body as a JSON formatted string. This is the recommended content type.<br><br>
    Example:<br><br>

    ```
    curl -u admin:pfsense -H "Content-Type: application/json" -d '{"service": "sshd"}' -X POST https://pfsense.example.com/api/v1/services/restart
    ```

    </details>

    <details>
        <summary>application/x-www-form-urlencoded</summary>

    Parses the request body as URL encoded parameters.<br><br>
    Example:<br><br>

    ``` 
    curl -u admin:pfsense -H "Content-Type: application/x-www-form-urlencoded" -X DELETE "https://pfsense.example.com/api/v1/firewall/alias?id=EXAMPLE_ALIAS"
    ```

    <br><br>_Note: this content type only has the ability to pass values of string, integer, or boolean data types. Complex data
    types like arrays and objects cannot be parsed by the API when using this content type. It is recommended to only
    use this content type when making GET or DELETE requests._

    </details>

    # Queries

    pfSense API contains an advanced query engine to make it easy to query specific data from API calls. For endpoints
    supporting `GET` requests, you may query the return data to only return data you are looking for. To query data, you may
    add the data you are looking for to your payload. You may specify as many query parameters as you need. In order to
    match the query, each parameter must match exactly, or utilize a query filter to set criteria. If no matches were found,
    the endpoint will return an empty array in the data field.
    <details>
        <summary>Targeting Objects</summary>

    You may find yourself only needing to read objects with specific values set. For example, say an API endpoint normally
    returns this response without a query:<br><br>

    ```json
    {
      "status": "ok",
      "code": 200,
      "return": 0,
      "message": "Success",
      "data": [
        {
          "id": 0,
          "name": "Test",
          "type": "type1",
          "extra": {
            "tag": 0
          }
        },
        {
          "id": 1,
          "name": "Other Test",
          "type": "type2",
          "extra": {
            "tag": 100
          }
        },
        {
          "id": 2,
          "name": "Another Test",
          "type": "type1",
          "extra": {
            "tag": 200
          }
        }
      ]
    }

    ```

    If you want the endpoint to only return the objects that have their `type` value set to `type1` you could
    add `{"type": "type1"}` to your payload. This returns:<br><br>

    ```json
    {
      "status": "ok",
      "code": 200,
      "return": 0,
      "message": "Success",
      "data": [
        {
          "id": 0,
          "name": "Test",
          "type": "type1",
          "extra": {
            "tag": 0
          }
        },
        {
          "id": 2,
          "name": "Another Test",
          "type": "type1",
          "extra": {
            "tag": 200
          }
        }
      ]
    }

    ```

    Additionally, if you need to target values that are nested within an array, you can add `{"extra__tag": 100}` to
    recursively target the `tag` value within the `extra` array. Note the double underscore separating the parent and child
    keys. This returns:<br><br>

    ```json
    {
      "status": "ok",
      "code": 200,
      "return": 0,
      "message": "Success",
      "data": [
        {
          "id": 1,
          "name": "Other Test",
          "type": "type2",
          "extra": {
            "tag": 100
          }
        }
      ]
    }

    ```

    </details>

    <details>
        <summary>Query Filters</summary>

    Query filters allow you to apply logic to the objects you target. This makes it easy to target data that meets specific
    criteria:<br><br>

    ### Starts With

    The `startswith` filter allows you to target objects whose values start with a specific substring. This will work on
    both string and integer data types. Below is an example response without any queries:<br><br>

    ```json
    {
      "status": "ok",
      "code": 200,
      "return": 0,
      "message": "Success",
      "data": [
        {
          "id": 0,
          "name": "Test",
          "type": "type1",
          "extra": {
            "tag": 0
          }
        },
        {
          "id": 1,
          "name": "Other Test",
          "type": "type2",
          "extra": {
            "tag": 100
          }
        },
        {
          "id": 2,
          "name": "Another Test",
          "type": "type1",
          "extra": {
            "tag": 200
          }
        }
      ]
    }

    ```

    If you wanted to target objects whose names started with `Other`, you could use the
    payload `{"name__startswith": "Other"}`. This returns:<br><br>

    ```json
    {
      "status": "ok",
      "code": 200,
      "return": 0,
      "message": "Success",
      "data": [
        {
          "id": 1,
          "name": "Other Test",
          "type": "type2",
          "extra": {
            "tag": 100
          }
        }
      ]
    }

    ```

    ### Ends With

    The `endswith` filter allows you to target objects whose values end with a specific substring. This will work on both
    string and integer data types. Below is an example response without any queries:<br><br>

    ```json
    {
      "status": "ok",
      "code": 200,
      "return": 0,
      "message": "Success",
      "data": [
        {
          "id": 0,
          "name": "Test",
          "type": "type1",
          "extra": {
            "tag": 0
          }
        },
        {
          "id": 1,
          "name": "Other Test",
          "type": "type2",
          "extra": {
            "tag": 100
          }
        },
        {
          "id": 2,
          "name": "Another Test",
          "type": "type1",
          "extra": {
            "tag": 200
          }
        }
      ]
    }

    ```

    If you wanted to target objects whose names ended with `er Test`, you could use the
    payload `{"name__endswith" "er Test"}`. This returns:<br><br>

    ```json
    {
      "status": "ok",
      "code": 200,
      "return": 0,
      "message": "Success",
      "data": [
        {
          "id": 1,
          "name": "Other Test",
          "type": "type2",
          "extra": {
            "tag": 100
          }
        },
        {
          "id": 2,
          "name": "Another Test",
          "type": "type1",
          "extra": {
            "tag": 200
          }
        }
      ]
    }

    ```

    ### Contains

    The `contains` filter allows you to target objects whose values contain a specific substring. This will work on both
    string and integer data types. Below is an example response without any queries:<br><br>

    ```json
    {
      "status": "ok",
      "code": 200,
      "return": 0,
      "message": "Success",
      "data": [
        {
          "id": 0,
          "name": "Test",
          "type": "type1",
          "extra": {
            "tag": 0
          }
        },
        {
          "id": 1,
          "name": "Other Test",
          "type": "type2",
          "extra": {
            "tag": 100
          }
        },
        {
          "id": 2,
          "name": "Another Test",
          "type": "type1",
          "extra": {
            "tag": 200
          }
        }
      ]
    }

    ```

    If you wanted to target objects whose names contain `ther`, you could use the payload `{"name__contains": "ther"}`. This
    returns:<br><br>

    ```json
    {
      "status": "ok",
      "code": 200,
      "return": 0,
      "message": "Success",
      "data": [
        {
          "id": 1,
          "name": "Other Test",
          "type": "type2",
          "extra": {
            "tag": 100
          }
        },
        {
          "id": 2,
          "name": "Another Test",
          "type": "type1",
          "extra": {
            "tag": 200
          }
        }
      ]
    }

    ```

    ### Less Than

    The `lt` filter allows you to target objects whose values are less than a specific number. This will work on both
    numeric strings and integer data types. Below is an example response without any queries:<br><br>

    ```json
    {
      "status": "ok",
      "code": 200,
      "return": 0,
      "message": "Success",
      "data": [
        {
          "id": 0,
          "name": "Test",
          "type": "type1",
          "extra": {
            "tag": 0
          }
        },
        {
          "id": 1,
          "name": "Other Test",
          "type": "type2",
          "extra": {
            "tag": 100
          }
        },
        {
          "id": 2,
          "name": "Another Test",
          "type": "type1",
          "extra": {
            "tag": 200
          }
        }
      ]
    } 
    ```

    If you wanted to target objects whose tag is less than `100`, you could use the payload `{"extra__tag__lt": 100}`. This
    returns:<br><br>

    ```json
    {
      "status": "ok",
      "code": 200,
      "return": 0,
      "message": "Success",
      "data": [
        {
          "id": 0,
          "name": "Test",
          "type": "type1",
          "extra": {
            "tag": 0
          }
        }
      ]
    }

    ```

    ### Less Than or Equal To

    The `lte` filter allows you to target objects whose values are less than or equal to a specific number. This will work
    on both numeric strings and integer data types. Below is an example response without any queries:<br><br>

    ```json
    {
      "status": "ok",
      "code": 200,
      "return": 0,
      "message": "Success",
      "data": [
        {
          "id": 0,
          "name": "Test",
          "type": "type1",
          "extra": {
            "tag": 0
          }
        },
        {
          "id": 1,
          "name": "Other Test",
          "type": "type2",
          "extra": {
            "tag": 100
          }
        },
        {
          "id": 2,
          "name": "Another Test",
          "type": "type1",
          "extra": {
            "tag": 200
          }
        }
      ]
    }

    ```

    If you wanted to target objects whose tag is less than or equal to `100`, you could use the
    payload `{"extra__tag__lte": 100}`. This returns:<br><br>

    ```json
    {
      "status": "ok",
      "code": 200,
      "return": 0,
      "message": "Success",
      "data": [
        {
          "id": 0,
          "name": "Test",
          "type": "type1",
          "extra": {
            "tag": 0
          }
        },
        {
          "id": 1,
          "name": "Other Test",
          "type": "type2",
          "extra": {
            "tag": 100
          }
        }
      ]
    }

    ```

    ### Greater Than 

    The `gt` filter allows you to target objects whose values are greater than a specific number. This will work on both numeric strings and integer data types. Below is an example response without any queries:<br><br>

    ```json
    {
      "status": "ok",
      "code": 200,
      "return": 0,
      "message": "Success",
      "data": [
        {
          "id": 0,
          "name": "Test",
          "type": "type1",
          "extra": {
            "tag": 0
          }
        },
        {
          "id": 1,
          "name": "Other Test",
          "type": "type2",
          "extra": {
            "tag": 100
          }
        },
        {
          "id": 2,
          "name": "Another Test",
          "type": "type1",
          "extra": {
            "tag": 200
          }
        }
      ]
    }

    ```

    If you wanted to target objects whose tag is greater than `100`, you could use the payload `{"extra__tag__gt": 100}`.
    This returns:<br><br>

    ```json
    {
      "status": "ok",
      "code": 200,
      "return": 0,
      "message": "Success",
      "data": [
        {
          "id": 2,
          "name": "Another Test",
          "type": "type1",
          "extra": {
            "tag": 200
          }
        }
      ]
    }

    ```

    ### Greater Than or Equal To

    The `lte` filter allows you to target objects whose values are greater than or equal to a specific number. This will
    work on both numeric strings and integer data types. Below is an example response without any queries:<br><br>

    ```json
    {
      "status": "ok",
      "code": 200,
      "return": 0,
      "message": "Success",
      "data": [
        {
          "id": 0,
          "name": "Test",
          "type": "type1",
          "extra": {
            "tag": 0
          }
        },
        {
          "id": 1,
          "name": "Other Test",
          "type": "type2",
          "extra": {
            "tag": 100
          }
        },
        {
          "id": 2,
          "name": "Another Test",
          "type": "type1",
          "extra": {
            "tag": 200
          }
        }
      ]
    }

    ```

    If you wanted to target objects whose tag is greater than or equal to `100`, you could use the
    payload `{"extra__tag__gte": 100}`. This returns:<br><br>

    ```json
    {
      "status": "ok",
      "code": 200,
      "return": 0,
      "message": "Success",
      "data": [
        {
          "id": 1,
          "name": "Other Test",
          "type": "type2",
          "extra": {
            "tag": 100
          }
        },
        {
          "id": 2,
          "name": "Another Test",
          "type": "type1",
          "extra": {
            "tag": 200
          }
        }
      ]
    }

    ```

    </details>

    <details>
      <summary>Obtaining Object IDs</summary>

    You may notice some API endpoints require an object `id` to update or delete objects. These IDs are not stored values,
    rather pfSense uses the object's array index value to locate and identify objects. Unless specified otherwise, API
    endpoints will use the same array index value (as returned in the `data` response field) to locate objects when updating
    or deleting. Some important items to note about these IDs:<br><br>

    - pfSense starts arrays with an index of 0. If you use a loop counter to determine the ID of a specific object, you must
      start that counter at 0.
    - These IDs are dynamic. For example, if you have 3 static route objects stored (IDs `0`, `1`, and `2`) and you _delete_
      the object with ID `1`, pfSense will resort the array so the object with ID `2` will now have an ID of `1`.
    - API queries will retain the object's ID in the response. In the event that the `data` response field is no longer a
      sequential array due to the query, the `data` field will be represented as an associative array with the array items`
      key being the objects ID.

    </details>

    ### Requirements for queries:

    - API call must be a successful GET request and return `0` in the `return` field.
    - Endpoints must return an array of objects in the data field (
      e.g. `[{"id": 0, "name": "Test"}, {"id": 1, "name": "Other Test"}]`).
    - At least two objects must be present within the data field to support queries.

    # Limitations

    There are a few key limitations to keep in mind while using this API:<br><br>

    - pfSense's XML configuration was not designed for quick simultaneous writes like a traditional database. It may be
      necessary to delay API calls in sequence to prevent unexpected behavior such as configuration overwrites.
    - By design, values stored in pfSense's XML configuration can only be parsed as strings, arrays or objects. This means
      that even though request data requires data to be of a certain type, it will not necessarily be stored as that type.
      Data read from the API may be represented differently than the format it was requested as.

components:
  responses:
    AuthenticationFailed:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
      description: Authentication failed
    Success:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
      description: Success
  schemas:
    Response:
      properties:
        status:
          description: HTTP status message.
          type: string
        code:
          description: HTTP status code.
          type: integer
        return:
          description: API response/error code.
          type: integer
        message:
          description: API response message.
          type: string
        data:
          description: API response data.
          example: { }
          oneOf:
            - type: array
            - type: object
      type: object
  securitySchemes:
    local:
      type: http
      scheme: basic
    token:
      type: apiKey
      in: header
      name: Authorization
    jwt:
      bearerFormat: JWT
      scheme: bearer
      type: http
security:
  - local: [ ]
  - token: [ ]
  - jwt: [ ]
paths:
  /api/v1/access_token:
    post:
      operationId: APIAccessTokenCreate
      description: Receive a temporary access token using your pfSense local database
        credentials. Basic authentication must be used to authenticate on this endpoint
        and this token is only applicable when the API is configured to use the JWT
        authentication type.
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      security:
        - local: [ ]
      summary: Request JWT access token
      tags:
        - Access Token
  /api/v1/diagnostics/command_prompt:
    post:
      operationId: APIDiagnosticsCommandPromptCreate
      description: 'Execute a shell command.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-diagnostics-command`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                shell_cmd:
                  description: Shell command to execute on pfSense. Interactive commands
                    are not supported and may result in the API being  unable to respond
                    to the request.
                  type: string
              required:
                - shell_cmd
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Execute shell command
      tags:
        - Diagnostics > Command Prompt
  /api/v1/firewall/alias:
    delete:
      operationId: APIFirewallAliasDelete
      description: 'Delete an existing alias.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-alias-edit`]'
      parameters:
        - description: Name of alias to delete. This alias cannot be in use elsewhere
            in configuration.
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: 'Specify whether or not you would like this alias to be applied
          immediately, or simply written to the configuration to be applied later.
          If you are creating modifying multiple aliases at once it is best to set
          this to false and apply the changes afterwards using the `/api/v1/firewall/apply`
          endpoint.

          _Note: currently this defaults to always reload the firewall filter after
          in order to remain backwards compatible with previous releases, this will
          be changed to not reload the filter by default in a future release._'
          in: query
          name: apply
          schema:
            default: true
            type: boolean
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete firewall alias
      tags:
        - Firewall > Alias
    get:
      operationId: APIFirewallAliasRead
      description: 'Read existing firewall aliases.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-aliases`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read firewall aliases
      tags:
        - Firewall > Alias
    post:
      operationId: APIFirewallAliasCreate
      description: 'Add a new host, network or port firewall alias.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-alias-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                address:
                  default: [ ]
                  description: Host, network or port values to add to the alias.
                  items:
                    type: string
                  type: array
                apply:
                  default: true
                  description: 'Specify whether or not you would like this alias to
                    be applied immediately, or simply written to the configuration
                    to be applied later. If you are creating multiple aliases at once
                    it is best to set this to false and apply the changes afterwards
                    using the `/api/v1/firewall/apply` endpoint.

                    _Note: currently this defaults to always reload the firewall filter
                    after in order to remain backwards compatible with previous releases,
                    this will be changed to not reload the filter by default in a
                    future release._'
                  type: boolean
                descr:
                  default: ''
                  description: Description of alias.
                  type: string
                detail:
                  default: [ ]
                  description: Descriptions for the `address` values. Descriptions
                    must match the order the that they are specified in the `address`
                    array. If you pass in less `detail` values than `address` values,
                    a default auto-created detail will be applied to the remaining
                    values.
                  items:
                    type: string
                  type: array
                name:
                  description: Name of the new alias. _Only alpha-numeric and underscore
                    characters are allowed, other characters will be replaced._
                  type: string
                type:
                  description: Type of alias.
                  enum:
                    - host
                    - network
                    - port
                  type: string
              required:
                - name
                - type
                - address
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create firewall alias
      tags:
        - Firewall > Alias
    put:
      operationId: APIFirewallAliasUpdate
      description: 'Modify an existing firewall alias.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-alias-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                address:
                  description: Host, network or port values to add to the alias. Existing
                    values will be overwritten.
                  items:
                    type: string
                  type: array
                apply:
                  default: true
                  description: 'Specify whether or not you would like this alias to
                    be applied immediately, or simply written to the configuration
                    to be applied later. If you are modifying multiple aliases at
                    once it is best to set this to false and apply the changes afterwards
                    using the `/api/v1/firewall/apply` endpoint.

                    _Note: currently this defaults to always reload the firewall filter
                    after in order to remain backwards compatible with previous releases,
                    this will be changed to not reload the filter by default in a
                    future release._'
                  type: boolean
                descr:
                  description: Description of alias.
                  type: string
                detail:
                  description: Descriptions for the `address` values. Descriptions
                    must match the order the that they are specified in the `address`
                    array. If you pass in less `detail` values than `address` values,
                    a default auto-created detail will be applied to the remaining
                    values. Existing values will be overwritten.
                  items:
                    type: string
                  type: array
                id:
                  description: Name of the existing alias to update.
                  type: string
                name:
                  description: New name of the alias. _Only alpha-numeric and underscore
                    characters are allowed, other characters will be replaced._
                  type: string
                type:
                  description: Type of alias.
                  enum:
                    - host
                    - network
                    - port
                  type: string
              required:
                - id
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update firewall alias
      tags:
        - Firewall > Alias
  /api/v1/firewall/alias/entry:
    delete:
      operationId: APIFirewallAliasEntryDelete
      description: 'Delete existing entry from an existing firewall alias.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-alias-edit`]'
      parameters:
        - description: Name of alias to delete address values from.
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: Host, network or port value to remove from the alias.
          in: query
          name: address
          required: true
          schema:
            type: string
        - description: "Specify whether or not you would like this alias change to be\
          \ applied immediately, or simply written to the configuration to be applied\
          \ later. When modifying multiple aliases it is best to set this to  false\
          \ and apply the changes afterwards using the `/api/v1/firewall/apply`  endpoint.\
          \ \n_Note: currently this defaults to always reload the firewall filter\
          \ after in order to remain backwards compatible with previous releases,\
          \ this will be changed to not reload the filter by default in a future release._"
          in: query
          name: apply
          schema:
            default: true
            type: boolean
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Remove firewall alias entry
      tags:
        - Firewall > Alias > Entry
    post:
      operationId: APIFirewallAliasEntryCreate
      description: 'Add new entries to an existing firewall alias.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-alias-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                address:
                  default: [ ]
                  description: Host, network or port values to add to the alias.
                  items:
                    type: string
                  type: array
                apply:
                  default: true
                  description: "Specify whether or not you would like this alias change\
                    \ to be applied immediately, or simply written to the configuration\
                    \ to be applied later. When modifying multiple aliases it is best\
                    \ to set this to  false and apply the changes afterwards using\
                    \ the `/api/v1/firewall/apply`  endpoint. \n_Note: currently this\
                    \ defaults to always reload the firewall filter after in order\
                    \ to remain backwards compatible with previous releases, this\
                    \ will be changed to not reload the filter by default in a future\
                    \ release._"
                  type: boolean
                detail:
                  default: [ ]
                  description: Descriptions for the `address` values. Descriptions
                    must match the order the that they are specified in the `address`
                    array. If you pass in less `detail` values than `address` values,
                    a default auto-created detail will be applied to the remaining
                    values.
                  items:
                    type: string
                  type: array
                name:
                  description: Name of alias to add new address values to.
                  type: string
              required:
                - name
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Add firewall alias entries
      tags:
        - Firewall > Alias > Entry
  /api/v1/firewall/alias/advanced:
    get:
      operationId: APIFirewallAliasAdvancedRead
      description: 'Read existing advanced alias settings.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-advanced-firewall`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read advanced alias settings
      tags:
        - Firewall > Alias > Advanced
    put:
      operationId: APIFirewallAliasAdvancedUpdate
      description: 'Update advanced firewall alias settings.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-advanced-firewall`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                aliasesresolveinterval:
                  description: Interval (in seconds) at which hostnames in firewall aliases are updated.
                  type: integer
                checkaliasesurlcert:
                  description: Enable or disable certificate verification when updating aliases via URL.
                  type: boolean
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update advanced alias settings
      tags:
        - Firewall > Alias > Advanced
  /api/v1/firewall/apply:
    post:
      operationId: APIFirewallApplyCreate
      description: 'Apply pending firewall changes. This will reload all firewall
        items.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-rules`,
        `page-firewall-rules-edit`, `page-firewall-aliases`, `page-firewall-alias-edit`,
        `page-firewall-nat-1-1`, `page-firewall-nat-1-1-edit`, `page-firewall-nat-outbound`,
        `page-firewall-nat-outbound-edit`, `page-firewall-nat-portforward`, `page-firewall-nat-portforward-edit`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Apply firewall changes
      tags:
        - Firewall > Apply
  /api/v1/firewall/nat/one_to_one:
    delete:
      operationId: APIFirewallNATOneToOneDelete
      description: 'Delete an existing NAT 1:1 mapping by ID.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-nat-1-1-edit`]'
      parameters:
        - description: ID of the mapping to delete. Refer to the 'Obtaining Object IDs'
            section in the documentation intro for help obtaining this ID.
          in: query
          name: id
          required: true
          schema:
            type: integer
        - description: Specify whether or not you would like this deletion to be applied
            immediately, or simply written to the configuration to be applied later.
            If you are modifying multiple mappings at once it is best to set this to
            false and apply the changes afterwards using the `/api/v1/firewall/apply`
            endpoint.
          in: query
          name: apply
          schema:
            default: false
            type: boolean
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete NAT 1-to-1 mapping
      tags:
        - Firewall > NAT > One-To-One
    get:
      operationId: APIFirewallNATOneToOneRead
      description: 'Read existing 1:1 NAT mappings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-nat-1-1`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read NAT 1-to-1 mappings
      tags:
        - Firewall > NAT > One-To-One
    post:
      operationId: APIFirewallNATOneToOneCreate
      description: 'Create a new NAT 1:1 mapping.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-nat-1-1-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: false
                  description: Specify whether or not you would like this mapping
                    to be applied immediately, or simply written to the configuration
                    to be applied later. If you are modifying multiple mappings at
                    once it is best to set this to false and apply the changes afterwards
                    using the `/api/v1/firewall/apply` endpoint.
                  type: boolean
                descr:
                  default: ''
                  description: Description for the mapping.
                  type: string
                disabled:
                  default: false
                  description: Disable this mapping.
                  type: boolean
                dst:
                  description: Destination address of the mapping. This may be a single
                    IP, network CIDR, alias name, or interface. When specifying an
                    interface, you may use the real interface ID (e.g. igb0), the
                    descriptive interface name, or the pfSense ID (e.g. wan, lan,
                    optx). To use only the  interface's assigned address, add `ip`
                    to the end of the interface name otherwise  the entire interface's
                    subnet is implied. To negate the context of the destination address,
                    you may prefix the value with `!`.
                  type: string
                external:
                  description: External IPv4 or IPv6 address to map traffic to.
                  type: string
                interface:
                  description: Interface the mapping will apply to. You may specify
                    either the interface's descriptive name, the pfSense ID (wan,
                    lan, optx), or the real interface ID (e.g. igb0).
                  type: string
                natreflection:
                  description: NAT reflection mode to use for this rule. Leave unspecified
                    to use system default.
                  enum:
                    - enable
                    - disable
                  type: string
                nobinat:
                  default: false
                  description: Exclude the address from a later, more general rule.
                  type: boolean
                src:
                  description: Source address of the mapping. This may be a single
                    IP, network CIDR, alias name, or interface. When specifying an
                    interface, you may use the real interface ID (e.g. igb0), the
                    descriptive interface name, or the pfSense ID (e.g. wan, lan,
                    optx). To use only the  interface's assigned address, add `ip`
                    to the end of the interface name otherwise  the entire interface's
                    subnet is implied. To negate the context of the source address,
                    you may prefix the value with `!`.
                  type: string
                top:
                  default: false
                  description: Place this firewall rule at the top of the access control
                    list.
                  type: boolean
              required:
                - interface
                - src
                - dst
                - external
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create NAT 1-to-1 mapping
      tags:
        - Firewall > NAT > One-To-One
    put:
      operationId: APIFirewallNATOneToOneUpdate
      description: 'Update an existing NAT 1:1 mapping.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-nat-1-1-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: false
                  description: Specify whether or not you would like this mapping
                    to be applied immediately, or simply written to the configuration
                    to be applied later. If you are modifying multiple mappings at
                    once it is best to set this to false and apply the changes afterwards
                    using the `/api/v1/firewall/apply` endpoint.
                  type: boolean
                descr:
                  description: Description for the mapping.
                  type: string
                disabled:
                  description: Disable this mapping.
                  type: boolean
                dst:
                  description: Destination address of the mapping. This may be a single
                    IP, network CIDR, alias name, or interface. When specifying an
                    interface, you may use the real interface ID (e.g. igb0), the
                    descriptive interface name, or the pfSense ID (e.g. wan, lan,
                    optx). To use only the  interface's assigned address, add `ip`
                    to the end of the interface name otherwise  the entire interface's
                    subnet is implied. To negate the context of the destination address,
                    you may prefix the value with `!`.
                  type: string
                external:
                  description: External IPv4 or IPv6 address to map traffic to.
                  type: string
                id:
                  description: ID of the mapping to update. Refer to the 'Obtaining
                    Object IDs' section in the documentation intro for help obtaining
                    this ID.
                  type: integer
                interface:
                  description: Interface the mapping will apply to. You may specify
                    either the interface's descriptive name, the pfSense ID (wan,
                    lan, optx), or the real interface ID (e.g. igb0).
                  type: string
                natreflection:
                  description: NAT reflection mode to use for this rule. Leave unspecified
                    to use system default.
                  enum:
                    - enable
                    - disable
                  type: string
                nobinat:
                  description: Exclude the address from a later, more general rule.
                  type: boolean
                src:
                  description: Source address of the mapping. This may be a single
                    IP, network CIDR, alias name, or interface. When specifying an
                    interface, you may use the real interface ID (e.g. igb0), the
                    descriptive interface name, or the pfSense ID (e.g. wan, lan,
                    optx). To use only the  interface's assigned address, add `ip`
                    to the end of the interface name otherwise  the entire interface's
                    subnet is implied. To negate the context of the source address,
                    you may prefix the value with `!`.
                  type: string
                top:
                  default: false
                  description: Place this firewall rule at the top of the access control
                    list.
                  type: boolean
              required:
                - id
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update NAT 1-to-1 mapping
      tags:
        - Firewall > NAT > One-To-One
  /api/v1/firewall/nat/outbound:
    get:
      operationId: APIFirewallNATOutboundRead
      description: 'Read outbound NAT settings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-nat-outbound`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read outbound NAT settings
      tags:
        - Firewall > NAT > Outbound
    put:
      operationId: APIFirewallNATOutboundUpdate
      description: 'Update outbound NAT settings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-nat-outbound`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: true
                  description: 'Specify whether or not you would like this change
                    to be applied immediately, or simply written to the configuration
                    to be applied later. If you are modifying multiple mappings at
                    once it is best to set this to false and apply the changes afterwards
                    using the `/api/v1/firewall/apply` endpoint.

                    _Note: currently this defaults to always reload the firewall filter
                    after in order to remain backwards compatible with previous releases,
                    this will be changed to not reload the filter by default in a
                    future release._'
                  type: boolean
                mode:
                  description: Set outbound NAT mode.
                  enum:
                    - automatic
                    - hybrid
                    - advanced
                  type: string
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update outbound NAT settings
      tags:
        - Firewall > NAT > Outbound
  /api/v1/firewall/nat/outbound/mapping:
    delete:
      operationId: APIFirewallNATOutboundMappingDelete
      description: 'Delete an existing outbound NAT mapping.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-nat-outbound-edit`]'
      parameters:
        - description: ID of the outbound NAT mapping to delete. Refer to the 'Obtaining
            Object IDs' section in the documentation intro for help obtaining this ID.
          in: query
          name: id
          required: true
          schema:
            type: integer
        - description: Specify whether or not you would like this change to be applied
            immediately, or simply written to the configuration to be applied later.
            If you are modifying multiple mappings at once it is best to set this to
            false and apply the changes afterwards using the `/api/v1/firewall/apply`
            endpoint.
          in: query
          name: apply
          schema:
            default: false
            type: boolean
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete outbound NAT mapping
      tags:
        - Firewall > NAT > Outbound > Mapping
    get:
      operationId: APIFirewallNATOutboundMappingRead
      description: 'Read existing outbound NAT mappings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-nat-outbound`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read outbound NAT mappings
      tags:
        - Firewall > NAT > Outbound > Mapping
    post:
      operationId: APIFirewallNATOutboundMappingCreate
      description: 'Create new outbound NAT mapping.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-nat-outbound-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: false
                  description: Specify whether or not you would like this mapping
                    to be applied immediately, or simply written to the configuration
                    to be applied later. If you are modifying multiple mappings at
                    once it is best to set this to false and apply the changes afterwards
                    using the `/api/v1/firewall/apply` endpoint.
                  type: boolean
                descr:
                  default: ''
                  description: Description of this mapping.
                  type: string
                disabled:
                  default: false
                  description: Disable this mapping.
                  type: boolean
                dst:
                  description: Destination address of the mapping. This may be a single
                    IP, network CIDR, alias name or `any`. To negate the context of
                    the  address, you may prefix the address with `!`
                  type: string
                dstport:
                  description: TCP and/or UDP destination port or port range to apply
                    to this mapping. You may specify `any` to match any destination
                    port. This parameter is required when `protocol` is set to `tcp`,
                    `udp`, or `tcp/udp`.
                  type: string
                interface:
                  description: Set which interface the mapping will apply to. You
                    may specify either the interface's descriptive name, the pfSense
                    ID (wan, lan, optx), or the physical interface id (e.g. igb0).
                  type: string
                natport:
                  description: External TCP and/or UDP source port or range used for
                    remapping the original source port on connections  matching the
                    rule.
                  type: string
                nonat:
                  default: false
                  description: Do not NAT traffic matching this mapping.
                  type: boolean
                poolopts:
                  description: Outbound NAT pool option for load balancing. This is
                    only applicable if the `target` is a subnet that  contains more
                    than 1 IP address.
                  enum:
                    - round-robin
                    - round-robin sticky-address
                    - random
                    - random sticky-address
                    - source-hash
                    - bitmask
                  type: string
                protocol:
                  description: Transfer protocol the mapping will apply to.
                  enum:
                    - any
                    - tcp
                    - udp
                    - tcp/udp
                    - icmp
                    - esp
                    - ah
                    - gre
                    - ipv6
                    - igmp
                    - pim
                    - ospf
                  type: string
                source_hash_key:
                  description: Custom key hash to use when utilizing the `source-hash`
                    NAT pool option. Value must start with `0x` following a 32 digit
                    hex value. If this field is not specified, a random key hash will
                    be generated. This parameter is only available when `poolopts`
                    is set to `source-hash`.
                  type: string
                src:
                  description: Set the source address of the firewall rule. This must
                    be an IP, CIDR, alias or `any`.
                  type: string
                srcport:
                  description: TCP and/or UDP source port, port range or port alias
                    to apply to this mapping. You may specify `any` to match any source
                    port. This parameter is required when `protocol` is set to `tcp`,
                    `udp`, or `tcp/udp`.
                  type: string
                staticnatport:
                  default: false
                  description: Enable use of a static NAT port.
                  type: boolean
                target:
                  description: External IP to map this traffic to. This may be an
                    IP address, IP subnet, alias, or empty string to use the Interface
                    address.
                  type: string
                top:
                  default: false
                  description: Place this mapping at the top of the access control
                    list.
                  type: boolean
              required:
                - interface
                - protocol
                - src
                - dst
                - target
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create outbound NAT mapping
      tags:
        - Firewall > NAT > Outbound > Mapping
    put:
      operationId: APIFirewallNATOutboundMappingUpdate
      description: 'Update an existing outbound NAT mapping.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-nat-outbound-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: false
                  description: Specify whether or not you would like this mapping
                    to be applied immediately, or simply written to the configuration
                    to be applied later. If you are modifying multiple mappings at
                    once it is best to set this to false and apply the changes afterwards
                    using the `/api/v1/firewall/apply` endpoint.
                  type: boolean
                descr:
                  default: ''
                  description: Description of this mapping.
                  type: string
                disabled:
                  default: false
                  description: Disable this mapping.
                  type: boolean
                dst:
                  description: Destination address of the mapping. This may be a single
                    IP, network CIDR, alias name or `any`. To negate the context of
                    the  address, you may prefix the address with `!`
                  type: string
                dstport:
                  description: TCP and/or UDP destination port or port range to apply
                    to this mapping. You may specify `any` to match any destination
                    port. This parameter is required when `protocol` is set to `tcp`,
                    `udp`, or `tcp/udp`.
                  type: string
                id:
                  description: ID of the outbound NAT mapping to update. Refer to
                    the 'Obtaining Object IDs' section in the documentation intro
                    for help obtaining this ID.
                  type: integer
                interface:
                  description: Set which interface the mapping will apply to. You
                    may specify either the interface's descriptive name, the pfSense
                    ID (wan, lan, optx), or the physical interface id (e.g. igb0).
                  type: string
                natport:
                  description: External TCP and/or UDP source port or range used for
                    remapping the original source port on connections  matching the
                    rule.
                  type: string
                nonat:
                  default: false
                  description: Do not NAT traffic matching this mapping.
                  type: boolean
                poolopts:
                  description: Outbound NAT pool option for load balancing. This is
                    only applicable if the `target` is a subnet that  contains more
                    than 1 IP address.
                  enum:
                    - round-robin
                    - round-robin sticky-address
                    - random
                    - random sticky-address
                    - source-hash
                    - bitmask
                  type: string
                protocol:
                  description: Transfer protocol the mapping will apply to.
                  enum:
                    - any
                    - tcp
                    - udp
                    - tcp/udp
                    - icmp
                    - esp
                    - ah
                    - gre
                    - ipv6
                    - igmp
                    - pim
                    - ospf
                  type: string
                source_hash_key:
                  description: Custom key hash to use when utilizing the `source-hash`
                    NAT pool option. Value must start with `0x` following a 32 digit
                    hex value. If this field is not specified, a random key hash will
                    be generated. This parameter is only available when `poolopts`
                    is set to `source-hash`.
                  type: string
                src:
                  description: Set the source address of the firewall rule. This must
                    be an IP, CIDR, alias or `any`.
                  type: string
                srcport:
                  description: TCP and/or UDP source port, port range or port alias
                    to apply to this mapping. You may specify `any` to match any source
                    port. This parameter is required when `protocol` is set to `tcp`,
                    `udp`, or `tcp/udp`.
                  type: string
                staticnatport:
                  default: false
                  description: Enable use of a static NAT port.
                  type: boolean
                target:
                  description: External IP to map this traffic to. This may be an
                    IP address, IP subnet, alias, or empty string to use the Interface
                    address.
                  type: string
                top:
                  default: false
                  description: Place this mapping at the top of the access control
                    list.
                  type: boolean
              required:
                - id
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update outbound NAT mapping
      tags:
        - Firewall > NAT > Outbound > Mapping
  /api/v1/firewall/nat/port_forward:
    delete:
      operationId: APIFirewallNATOutboundPortForwardDelete
      description: 'Delete an existing NAT rule by ID.<br> _Note: use caution when
        making this call, removing rules may result in API/webConfigurator lockout_<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-nat-portforward-edit`]'
      parameters:
        - description: ID of the port forward rule to update. Refer to the 'Obtaining
            Object IDs' section in the documentation intro for help obtaining this ID.
          in: query
          name: id
          required: true
          schema:
            type: integer
        - description: Specify whether or not you would like this rule to be applied
            immediately, or simply written to the configuration to be applied later.
            If you are modifying multiple rules at once it is best to set this to false
            and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
          in: query
          name: apply
          schema:
            default: false
            type: boolean
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete NAT port forward
      tags:
        - Firewall > NAT > Port Forward
    get:
      operationId: APIFirewallNATOutboundPortForwardRead
      description: 'Read NAT port forward rules.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-nat-portforward`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read NAT port forwards
      tags:
        - Firewall > NAT > Port Forward
    post:
      operationId: APIFirewallNATOutboundPortForwardCreate
      description: 'Create a new NAT port forward rule.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-nat-portforward-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: false
                  description: Specify whether or not you would like this rule to
                    be applied immediately, or simply written to the configuration
                    to be applied later. If you are modifying multiple rules at once
                    it is best to set this to false and apply the changes afterwards
                    using the `/api/v1/firewall/apply` endpoint.
                  type: boolean
                descr:
                  default: ''
                  description: Description for the rule.
                  type: string
                disabled:
                  default: false
                  description: Disable this rule.
                  type: boolean
                dst:
                  description: Destination address of the port forward rule. This
                    may be a single IP, network CIDR, alias name, or interface. When
                    specifying an interface, you may use the real interface ID (e.g.
                    igb0), the descriptive interface name, or the pfSense ID (e.g.
                    wan, lan, optx). To use only the  interface's assigned address,
                    add `ip` to the end of the interface name otherwise  the entire
                    interface's subnet is implied. To negate the context of the destination
                    address, you may prefix the value with `!`.
                  type: string
                dstport:
                  description: TCP and/or UDP destination port, port range or port
                    alias to apply to this rule. You may specify `any` to match any
                    destination port. This parameter is required when `protocol` is
                    set to `tcp`, `udp`, or `tcp/udp`.
                  type: string
                interface:
                  description: Interface the rule will apply to. You may specify either
                    the interface's descriptive name, the pfSense ID (wan, lan, optx),
                    or the real interface ID (e.g. igb0).
                  type: string
                local-port:
                  description: TCP and/or UDP port, port range, or port alias to forward
                    traffic to on the `target`. This parameter is required when `protocol`
                    is set to `tcp`, `udp`, or `tcp/udp`.
                  type: string
                natreflection:
                  description: NAT reflection mode to use for this rule. Leave unspecified
                    to use system default.
                  enum:
                    - enable
                    - disable
                    - purenat
                  type: string
                nordr:
                  default: false
                  description: Disable redirection for traffic matching this rule.
                  type: boolean
                nosync:
                  default: false
                  description: Prevent this rule from automatically syncing to other
                    CARP members.
                  type: boolean
                protocol:
                  description: Transfer protocol this rule will apply to.
                  enum:
                    - tcp
                    - udp
                    - tcp/udp
                    - icmp
                    - esp
                    - ah
                    - gre
                    - ipv6
                    - igmp
                    - pim
                    - ospf
                  type: string
                src:
                  description: Source address of the port forward rule. This may be
                    a single IP, network CIDR, alias name, or interface. When specifying
                    an interface, you may use the real interface ID (e.g. igb0), the
                    descriptive interface name, or the pfSense ID (e.g. wan, lan,
                    optx). To use only the  interface's assigned address, add `ip`
                    to the end of the interface name otherwise  the entire interface's
                    subnet is implied. To negate the context of the source address,
                    you may prefix the value with `!`.
                  type: string
                srcport:
                  description: TCP and/or UDP source port, port range or port alias
                    to apply to this rule. You may specify `any` to match any source
                    port. This parameter is required when `protocol` is set to `tcp`,
                    `udp`, or `tcp/udp`.
                  type: string
                target:
                  description: IP address or alias to forward traffic to.
                  type: string
                top:
                  default: false
                  description: Place this firewall rule at the top of the access control
                    list.
                  type: boolean
              required:
                - interface
                - protocol
                - src
                - dst
                - target
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create NAT port forward
      tags:
        - Firewall > NAT > Port Forward
    put:
      operationId: APIFirewallNATOutboundPortForwardUpdate
      description: 'Update an existing port forward rule.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-nat-portforward-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: false
                  description: Specify whether or not you would like this rule to
                    be applied immediately, or simply written to the configuration
                    to be applied later. If you are modifying multiple rules at once
                    it is best to set this to false and apply the changes afterwards
                    using the `/api/v1/firewall/apply` endpoint.
                  type: boolean
                descr:
                  default: ''
                  description: Description for the rule.
                  type: string
                disabled:
                  default: false
                  description: Disable this rule.
                  type: boolean
                dst:
                  description: Destination address of the port forward rule. This
                    may be a single IP, network CIDR, alias name, or interface. When
                    specifying an interface, you may use the real interface ID (e.g.
                    igb0), the descriptive interface name, or the pfSense ID (e.g.
                    wan, lan, optx). To use only the  interface's assigned address,
                    add `ip` to the end of the interface name otherwise  the entire
                    interface's subnet is implied. To negate the context of the destination
                    address, you may prefix the value with `!`.
                  type: string
                dstport:
                  description: TCP and/or UDP destination port, port range or port
                    alias to apply to this rule. You may specify `any` to match any
                    destination port. This parameter is required when `protocol` is
                    set to `tcp`, `udp`, or `tcp/udp`.
                  type: string
                id:
                  description: ID of the port forward rule to update. Refer to the
                    'Obtaining Object IDs' section in the documentation intro for
                    help obtaining this ID.
                  type: integer
                interface:
                  description: Interface the rule will apply to. You may specify either
                    the interface's descriptive name, the pfSense ID (wan, lan, optx),
                    or the real interface ID (e.g. igb0).
                  type: string
                local-port:
                  description: TCP and/or UDP port, port range, or port alias to forward
                    traffic to on the `target`. This parameter is required when `protocol`
                    is set to `tcp`, `udp`, or `tcp/udp`.
                  type: string
                natreflection:
                  description: NAT reflection mode to use for this rule.
                  enum:
                    - enable
                    - disable
                    - purenat
                  type: string
                nordr:
                  default: false
                  description: Disable redirection for traffic matching this rule.
                  type: boolean
                nosync:
                  default: false
                  description: Prevent this rule from automatically syncing to other
                    CARP members.
                  type: boolean
                protocol:
                  description: Transfer protocol this rule will apply to.
                  enum:
                    - tcp
                    - udp
                    - tcp/udp
                    - icmp
                    - esp
                    - ah
                    - gre
                    - ipv6
                    - igmp
                    - pim
                    - ospf
                  type: string
                src:
                  description: Source address of the port forward rule. This may be
                    a single IP, network CIDR, alias name, or interface. When specifying
                    an interface, you may use the real interface ID (e.g. igb0), the
                    descriptive interface name, or the pfSense ID (e.g. wan, lan,
                    optx). To use only the  interface's assigned address, add `ip`
                    to the end of the interface name otherwise  the entire interface's
                    subnet is implied. To negate the context of the source address,
                    you may prefix the value with `!`.
                  type: string
                srcport:
                  description: TCP and/or UDP source port, port range or port alias
                    to apply to this rule. You may specify `any` to match any source
                    port. This parameter is required when `protocol` is set to `tcp`,
                    `udp`, or `tcp/udp`.
                  type: string
                target:
                  description: IP address or alias to forward traffic to.
                  type: string
                top:
                  default: false
                  description: Place this firewall rule at the top of the access control
                    list.
                  type: boolean
              required:
                - id
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update NAT port forward
      tags:
        - Firewall > NAT > Port Forward
  /api/v1/firewall/rule:
    delete:
      operationId: APIFirewallRuleDelete
      description: 'Delete an existing firewall rule.<br>

        _Note: use caution when making this call, removing certain rules can result
        in API/webConfigurator lockout._<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-rules-edit`]'
      parameters:
        - description: Tracker ID of the rule to delete.
          in: query
          name: tracker
          required: true
          schema:
            type: integer
        - description: Specify whether or not you would like this rule deletion to be
            applied immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple rules at once it Is best to set this
            to false and apply the changes afterwards using the `/api/v1/firewall/apply`
            endpoint.
          in: query
          name: apply
          schema:
            default: false
            type: boolean
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete firewall rule
      tags:
        - Firewall > Rule
    get:
      operationId: APIFirewallRuleRead
      description: 'Read firewall rules.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-rules`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read existing firewall rules.
      tags:
        - Firewall > Rule
    post:
      operationId: APIFirewallRuleCreate
      description: 'Add a new firewall rule.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-rules-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ackqueue:
                  description: Acknowledge traffic shaper queue to apply to this rule.
                    This must be an existing traffic shaper queue and cannot match
                    the `defaultqueue` value.
                  type: string
                apply:
                  default: false
                  description: Specify whether or not you would like this rule to
                    be applied immediately, or simply written to the configuration
                    to be applied later. If you are modifying multiple rules at once
                    it is best to set this to false and apply the changes afterwards
                    using the `/api/v1/firewall/apply` endpoint.
                  type: boolean
                defaultqueue:
                  description: Default traffic shaper queue to apply to this rule.
                    This must be an existing traffic shaper queue name. This field
                    is required when an `ackqueue` value is provided.
                  type: string
                descr:
                  default: ''
                  description: Description for the rule.
                  type: string
                direction:
                  default: any
                  description: Direction of floating firewall rule. This parameter
                    is only avilable when `floating` is set to `true`.
                  enum:
                    - in
                    - out
                    - any
                  type: string
                disabled:
                  default: false
                  description: Disable the rule.
                  type: boolean
                dnpipe:
                  description: Traffic shaper limiter (in) queue for this rule. This
                    must be an existing traffic shaper limiter or queue. This field
                    is required if a `pdnpipe` value is provided.
                  type: string
                dst:
                  description: Destination address of the firewall rule. This may
                    be a single IP, network CIDR, alias name, or interface. When specifying
                    an interface, you may use the real interface ID (e.g. igb0), the
                    descriptive interface name, or the pfSense ID (e.g. wan, lan,
                    optx). To use only the  interface's assigned address, add `ip`
                    to the end of the interface name otherwise  the entire interface's
                    subnet is implied. To negate the context of the destination address,
                    you may prefix the value with `!`.
                  type: string
                dstport:
                  description: TCP and/or UDP destination port, port range or port
                    alias to apply to this rule. You may specify `any` to match any
                    destination port. This parameter is required when `protocol` is
                    set to `tcp`, `udp`, or `tcp/udp`.
                  type: string
                floating:
                  default: false
                  description: Set this rule as a floating firewall rule.
                  type: boolean
                gateway:
                  description: Name of an existing gateway traffic will route over
                    upon match. Do not specify this parameter to assume the default
                    gateway. The gateway specified must be of the same IP type set
                    in `ipprotocol`.
                  type: string
                icmptype:
                  description: ICMP subtypes of the firewall rule. This parameter
                    is only available when `protocol` is set to `icmp`. If this parameter
                    is not specified, all ICMP subtypes will be assumed.
                  items:
                    enum:
                      - althost
                      - dataconv
                      - echorep
                      - echoreq
                      - inforep
                      - inforeq
                      - ipv6-here
                      - ipv6-where
                      - maskrep
                      - maskreq
                      - mobredir
                      - mobregrep
                      - mobregreq
                      - paramprob
                      - photuris
                      - redir
                      - routeradv
                      - routersol
                      - skip
                      - squench
                      - timerep
                      - timereq
                      - timex
                      - trace
                      - unreach
                    type: string
                  type: array
                interface:
                  description: Interface this rule will apply to. You may specify
                    either the interface's descriptive name, the pfSense  interface
                    ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0).
                  type: string
                ipprotocol:
                  description: IP protocol(s) this rule will apply to.
                  enum:
                    - inet
                    - inet6
                    - inet46
                  type: string
                log:
                  default: false
                  description: Enable logging of traffic matching this rule.
                  type: boolean
                pdnpipe:
                  description: Traffic shaper limiter (out) queue for this rule. This
                    must be an existing traffic shaper limiter or queue. This value
                    cannot match the `dnpipe` value and must be a child queue if `dnpipe`
                    is a child queue, or a parent limiter if `dnpipe` is a parent
                    limiter.
                  type: string
                protocol:
                  description: Transfer protocol this rule will apply to.
                  enum:
                    - any
                    - tcp
                    - udp
                    - tcp/udp
                    - icmp
                    - esp
                    - ah
                    - gre
                    - ipv6
                    - igmp
                    - pim
                    - ospf
                    - carp
                    - pfsync
                  type: string
                sched:
                  description: Firewall schedule to apply to this rule. This must
                    be an existing firewall schedule name.
                  type: string
                src:
                  description: Source address of the firewall rule. This may be a
                    single IP, network CIDR, alias name, or interface. When specifying
                    an interface, you may use the real interface ID (e.g. igb0), the
                    descriptive interface name, or the pfSense ID (e.g. wan, lan,
                    optx). To use only the  interface's assigned address, add `ip`
                    to the end of the interface name otherwise  the entire interface's
                    subnet is implied. To negate the context of the source address,
                    you may prefix the value with `!`.
                  type: string
                srcport:
                  description: TCP and/or UDP source port, port range or port alias
                    to apply to this rule. You may specify `any` to match any source
                    port. This parameter is required when `protocol` is set to `tcp`,
                    `udp`, or `tcp/udp`.
                  type: string
                top:
                  default: false
                  description: Place this firewall rule at the top of the access control
                    list.
                  type: boolean
                type:
                  description: Firewall rule type.
                  enum:
                    - pass
                    - block
                    - reject
                  type: string
              required:
                - type
                - interface
                - ipprotocol
                - protocol
                - src
                - dst
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create firewall rule
      tags:
        - Firewall > Rule
    put:
      operationId: APIFirewallRuleUpdate
      description: 'Update an existing firewall rule.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-rules-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ackqueue:
                  description: Acknowledge traffic shaper queue to apply to this rule.
                    This must be an existing traffic shaper queue and cannot match
                    the `defaultqueue` value.
                  type: string
                apply:
                  default: false
                  description: Specify whether or not you would like this rule to
                    be applied immediately, or simply written to the configuration
                    to be applied later. If you are modifying multiple rules at once
                    it is best to set this to false and apply the changes afterwards
                    using the `/api/v1/firewall/apply` endpoint.
                  type: boolean
                defaultqueue:
                  description: Default traffic shaper queue to apply to this rule.
                    This must be an existing traffic shaper queue name. This field
                    is required when an `ackqueue` value is provided.
                  type: string
                descr:
                  description: Description for the rule.
                  type: string
                direction:
                  description: Direction of floating firewall rule. This parameter
                    is only avilable when `floating` is set to `true`.
                  enum:
                    - in
                    - out
                    - any
                  type: string
                disabled:
                  description: Disable the rule.
                  type: boolean
                dnpipe:
                  description: Traffic shaper limiter (in) queue for this rule. This
                    must be an existing traffic shaper limiter or queue. This field
                    is required if a `pdnpipe` value is provided.
                  type: string
                dst:
                  description: Destination address of the firewall rule. This may
                    be a single IP, network CIDR, alias name, or interface. When specifying
                    an interface, you may use the real interface ID (e.g. igb0), the
                    descriptive interface name, or the pfSense ID (e.g. wan, lan,
                    optx). To use only the  interface's assigned address, add `ip`
                    to the end of the interface name otherwise  the entire interface's
                    subnet is implied. To negate the context of the destination address,
                    you may prefix the value with `!`.
                  type: string
                dstport:
                  description: TCP and/or UDP destination port, port range or port
                    alias to apply to this rule. You may specify `any` to match any
                    destination port. This parameter is required when `protocol` is
                    set to `tcp`, `udp`, or `tcp/udp`.
                  type: string
                floating:
                  description: Set this rule as a floating firewall rule.
                  type: boolean
                gateway:
                  description: Name of an existing gateway traffic will route over
                    upon match. Do not specify this parameter to assume the default
                    gateway. The gateway specified must be of the same IP type set
                    in `ipprotocol`.
                  type: string
                icmptype:
                  description: ICMP subtypes of the firewall rule. This parameter
                    is only available when `protocol` is set to `icmp`. If this parameter
                    is not specified, all ICMP subtypes will be assumed.
                  items:
                    enum:
                      - althost
                      - dataconv
                      - echorep
                      - echoreq
                      - inforep
                      - inforeq
                      - ipv6-here
                      - ipv6-where
                      - maskrep
                      - maskreq
                      - mobredir
                      - mobregrep
                      - mobregreq
                      - paramprob
                      - photuris
                      - redir
                      - routeradv
                      - routersol
                      - skip
                      - squench
                      - timerep
                      - timereq
                      - timex
                      - trace
                      - unreach
                    type: string
                  type: array
                interface:
                  description: Interface this rule will apply to. You may specify
                    either the interface's descriptive name, the pfSense  interface
                    ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0).
                  type: string
                ipprotocol:
                  description: IP protocol(s) this rule will apply to.
                  enum:
                    - inet
                    - inet6
                    - inet46
                  type: string
                log:
                  description: Enable logging of traffic matching this rule.
                  type: boolean
                pdnpipe:
                  description: Traffic shaper limiter (out) queue for this rule. This
                    must be an existing traffic shaper limiter or queue. This value
                    cannot match the `dnpipe` value and must be a child queue if `dnpipe`
                    is a child queue, or a parent limiter if `dnpipe` is a parent
                    limiter.
                  type: string
                protocol:
                  description: Transfer protocol this rule will apply to.
                  enum:
                    - any
                    - tcp
                    - udp
                    - tcp/udp
                    - icmp
                    - esp
                    - ah
                    - gre
                    - ipv6
                    - igmp
                    - pim
                    - ospf
                    - carp
                    - pfsync
                  type: string
                sched:
                  description: Firewall schedule to apply to this rule. This must
                    be an existing firewall schedule name.
                  type: string
                src:
                  description: Source address of the firewall rule. This may be a
                    single IP, network CIDR, alias name, or interface. When specifying
                    an interface, you may use the real interface ID (e.g. igb0), the
                    descriptive interface name, or the pfSense ID (e.g. wan, lan,
                    optx). To use only the  interface's assigned address, add `ip`
                    to the end of the interface name otherwise  the entire interface's
                    subnet is implied. To negate the context of the source address,
                    you may prefix the value with `!`.
                  type: string
                srcport:
                  description: TCP and/or UDP source port, port range or port alias
                    to apply to this rule. You may specify `any` to match any source
                    port. This parameter is required when `protocol` is set to `tcp`,
                    `udp`, or `tcp/udp`.
                  type: string
                top:
                  default: false
                  description: Place this firewall rule at the top of the access control
                    list.
                  type: boolean
                tracker:
                  description: Tracker ID of the rule to update.
                  type: integer
                type:
                  description: Firewall rule type.
                  enum:
                    - pass
                    - block
                    - reject
                  type: string
              required:
                - tracker
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update firewall rule
      tags:
        - Firewall > Rule
  /api/v1/firewall/rule/flush:
    put:
      operationId: APIFirewallRuleFlushUpdate
      description: 'Replace all existing firewall rules with a specified set of rules. This allows you to
            create rules at once. If a validation error is encountered when validating the rules, the specific 
            rule entry that triggered the error will be included in the `data` field of the response. <br><br>_Note:
            the pfSense webConfigurator and /api/v1/firewall/rule API endpoint will create the `tracker` ID for
            rules based on the time they were created, and essentially limits creations to 1 rule per second to
            avoid conflicts. To get around this restriction, this endpoint will use randomized `tracker` IDs 
            instead. The potential effects of this are somewhat unknown, proceed with caution._<br><br>

            _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-rules-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                rules:
                  type: array
                  minItems: 1
                  items:
                    type: object
                  description: Firewall rule objects to replace existing firewall rules with. Each object within this
                    array can use any properties available to the /api/v1/firewall/rule endpoint.
                  example:
                    - type: pass
                      interface: wan
                      ipprotocol: inet46
                      protocol: any
                      src: any
                      dst: any
                    - type: pass
                      interface: lan
                      ipprotocol: inet
                      protocol: any
                      src: lan
                      dst: any
                apply:
                  default: false
                  description: Specify whether or not you would like these firewall rules
                    to be applied immediately, or simply written to the configuration
                    to be applied later using the /api/v1/firewall/apply endpoint.
                  type: boolean
              required:
                - rules
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Replace all firewall rules
      tags:
        - Firewall > Rule > Flush
    delete:
      operationId: APIFirewallRuleFlushDelete
      description: 'Delete all existing firewall rules. This is useful for scripts
        that need to setup the firewall rules from scratch.<br><br>_Note: this endpoint
        will not reload the firewall filter automatically, you must make another API
        call to the /api/v1/firewall/apply endpoint to do so. Ensure firewall rules
        are created before reloading the filter to prevent lockout!_.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-rules-edit`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete all firewall rules
      tags:
        - Firewall > Rule > Flush
  /api/v1/firewall/rule/sort:
    put:
      operationId: APIFirewallRuleSortUpdate
      description: 'Sorts firewall rules based on specified criteria. Use caution
        if sorting firewall rules when block rules are present.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-rules`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: false
                  description: Specify whether or not the firewall filter should be
                    reloaded after sorting. If `true`, the firewall filter will be
                    immediately reloaded after sorting. If `false`, the sorted configuration
                    will be written but not applied and a separate call to /api/v1/firewall/apply
                    will be needed to apply changes. This field has no effect when
                    `dry_run` is set to `true`.
                  type: boolean
                dry_run:
                  default: false
                  description: Specify whether or not the API should write the requested
                    sorting to configuration. If `true`, the API will not write the
                    sorted configuration, only return a representation of what the
                    sort will look like. This is helpful when you are unsure if a
                    particular sort will cause issues. If `false`, the sorted firewall
                    rules will be written to configuration.
                  type: boolean
                field:
                  description: Specify the firewall rule field to sort by. This field
                    must be present on at least one firewall rule for any sorting
                    to occur. In most cases, this will be set to `descr` to sort firewall
                    rules by their descriptions.
                  type: string
                option:
                  default: ascend
                  description: Specify sorting option to use when sorting rules. See
                    [https://www.php.net/manual/en/function.array-multisort.php](https://www.php.net/manual/en/function.array-multisort.php)
                    for more information.
                  enum:
                    - ascend
                    - descend
                    - natural
                    - numeric
                    - string
                  type: string
              required:
                - field
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Sort existing firewall rules
      tags:
        - Firewall > Rule > Sort
  /api/v1/firewall/schedule:
    delete:
      operationId: APIFirewallScheduleDelete
      description: 'Delete an existing firewall schedule.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-schedules-edit`]'
      parameters:
        - description: Name of the existing firewall schedule to delete.
          in: query
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete schedule
      tags:
        - Firewall > Schedule
    get:
      operationId: APIFirewallScheduleRead
      description: 'Read all existing firewall schedules.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-schedules`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read schedules
      tags:
        - Firewall > Schedule
    post:
      operationId: APIFirewallScheduleCreate
      description: 'Create a firewall schedule.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-schedules-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                descr:
                  description: Description for this firewall schedule.
                  type: string
                name:
                  description: Name of the firewall schedule. This value must be between
                    1 and 32 characters, and can only contain alphanumerics, underscores
                    and hyphens. This value must be unique from all other firewall
                    schedules.
                  maxLength: 32
                  minLength: 1
                  type: string
                timerange:
                  description: Array of time range objects for this schedule. Each
                    object must contain fields as specified in the /api/v1/firewall/schedule/time_range
                    endpoint. At least 1 time range object must be specified.
                  items:
                    properties:
                      day:
                        type: string
                      month:
                        type: string
                      position:
                        type: string
                      rangedescr:
                        type: string
                    type: object
                  type: array
              required:
                - name
                - timerange
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create schedule
      tags:
        - Firewall > Schedule
    put:
      operationId: APIFirewallScheduleUpdate
      description: 'Update an existing firewall schedule.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-schedules-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                descr:
                  description: Description for this firewall schedule.
                  type: string
                name:
                  description: Name of the existing firewall schedule to update.
                  type: string
                timerange:
                  description: Array of time range objects for this schedule. Each
                    object must contain fields as specified in the /api/v1/firewall/schedule/time_range
                    endpoint. At least 1 time range object must be specified. Any
                    existing values will be overwritten.
                  items:
                    properties:
                      day:
                        type: string
                      month:
                        type: string
                      position:
                        type: string
                      rangedescr:
                        type: string
                    type: object
                  type: array
              required:
                - name
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update schedule
      tags:
        - Firewall > Schedule
  /api/v1/firewall/schedule/time_range:
    delete:
      operationId: APIFirewallScheduleTimeRangeDelete
      description: 'Remove a time range from an existing firewall schedule.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-schedules-edit`]'
      parameters:
        - description: Name of the existing schedule to delete this time range from.
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: Specify the ID of the time range to delete. This will be the
            configuration array index of the `timerange` object within the `schedule`
            object. Refer to the 'Obtaining Object IDs' section  in the documentation
            intro for help obtaining this ID.
          in: query
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete schedule time range
      tags:
        - Firewall > Schedule > Time Range
    post:
      operationId: APIFirewallScheduleTimeRangeCreate
      description: 'Add a new time range to an existing firewall schedule.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-schedules-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                day:
                  description: Comma-separated list of days the schedule will be enabled
                    for. This will directly correspond with each value in the `month`
                    field. For example, to enable this schedule on March 1st, and
                    August 26th, the `month` field should be formatted as `"3,8"`
                    and the `day` field should be formatted as `"1,26"`. This parameter
                    is required if a `position` value was not specified. This parameter
                    has no effect if the `position` field was specified.
                  type: string
                hour:
                  description: Hour range this schedule will be enabled at. This must
                    be two 24-hour time strings formatted as either HH:MM or H:MM
                    separated by `-` (e.g. `9:00-17:00`). The first time range must
                    be less than the second time range. The minutes portion of the
                    time range must be either `00`, `15`, `30`, `45`, or `59`.
                  type: string
                month:
                  description: Comma-separated list of months the schedule will be
                    enabled on. This will directly correspond with each value in the
                    `day` field. For example, to enable this schedule on March 1st,
                    and August 26th, the `month` field should be formatted as `"3,8"`
                    and the `day` field should be formatted as `"1,26"`. This parameter
                    is required if a `position` value was not specified. This parameter
                    has no effect if the `position` field was specified.
                  type: string
                name:
                  description: Name of the existing schedule to add this time range
                    to.
                  type: string
                position:
                  description: Comma-separated list of week days the schedule will
                    be enabled on. Options are `1` for Monday, `2` for Tuesday, `3`
                    for Wednesday, `4` for Thursday, `5` for Friday, `6` for Saturday,
                    and `7` for Sunday.
                  type: string
                rangedescr:
                  description: Description for this time range.
                  type: string
              required:
                - name
                - hour
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create schedule time range
      tags:
        - Firewall > Schedule > Time Range
  /api/v1/firewall/states:
    delete:
      operationId: APIFirewallStatesDelete
      description: 'Delete existing firewall states.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-diagnostics-showstates`]'
      parameters:
        - description: Source IP address or CIDR of the firewall states to kill. This
            parameter is required unless `reset` is set to `true`.
          in: query
          name: source
          schema:
            type: string
        - description: Destination IP address or CIDR of the firewall states to kill.
            This field has no effect when `reset` is set to `true`.
          in: query
          name: destination
          schema:
            type: string
        - description: 'Reset the entire firewall states table instead of specific states.
          If `true`, all firewall states will be killed and the `source` and `destination`
          fields will have no effect. Defaults to `false`. _Note: setting this field
          to `true` when the `async` field is set to `false` OR the `sleep` field
          is set too low may prevent the API from sending a response._'
          in: query
          name: reset
          schema:
            default: false
            type: boolean
        - description: Kill states in the background. In most cases, this is required
            to prevent the state that allows the API to respond from being killed prematurely.
          in: query
          name: async
          schema:
            default: true
            type: boolean
        - description: Amount of time (in seconds) to wait before killing the targeted
            firewall states. Only applicable when `async` is set to `true`.
          in: query
          name: sleep
          schema:
            default: 3
            maximum: 300
            minimum: 0
            type: integer
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete firewall states
      tags:
        - Firewall > States
    get:
      operationId: APIFirewallStatesRead
      description: 'Read the current firewall states table.<br> _Note: excessively
        large states tables may cause API calls to this endpoint to timeout._<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-diagnostics-statessummary`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read firewall states
      tags:
        - Firewall > States
  /api/v1/firewall/states/size:
    get:
      operationId: APIFirewallStatesSizeRead
      description: 'Read information about the firewall state table''s current, default
        and maximum sizes.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-diagnostics-statessummary`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read firewall state size
      tags:
        - Firewall > States > Size
    put:
      operationId: APIFirewallStatesSizeUpdate
      description: 'Modify the maximum number of firewall state table entries allowed
        by the system.<br>_Note: use caution when making this call, setting the maximum
        state table size to a value lower than the current number of firewall state
        entries WILL choke the system._<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-advanced-firewall`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                maximumstates:
                  description: Set the maximum number of firewall state entries. Specify
                    a numeric value with a minimum of `10`, or the string `default`
                    to revert to the system default size.
                  type: string
              required:
                - maximumstates
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update firewall state size
      tags:
        - Firewall > States > Size
  /api/v1/firewall/traffic_shaper:
    delete:
      operationId: APIFirewallTrafficShaperDelete
      description: 'Delete the traffic shaper policy for a specific interface.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-trafficshaper`]'
      parameters:
        - description: Interface of the traffic shaper policy to delete. You may specify
            either the interface's descriptive name, the pfSense ID (wan, lan, optx),
            or the real interface ID (e.g. igb0).
          in: query
          name: interface
          required: true
          schema:
            type: string
        - description: Specify whether or not you would like this change to be applied
            immediately, or simply written to the configuration to be applied later.
            If you are modifying multiple firewall items at once it is best to set this
            to false and apply the changes afterwards using the `/api/v1/firewall/apply`
            endpoint.
          in: query
          name: apply
          schema:
            default: false
            type: boolean
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete traffic shaper
      tags:
        - Firewall > Traffic Shaper
    get:
      operationId: APIFirewallTrafficShaperRead
      description: 'Read all configured traffic shaper policies.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-trafficshaper`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read traffic shapers
      tags:
        - Firewall > Traffic Shaper
    post:
      operationId: APIFirewallTrafficShaperCreate
      description: 'Add a new traffic shaper policy to an interface.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-trafficshaper`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: false
                  description: Specify whether or not you would like this change to
                    be applied immediately, or simply written to the configuration
                    to be applied later. If you are modifying multiple firewall items
                    at once it is best to set this to false and apply the changes
                    afterwards using the `/api/v1/firewall/apply` endpoint.
                  type: boolean
                bandwidth:
                  description: Bandwidth limit of this traffic shaper. This must be
                    a numeric value of `1` or greater. If you have set the `bandwidthtype`
                    to `%`, this value must be `100` or less.
                  minimum: 1
                  type: integer
                bandwidthtype:
                  description: Bandwidth type to use when setting the bandwidth. Choices
                    are `%` for percentage based bandwidth, `b` for bits, `Kb` for
                    kilobits, `Mb` for megabits, and `Gb` for gigabits.
                  enum:
                    - '%'
                    - b
                    - Kb
                    - Mb
                    - Gb
                  type: string
                enabled:
                  default: true
                  description: Enable this traffic shaper policy.
                  type: boolean
                interface:
                  description: Interface the traffic shaper policy will apply to.
                    You may specify either the interface's descriptive name, the pfSense
                    ID (wan, lan, optx), or the real interface ID (e.g. igb0).
                  type: string
                qlimit:
                  description: Queue limit value for this traffic shaper policy. Do
                    not specify this field to assume no limits.
                  minimum: 1
                  type: integer
                scheduler:
                  description: Scheduler type for this traffic shaper.
                  enum:
                    - HFSC
                    - CBQ
                    - FAIRQ
                    - CODELQ
                    - PRIQ
                  type: string
                tbrconfig:
                  description: TBR size for this traffic shaper.
                  minimum: 1
                  type: integer
              required:
                - interface
                - scheduler
                - bandwidthtype
                - bandwidth
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create traffic shaper
      tags:
        - Firewall > Traffic Shaper
    put:
      operationId: APIFirewallTrafficShaperUpdate
      description: 'Update an existing traffic shaper policy for an interface.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-trafficshaper`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: false
                  description: Specify whether or not you would like this change to
                    be applied immediately, or simply written to the configuration
                    to be applied later. If you are modifying multiple firewall items
                    at once it is best to set this to false and apply the changes
                    afterwards using the `/api/v1/firewall/apply` endpoint.
                  type: boolean
                bandwidth:
                  description: Bandwidth limit of this traffic shaper. This must be
                    a numeric value of `1` or greater. If you have set the `bandwidthtype`
                    to `%`, this value must be `100` or less. This parameter is required
                    when a new `bandwidthtype` value is specified.
                  minimum: 1
                  type: integer
                bandwidthtype:
                  description: Bandwidth type to use when setting the bandwidth. Choices
                    are `%` for percentage based bandwidth, `b` for bits, `Kb` for
                    kilobits, `Mb` for megabits, and `Gb` for gigabits. If this value
                    is updated, a new `bandwidth` value will also be required.
                  enum:
                    - '%'
                    - b
                    - Kb
                    - Mb
                    - Gb
                  type: string
                enabled:
                  default: true
                  description: Enable this traffic shaper policy.
                  type: boolean
                interface:
                  description: Interface of the traffic shaper policy to update. You
                    may specify either the interface's descriptive name, the pfSense
                    ID (wan, lan, optx), or the real interface ID (e.g. igb0).
                  type: string
                qlimit:
                  description: Queue limit value for this traffic shaper policy. Do
                    not specify this field to assume no limits.
                  minimum: 1
                  type: integer
                scheduler:
                  description: Scheduler type for this traffic shaper.
                  enum:
                    - HFSC
                    - CBQ
                    - FAIRQ
                    - CODELQ
                    - PRIQ
                  type: string
                tbrconfig:
                  description: TBR size for this traffic shaper.
                  minimum: 1
                  type: integer
              required:
                - interface
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update traffic shaper
      tags:
        - Firewall > Traffic Shaper
  /api/v1/firewall/traffic_shaper/limiter:
    delete:
      operationId: APIFirewallTrafficShaperLimiterDelete
      description: 'Delete traffic shaper limiter.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-trafficshaper-limiter`]'
      parameters:
        - description: Name of the limiter to delete.
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: Specify whether or not you would like this change to be applied
            immediately, or simply written to the configuration to be applied later.
            If you are modifying multiple firewall items at once it is best to set this
            to false and apply the changes afterwards using the `/api/v1/firewall/apply`
            endpoint.
          in: query
          name: apply
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete limiter
      tags:
        - Firewall > Traffic Shaper > Limiter
    get:
      operationId: APIFirewallTrafficShaperLimiterRead
      description: 'Read all existing traffic shaper limiters.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-trafficshaper-limiter`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read limiters
      tags:
        - Firewall > Traffic Shaper > Limiter
    post:
      operationId: APIFirewallTrafficShaperLimiterCreate
      description: 'Create a new traffic shaper limiter.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-trafficshaper-limiter`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: false
                  description: Specify whether or not you would like this change to
                    be applied immediately, or simply written to the configuration
                    to be applied later. If you are modifying multiple firewall items
                    at once it is best to set this to false and apply the changes
                    afterwards using the `/api/v1/firewall/apply` endpoint.
                  type: boolean
                aqm:
                  description: Queue Management Algorithm for this limiter to use.
                  enum:
                    - droptail
                    - codel
                    - pie
                    - red
                    - gred
                  type: string
                bandwidth:
                  description: Bandwidth objects to assign to this limiter. Each object
                    will require fields as specified by the /api/v1/firewall/traffic_shaper/limiter/bandwidth
                    endpoint documentation. At least one bandwidth object must be
                    specified to create the limiter.
                  items:
                    properties:
                      bw:
                        type: integer
                      bwscale:
                        type: string
                      bwsched:
                        type: string
                    type: object
                  type: array
                buckets:
                  description: Buckets for this limiter.
                  maximum: 65535
                  minimum: 16
                  type: integer
                delay:
                  default: 0
                  description: Delay value for this limiter.
                  maximum: 10000
                  minimum: 0
                  type: integer
                description:
                  description: Description for this limiter.
                  type: string
                ecn:
                  default: false
                  description: Enable Explicit Congestion Notification (ECN). Not
                    every AQM and/or scheduler supports ECN.
                  type: boolean
                enabled:
                  default: true
                  description: Enable this limiter.
                  type: boolean
                mask:
                  default: none
                  description: Limiter address mask type.
                  enum:
                    - none
                    - srcaddress
                    - dstaddress
                  type: string
                maskbits:
                  default: 32
                  description: IPv4 subnet bitmask to apply the limiter to. This parameter
                    is only available when `mask` is set to `srcaddress` or `dstaddress`.
                  maximum: 32
                  minimum: 1
                  type: integer
                maskbitsv6:
                  default: 128
                  description: IPv6 subnet bitmask to apply the limiter to. This parameter
                    is only available when `mask` is set to `srcaddress` or `dstaddress`.
                  maximum: 128
                  minimum: 1
                  type: integer
                name:
                  description: Name for this limiter. This value must only contain
                    alphanumerics, underscore and/or hyphens, must be 32 characters
                    or less, and must be unique from all other limiters Including
                    child queues.
                  maxLength: 32
                  minLength: 1
                  type: string
                param_codel_interval:
                  default: 100
                  description: CoDel interval parameter for this limiter. This parameter
                    is only available when `aqm` is set to `codel`.
                  minimum: 0
                  type: integer
                param_codel_target:
                  default: 5
                  description: CoDel target parameter for this limiter. This parameter
                    is only available when `aqm` is set to `codel`.
                  minimum: 0
                  type: integer
                param_fq_codel_flow:
                  default: 1024
                  description: Specify the FQ_CoDel flow parameter for this limiter.
                    This parameter is only available when `sched` is set to `fq_codel`.
                  minimum: 0
                  type: integer
                param_fq_codel_interval:
                  default: 100
                  description: FQ_CoDel interval parameter for this limiter. This
                    parameter is only available when `sched` is set to `fq_codel`.
                  minimum: 0
                  type: integer
                param_fq_codel_limit:
                  default: 10240
                  description: FQ_CoDel limit parameter for this limiter. This parameter
                    is only available when `sched` is set to `fq_codel`.
                  minimum: 0
                  type: integer
                param_fq_codel_quantum:
                  default: 1514
                  description: FQ_CoDel quantum parameter for this limiter. This parameter
                    is only available when `sched` is set to `fq_codel`.
                  minimum: 0
                  type: integer
                param_fq_codel_target:
                  default: 5
                  description: FQ_CoDel target parameter for this limiter. This parameter
                    is only available when `sched` is set to `fq_codel`.
                  minimum: 0
                  type: integer
                param_fq_pie_alpha:
                  default: 125
                  description: FQ_PIE alpha parameter for this limiter. This parameter
                    is only available when `sched` is set to `fq_pie`.
                  minimum: 0
                  type: integer
                param_fq_pie_beta:
                  default: 1250
                  description: FQ_PIE beta parameter for this limiter. This parameter
                    is only available when `sched` is set to `fq_pie`.
                  minimum: 0
                  type: integer
                param_fq_pie_max_burst:
                  default: 150000
                  description: FQ_PIE max burst parameter for this limiter. This parameter
                    is only available when `sched` is set to `fq_pie`.
                  minimum: 0
                  type: integer
                param_fq_pie_max_ecnth:
                  default: 99
                  description: FQ_PIE max ecnth parameter for this limiter. This parameter
                    is only available when `sched` is set to `fq_pie`.
                  minimum: 0
                  type: integer
                param_fq_pie_target:
                  default: 15
                  description: FQ_PIE target parameter for this limiter. This parameter
                    is only available when `sched` is set to `fq_pie`.
                  minimum: 0
                  type: integer
                param_fq_pie_tupdate:
                  default: 15
                  description: FQ_PIE tupdate parameter for this limiter. This parameter
                    is only available when `sched` is set to `fq_pie`.
                  minimum: 0
                  type: integer
                param_gred_max_p:
                  default: 1
                  description: GRED max_p parameter for this limiter. This parameter
                    is only available when `aqm` is set to `gred`.
                  minimum: 1
                  type: integer
                param_gred_max_th:
                  default: 1
                  description: GRED max_th parameter for this limiter. This parameter
                    is only available when `aqm` is set to `gred`.
                  minimum: 1
                  type: integer
                param_gred_min_th:
                  default: 0
                  description: GRED min_th parameter for this limiter. This parameter
                    is only available when `aqm` is set to `gred`.
                  minimum: 0
                  type: integer
                param_gred_w_q:
                  default: 1
                  description: GRED w_q parameter for this limiter. This parameter
                    is only available when `aqm` is set to `gred`.
                  minimum: 1
                  type: integer
                param_pie_alpha:
                  default: 125
                  description: PIE alpha parameter for this limiter. This parameter
                    is only available when `aqm` is set to `pie`.
                  minimum: 0
                  type: integer
                param_pie_beta:
                  default: 1250
                  description: PIE beta parameter for this limiter. This parameter
                    is only available when `aqm` is set to `pie`.
                  minimum: 0
                  type: integer
                param_pie_max_burst:
                  default: 150000
                  description: PIE max burst parameter for this limiter. This parameter
                    is only available when `aqm` is set to `pie`.
                  minimum: 0
                  type: integer
                param_pie_max_ecnth:
                  default: 99
                  description: PIE max ecnth parameter for this limiter. This parameter
                    is only available when `aqm` is set to `pie`.
                  minimum: 0
                  type: integer
                param_pie_target:
                  default: 15
                  description: PIE target parameter for this limiter. This parameter
                    is only available when `aqm` is set to `pie`.
                  minimum: 0
                  type: integer
                param_pie_tupdate:
                  default: 15
                  description: PIE tupdate parameter for this limiter. This parameter
                    is only available when `aqm` is set to `pie`.
                  minimum: 0
                  type: integer
                param_red_max_p:
                  default: 1
                  description: RED max_p parameter for this limiter. This parameter
                    is only available when `aqm` is set to `red`.
                  minimum: 1
                  type: integer
                param_red_max_th:
                  default: 1
                  description: RED max_th parameter for this limiter. This parameter
                    is only available when `aqm` is set to `red`.
                  minimum: 1
                  type: integer
                param_red_min_th:
                  default: 0
                  description: RED min_th parameter for this limiter. This parameter
                    is only available when `aqm` is set to `red`.
                  minimum: 0
                  type: integer
                param_red_w_q:
                  default: 1
                  description: RED w_q parameter for this limiter. This parameter
                    is only available when `aqm` is set to `red`.
                  minimum: 1
                  type: integer
                plr:
                  default: 0
                  description: Packet loss rate value for this limiter.
                  format: float
                  maximum: 1
                  minimum: 0
                  type: number
                qlimit:
                  description: Queue limit value for this limiter.
                  minimum: 1
                  type: integer
                sched:
                  description: Scheduler type for this limiter to use.
                  enum:
                    - wf2q+
                    - fifo
                    - qfq
                    - rr
                    - prio
                    - fq_codel
                    - fq_pie
                  type: string
              required:
                - name
                - bandwidth
                - aqm
                - sched
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create limiter
      tags:
        - Firewall > Traffic Shaper > Limiter
  /api/v1/firewall/traffic_shaper/limiter/bandwidth:
    delete:
      operationId: APIFirewallTrafficShaperLimiterBandwidthDelete
      description: 'Delete a limiter bandwidth setting.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-trafficshaper-limiter`]'
      parameters:
        - description: Name of the parent limiter to delete this bandwidth object from.
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: Specify the ID of the bandwidth object to delete. The ID will
            be the array index of the object to delete within the limiter's bandwith-items
            array. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
          in: query
          name: id
          required: true
          schema:
            type: integer
        - description: Specify whether or not you would like this change to be applied
            immediately, or simply written to the configuration to be applied later.
            If you are modifying multiple firewall items at once it is best to set this
            to false and apply the changes afterwards using the `/api/v1/firewall/apply`
            endpoint.
          in: query
          name: apply
          schema:
            default: false
            type: boolean
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete limiter bandwidth
      tags:
        - Firewall > Traffic Shaper > Limiter > Bandwidth
    post:
      operationId: APIFirewallTrafficShaperLimiterBandwidthCreate
      description: 'Create a limiter bandwidth setting.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-trafficshaper-limiter`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: false
                  description: Specify whether or not you would like this change to
                    be applied immediately, or simply written to the configuration
                    to be applied later. If you are modifying multiple firewall items
                    at once it is best to set this to false and apply the changes
                    afterwards using the `/api/v1/firewall/apply` endpoint.
                  type: boolean
                bw:
                  description: Amount of bandwidth allotted to the parent limiter.
                  minimum: 1
                  type: integer
                bwscale:
                  description: Bandwidth scale type.
                  enum:
                    - b
                    - Kb
                    - Mb
                  type: string
                bwsched:
                  default: none
                  description: Assign a schedule for this bandwidth setting. This
                    must be an existing firewall schedule name.
                  type: string
                name:
                  description: Name of the existing parent limiter to add this bandwidth
                    object to.
                  type: string
              required:
                - name
                - bw
                - bwscale
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create limiter bandwidth
      tags:
        - Firewall > Traffic Shaper > Limiter > Bandwidth
  /api/v1/firewall/traffic_shaper/limiter/queue:
    delete:
      operationId: APIFirewallTrafficShaperLimiterQueueDelete
      description: 'Delete an existing queue from an existing traffic shaper limiter.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-trafficshaper-limiter`]'
      parameters:
        - description: Name of the parent limiter to delete this queue from.
          in: query
          name: limiter
          required: true
          schema:
            type: string
        - description: Name of the queue to delete.
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: Specify whether or not you would like this change to be applied
            immediately, or simply written to the configuration to be applied later.
            If you are modifying multiple firewall items at once it is best to set this
            to false and apply the changes afterwards using the `/api/v1/firewall/apply`
            endpoint.
          in: query
          name: apply
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete limiter queue
      tags:
        - Firewall > Traffic Shaper > Limiter > Queue
    post:
      operationId: APIFirewallTrafficShaperLimiterQueueCreate
      description: 'Add a new child queue to an existing traffic shaper limiter.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-trafficshaper-limiter`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: false
                  description: Specify whether or not you would like this change to
                    be applied immediately, or simply written to the configuration
                    to be applied later. If you are modifying multiple firewall items
                    at once it is best to set this to false and apply the changes
                    afterwards using the `/api/v1/firewall/apply` endpoint.
                  type: boolean
                aqm:
                  description: Queue Management Algorithm for this limiter queue to
                    use.
                  enum:
                    - droptail
                    - codel
                    - pie
                    - red
                    - gred
                  type: string
                buckets:
                  description: Buckets for this limiter queue.
                  maximum: 65535
                  minimum: 16
                  type: integer
                description:
                  description: Description for this limiter queue.
                  type: string
                ecn:
                  default: false
                  description: Enable Explicit Congestion Notification (ECN). This
                    parameter is only available when `aqm` is set  to `codel`, `pie`,
                    `red` or `gred`.
                  type: boolean
                enabled:
                  default: true
                  description: Enable this limiter queue.
                  type: boolean
                limiter:
                  description: Name of the parent limiter to add this queue to.
                  type: string
                mask:
                  default: none
                  description: Limiter address mask type.
                  enum:
                    - none
                    - srcaddress
                    - dstaddress
                  type: string
                maskbits:
                  default: 32
                  description: IPv4 subnet bitmask to apply the limiter queue to.
                    This parameter is only available when `mask` is set to `srcaddress`
                    or `dstaddress`.
                  maximum: 32
                  minimum: 1
                  type: integer
                maskbitsv6:
                  default: 128
                  description: IPv6 subnet bitmask to apply the limiter queue to.
                    This parameter is only available when `mask` is set to `srcaddress`
                    or `dstaddress`.
                  maximum: 128
                  minimum: 1
                  type: integer
                name:
                  description: Name for this limiter queue. This value must only contain
                    alphanumerics, underscore and/or hyphens, must be 32 characters
                    or less, and must be unique from all other limiters including
                    child queues.
                  maxLength: 32
                  minLength: 1
                  type: string
                param_codel_interval:
                  default: 100
                  description: CoDel interval parameter for this limiter queue. This
                    parameter is only available when `aqm` is set to `codel`.
                  minimum: 0
                  type: integer
                param_codel_target:
                  default: 5
                  description: CoDel target parameter for this limiter queue. This
                    parameter is only available when `aqm` is set to `codel`.
                  minimum: 0
                  type: integer
                param_gred_max_p:
                  default: 1
                  description: GRED max_p parameter for this limiter queue. This parameter
                    is only available when `aqm` is set to `gred`.
                  minimum: 1
                  type: integer
                param_gred_max_th:
                  default: 1
                  description: GRED max_th parameter for this limiter queue. This
                    parameter is only available when `aqm` is set to `gred`.
                  minimum: 1
                  type: integer
                param_gred_min_th:
                  default: 0
                  description: GRED min_th parameter for this limiter queue. This
                    parameter is only available when `aqm` is set to `gred`.
                  minimum: 0
                  type: integer
                param_gred_w_q:
                  default: 1
                  description: GRED w_q parameter for this limiter queue. This parameter
                    is only available when `aqm` is set to `gred`.
                  minimum: 1
                  type: integer
                param_pie_alpha:
                  default: 125
                  description: PIE alpha parameter for this limiter queue. This parameter
                    is only available when `aqm` is set to `pie`.
                  minimum: 0
                  type: integer
                param_pie_beta:
                  default: 1250
                  description: PIE beta parameter for this limiter queue. This parameter
                    is only available when `aqm` is set to `pie`.
                  minimum: 0
                  type: integer
                param_pie_max_burst:
                  default: 150000
                  description: PIE max burst parameter for this limiter queue. This
                    parameter is only available when `aqm` is set to `pie`.
                  minimum: 0
                  type: integer
                param_pie_max_ecnth:
                  default: 99
                  description: PIE max ecnth parameter for this limiter queue. This
                    parameter is only available when `aqm` is set to `pie`.
                  minimum: 0
                  type: integer
                param_pie_target:
                  default: 15
                  description: PIE target parameter for this limiter queue. This parameter
                    is only available when `aqm` is set to `pie`.
                  minimum: 0
                  type: integer
                param_pie_tupdate:
                  default: 15
                  description: Specify the PIE tupdate parameter for this limiter
                    queue. This parameter is only available when `aqm` is set to `pie`.
                  minimum: 0
                  type: integer
                param_red_max_p:
                  default: 1
                  description: RED max_p parameter for this limiter queue. This parameter
                    is only available when `aqm` is set to `red`.
                  minimum: 1
                  type: integer
                param_red_max_th:
                  default: 1
                  description: RED max_th parameter for this limiter queue. This parameter
                    is only available when `aqm` is set to `red`.
                  minimum: 1
                  type: integer
                param_red_min_th:
                  default: 0
                  description: RED min_th parameter for this limiter queue. This parameter
                    is only available when `aqm` is set to `red`.
                  minimum: 0
                  type: integer
                param_red_w_q:
                  default: 1
                  description: RED w_q parameter for this limiter queue. This parameter
                    is only available when `aqm` is set to `red`.
                  minimum: 1
                  type: integer
                plr:
                  default: 0
                  description: Packet loss rate value for this limiter queue.
                  format: float
                  maximum: 1
                  minimum: 0
                  type: number
                qlimit:
                  description: Queue limit value for this limiter queue.
                  minimum: 1
                  type: integer
                weight:
                  description: Weight value of this limiter queue.
                  maximum: 100
                  minimum: 1
                  type: integer
              required:
                - limiter
                - name
                - aqm
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create limiter queue
      tags:
        - Firewall > Traffic Shaper > Limiter > Queue
  /api/v1/firewall/traffic_shaper/queue:
    delete:
      operationId: APIFirewallTrafficShaperQueueDelete
      description: 'Delete a queue from an existing traffic shaper interface.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-trafficshaper-queues`]'
      parameters:
        - description: Parent interface to delete the traffic shaper queue from. You
            may specify either the interface's descriptive name, the pfSense ID (wan,
            lan, optx), or the real interface ID (e.g. igb0).
          in: query
          name: interface
          required: true
          schema:
            type: string
        - description: Name of the queue to delete. This must be an existing queue name
            configured on the parent traffic shaper.
          in: query
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete traffic shaper queue
      tags:
        - Firewall > Traffic Shaper > Queue
    post:
      operationId: APIFirewallTrafficShaperQueueCreate
      description: 'Add a queue to an existing traffic shaper interface.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-trafficshaper-queues`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: false
                  description: Specify whether or not you would like this queue to
                    be applied immediately, or simply written to the configuration
                    to be applied later. If you are modifying multiple firewall items
                    at once it is best to set this to false and apply the changes
                    afterwards using the `/api/v1/firewall/apply` endpoint.
                  type: boolean
                bandwidth:
                  description: Bandwidth limits of this traffic shaper. This must
                    be a numeric value of `1` or greater. If you have set the `bandwidthtype`
                    to `%`, this value must be `100` or less. This parameter is only
                    available when the parent traffic shaper's `scheduler` value is
                    set to `HFSC`,  `CBQ`, or `FAIRQ`. The sum of this value and all
                    other child queues  must be less than the parent traffic shaper's
                    `bandwidth` value.
                  minimum: 1
                  type: integer
                bandwidthtype:
                  default: Mb
                  description: Bandwidth type to use when setting the `bandwidth`
                    value. Choices are `%` for percentage based bandwidth, `b` for
                    bits, `Kb` for kilobits, `Mb` for megabits, and `Gb` for gigabits.
                    This parameter is only available when the parent traffic shaper's
                    `scheduler` value is  set to `HFSC`, `CBQ`, or `FAIRQ`.
                  enum:
                    - '%'
                    - b
                    - Kb
                    - Mb
                    - Gb
                  type: string
                borrow:
                  default: false
                  description: Allow queue to borrow bandwidth from other queues when
                    available. This parameter is only available when the parent traffic
                    shaper's  `scheduler` value is set to `CBQ`.
                  type: boolean
                buckets:
                  description: Bandwidth buckets value for this queue. This parameter
                    is only available when the parent traffic shaper's `scheduler`
                    value is set to `FAIRQ`.
                  type: string
                codel:
                  default: false
                  description: Set the Codel Active Queue option for this queue.
                  type: boolean
                default:
                  default: false
                  description: Set queue as the default for the parent interface.
                  type: boolean
                description:
                  description: Description for this queue.
                  type: string
                ecn:
                  default: false
                  description: Set the Explicit Congestion Notification option for
                    this queue.
                  type: boolean
                enabled:
                  default: true
                  description: Enable this traffic queue.
                  type: boolean
                hogs:
                  description: Bandwidth hogs value for this queue. This parameter
                    is only available when the parent traffic shaper's `scheduler`
                    value is set to `FAIRQ`.
                  type: string
                interface:
                  description: Parent interface to create the traffic shaper queue
                    for. You may specify either the interface's descriptive name,
                    the pfSense ID (wan, lan, optx), or the real interface ID (e.g.
                    igb0).
                  type: string
                linkshare:
                  default: false
                  description: Enable the linkshare (shared bandwidth) option for
                    this queue.  This parameter is only available when the parent
                    traffic shaper's  `scheduler` value is set to `HFSC`.
                  type: boolean
                linkshare1:
                  description: First linkshare value (m1). This value must be a bandwidth
                    formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter is
                    only available when the parent traffic shaper's `scheduler` value
                    is set to `HFSC` and the `linkshare` value is set to `true`.
                  type: string
                linkshare2:
                  description: Second linkshare value (d). This value must be an integer
                    of 1 or greater. This value is required if a `linkshare1` value
                    was specified. This parameter is only available when the parent
                    traffic shaper's `scheduler` value is set to `HFSC` and the `linkshare`
                    value is set to `true`.
                  minimum: 1
                  type: integer
                linkshare3:
                  description: Third linkshare value (m2). This value must be a bandwidth
                    formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter is
                    only available when the parent traffic shaper's `scheduler` is
                    set to `HFSC` and the `linkshare` value is enabled. This parameter
                    is required if the`linkshare` value is enabled.
                  type: string
                name:
                  description: Name for this queue. This name's length must be 15
                    characters or less, and unique from all other queues on the parent
                    interface.
                  maxLength: 15
                  minLength: 1
                  type: string
                priority:
                  default: 1
                  description: Priority of this queue. This parameter is only available
                    when the parent's `scheduler` value is set to `FAIRQ`, `CBQ` or
                    `PRIQ`.
                  minimum: 1
                  type: integer
                qlimit:
                  description: Specify the queue limit value for this queue. If set,
                    this must be a value of `1` or greater. Do not specify this parameter
                    to assume no limits.
                  minimum: 1
                  type: integer
                realtime:
                  default: false
                  description: Enable the realtime (minimum bandwidth) option for
                    this queue. This parameter is only available when parent traffic
                    shaper's `scheduler`  is set to `HFSC`.
                  type: boolean
                realtime1:
                  description: First realtime value (m1). This value must be a bandwidth
                    formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter is
                    only available when the parent traffic shaper's `scheduler` is  set
                    to `HFSC` and the `realtime` value is set to `true`.
                  type: string
                realtime2:
                  description: Second realtime value (d). This value must be an integer
                    of 1 or greater. This parameter is required if a `realtime1` value  was
                    specified. This parameter is only available when the parent  traffic
                    shaper's `scheduler` value is set to `HFSC` and the `realtime`
                    value is set to `true`.
                  minimum: 1
                  type: integer
                realtime3:
                  description: Third realtime value (m2). This value must be a bandwidth
                    formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter is  only
                    required when the parent traffic shaper's `scheduler` value is
                    set to `HFSC` and the `realtime` value is set to `true`.
                  type: string
                red:
                  default: false
                  description: Set the Random Early Detection option for this queue.
                  type: boolean
                rio:
                  default: false
                  description: Set the Random Early Detection In and Out option for
                    this queue.
                  type: boolean
                upperlimit:
                  default: false
                  description: Enable the upperlimit (max bandwidth) option for this
                    queue. This parameter is only available when the parent's traffic  shaper's
                    `scheduler` value is set to `HFSC`.
                  type: boolean
                upperlimit1:
                  description: First upper limit value (m1). This value must be a
                    bandwidth formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter
                    is only available when the parent traffic shaper's `scheduler`
                    value is set to `HFSC` and `upperlimit` value is set to `true`.
                  type: string
                upperlimit2:
                  description: Second upper limit value (d). This value must be an
                    integer of `1` or greater. This value is required if an `upperlimit1`
                    value  was specified. This parameter is only available when the
                    parent  traffic shaper's `scheduler` value is set to `HFSC` and
                    `upperlimit`  value is set to `true`.
                  type: integer
                upperlimit3:
                  description: Third upper limit value (m2). This value must be a
                    bandwidth formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter  is
                    only available when the parent traffic shaper's `scheduler`  value
                    is set to `HFSC` and `upperlimit` value is set to `true`.  This
                    parameter is required if the`upperlimit` value is set to `true`.
                  type: string
              required:
                - interface
                - name
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create traffic shapper queue
      tags:
        - Firewall > Traffic Shaper > Queue
  /api/v1/firewall/virtual_ip:
    delete:
      operationId: APIFirewallVirtualIPDelete
      description: 'Delete an existing virtual IP.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-virtualipaddress-edit`]'
      parameters:
        - description: ID of the virtual IP to delete. Refer to the 'Obtaining Object
            IDs' section in the documentation intro for help obtaining this ID.
          in: query
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete virtual IP
      tags:
        - Firewall > Virtual IP
    get:
      operationId: APIFirewallVirtualIPRead
      description: 'Read existing virtual IP assignments.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-virtualipaddresses`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read virtual IPs
      tags:
        - Firewall > Virtual IP
    post:
      operationId: APIFirewallVirtualIPCreate
      description: 'Add a new virtual IP.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-virtualipaddress-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                advbase:
                  default: 1
                  description: Advertisement base for the CARP virtual IP. This parameter
                    is only available when `type` is set to `carp`.
                  maximum: 254
                  minimum: 1
                  type: integer
                advskew:
                  default: 0
                  description: Advertisement skew for the new CARP virtual IP. This
                    parameter is only available when `type` is set to `carp`.
                  maximum: 254
                  minimum: 0
                  type: integer
                descr:
                  default: ''
                  description: Description of the virtual IP.
                  type: string
                interface:
                  description: Interface that will be assigned the virtual IP. You
                    may specify either the interface's descriptive name, the pfSense
                    ID (wan, lan, optx), or the real interface ID (e.g. igb0).
                  type: string
                mode:
                  description: Set the virtual IP mode.
                  enum:
                    - ipalias
                    - carp
                    - proxyarp
                    - other
                  type: string
                noexpand:
                  default: false
                  description: Disable IP expansion for the virtual IP address. This
                    parameter is only available when `type` is set to  `proxyarp`
                    or `other`.
                  type: boolean
                password:
                  description: Password for CARP virtual IP. This parameter is required
                    when `type` is set to `carp`.
                  format: password
                  type: string
                subnet:
                  description: IP or CIDR of the virtual IP.
                  type: string
                vhid:
                  description: VHID for the CARP virtual IP. Only available for `carp`
                    mode. Leave unspecified to automatically detect the next available
                    VHID. This parameter is only available when `type` is set to `carp`.
                  maximum: 254
                  minimum: 0
                  type: integer
              required:
                - mode
                - interface
                - subnet
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create virtual IP
      tags:
        - Firewall > Virtual IP
    put:
      operationId: APIFirewallVirtualIPUpdate
      description: 'Update an existing virtual IP.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-firewall-virtualipaddress-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                advbase:
                  default: 1
                  description: Advertisement base for the CARP virtual IP. This parameter
                    is only available when `type` is set to `carp`.
                  maximum: 254
                  minimum: 1
                  type: integer
                advskew:
                  default: 0
                  description: Advertisement skew for the new CARP virtual IP. This
                    parameter is only available when `type` is set to `carp`.
                  maximum: 254
                  minimum: 0
                  type: integer
                descr:
                  description: Description of the virtual IP.
                  type: string
                id:
                  description: ID of the virtual IP to update. Refer to the 'Obtaining
                    Object IDs' section in the documentation intro for help obtaining
                    this ID.
                  type: integer
                interface:
                  description: Interface that will be assigned the virtual IP. You
                    may specify either the interface's descriptive name, the pfSense
                    ID (wan, lan, optx), or the real interface ID (e.g. igb0).
                  type: string
                mode:
                  description: Set the virtual IP mode.
                  enum:
                    - ipalias
                    - carp
                    - proxyarp
                    - other
                  type: string
                noexpand:
                  description: Disable IP expansion for the virtual IP address. This
                    parameter is only available when `type` is set to  `proxyarp`
                    or `other`.
                  type: boolean
                password:
                  description: Password for CARP virtual IP. This parameter is required
                    when `type` is set to `carp` and no password is set.
                  format: password
                  type: string
                subnet:
                  description: IP or CIDR of the virtual IP.
                  type: string
                vhid:
                  description: VHID for the CARP virtual IP. Only available for `carp`
                    mode. Leave unspecified to automatically detect the next available
                    VHID. This parameter is only available when `type` is set to `carp`.
                  maximum: 254
                  minimum: 0
                  type: integer
              required:
                - id
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update virtual IP
      tags:
        - Firewall > Virtual IP
  /api/v1/interface:
    delete:
      operationId: APIInterfaceDelete
      description: 'Delete an existing interface. __Note: interface deletions will
        be applied immediately, there is no need to apply interface changes afterwards__<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-assignnetworkports`]'
      parameters:
        - description: Interface ID of interface to delete. You may specify either the
            interface's descriptive name, the pfSense ID (wan, lan, optx), or the physical
            interface id (e.g. igb0).
          in: query
          name: if
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete interface
      tags:
        - Interface
    get:
      operationId: APIInterfaceRead
      description: 'Read interface assignments and configuration.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-assignnetworkports`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read interfaces
      tags:
        - Interface
    post:
      operationId: APIInterfaceCreate
      description: 'Configure a new interface.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-assignnetworkports`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                adv_dhcp_config_advanced:
                  default: false
                  description: 'Enable the IPv4 DHCP advanced configuration options.
                    This enables the DHCP options: `adv_dhcp_send_options`, `adv_dhcp_request_options`,
                    `adv_dhcp_required_options`, `adv_dhcp_option_modifiers`. This
                    parameter is only available when `type` is set to `dhcp`.'
                  type: boolean
                adv_dhcp_config_file_override:
                  default: false
                  description: Enable local DHCP configuration file override. This
                    parameter is only available when `type` is set to `dhcp`.
                  type: boolean
                adv_dhcp_config_file_override_file:
                  description: Set the custom DHCP configuration file's absolute path.
                    This file must exist beforehand. This parameter is only available
                    when `type` is set to `dhcp` and  `adv_dhcp_config_file_override`
                    is set to `true`.
                  type: string
                adv_dhcp_option_modifiers:
                  description: Set a custom IPv4 option modifier. This parameter is
                    only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced`
                    is set to `true`.
                  type: string
                adv_dhcp_pt_backoff_cutoff:
                  description: Set the IPv4 DHCP protocol backoff cutoff interval.
                    Must be numeric value greater than 1. This parameter is only available
                    when `type` is set to `dhcp`.
                  minimum: 1
                  type: integer
                adv_dhcp_pt_initial_interval:
                  description: Set the IPv4 DHCP protocol initial interval. Must be
                    numeric value greater than 1. This parameter is only available
                    when `type` is set to `dhcp`.
                  minimum: 1
                  type: integer
                adv_dhcp_pt_reboot:
                  description: Set the IPv4 DHCP protocol reboot interval. Must be
                    numeric value greater than 1. This parameter is only available
                    when `type` is set to `dhcp`.
                  minimum: 1
                  type: integer
                adv_dhcp_pt_retry:
                  description: Set the IPv4 DHCP protocol retry interval. Must be
                    numeric value greater than 1. This parameter is only available
                    when `type` is set to `dhcp`.
                  minimum: 1
                  type: integer
                adv_dhcp_pt_select_timeout:
                  description: Set the IPv4 DHCP protocol select timeout interval.
                    Must be numeric value greater than 0. This parameter is only available
                    when `type` is set to `dhcp`.
                  minimum: 1
                  type: integer
                adv_dhcp_pt_timeout:
                  description: Set the IPv4 DHCP protocol timeout interval. Must be
                    numeric value greater than 1. This parameter is only available
                    when `type` is set to `dhcp`.
                  minimum: 1
                  type: integer
                adv_dhcp_request_options:
                  description: Set a custom IPv4 request option. This parameter is
                    only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced`
                    is set to `true`.
                  type: string
                adv_dhcp_required_options:
                  description: Set a custom IPv4 required option. This parameter is
                    only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced`
                    is set to `true`.
                  type: string
                adv_dhcp_send_options:
                  description: Set a custom IPv4 send option. This parameter is only
                    available when `type` is set to `dhcp` and `adv_dhcp_config_advanced`
                    is set to `true`.
                  type: string
                alias-address:
                  description: Set the IPv4 DHCP address alias. The value in this
                    field is used as a fixed alias IPv4 address by the DHCP  client.
                    This parameter is only available when `type` is set to `dhcp`.
                  type: string
                alias-subnet:
                  description: Set the IPv4 DHCP address aliases subnet. This parameter
                    is only available when `type` is set to `dhcp`.
                  maximum: 32
                  minimum: 1
                  type: integer
                apply:
                  default: false
                  description: Specify whether or not you would like this interface
                    to be applied immediately, or simply written to the configuration
                    to be applied later. Typically, if you are creating multiple interfaces
                    at once it Is best to set this to false and apply the changes
                    afterwards using the `/api/v1/interface/apply` endpoint. Otherwise,
                    If you are only creating a single interface, you may set this
                    true to apply it immediately.
                  type: boolean
                blockbogons:
                  default: false
                  description: Block bogon networks from routing over this interface.
                  type: boolean
                blockpriv:
                  default: false
                  description: Block RFC1918 traffic from routing over this interface.
                  type: boolean
                descr:
                  description: Descriptive name for the new interface.
                  type: string
                dhcpcvpt:
                  description: Set the DHCP VLAN priority. This parameter is only
                    available when `type` is set to `dhcp` and `dhcpvlanenable` is
                    set to `true`.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
                  type: integer
                dhcphostname:
                  description: Assign IPv4 DHCP hostname. This parameter is only available
                    when `type` is set to `dhcp`.
                  type: string
                dhcprejectfrom:
                  description: Assign IPv4 DHCP rejected servers by IP. This parameter
                    is only available when `type` is set to `dhcp`.
                  items:
                    type: string
                  type: array
                dhcpvlanenable:
                  default: false
                  description: Enable DHCP VLAN prioritization. This parameter is
                    only available when `type` is set to `dhcp`.
                  type: boolean
                enable:
                  default: false
                  description: Enable interface upon creation.
                  type: boolean
                gateway:
                  description: Name of upstream IPv4 gateway for this interface. This
                    is only necessary on WAN/UPLINK interfaces. This parameter is only
                    available when `type` is set to `staticv4`.
                  type: string
                gateway-6rd:
                  description: Set the 6RD interface IPv4 gateway address. This parameter
                    is only required when `type6` is set to `6rd`
                  type: string
                gatewayv6:
                  description: Name of upstream IPv6 gateway for this interface. This
                    is only necessary for WAN/UPLINK interfaces. This parameter is
                    only available when `type6` is set to `staticv6`.
                  type: string
                if:
                  description: Real interface ID to configure.
                  type: string
                ipaddr:
                  description: Interface's static IPv4 address. Required if `type`
                    is set to `staticv4`.
                  type: string
                ipaddrv6:
                  description: Interface's static IPv6 address. Required if `type6`
                    is set to `staticv6`.
                  type: string
                ipv6usev4iface:
                  default: false
                  description: Allow IPv6 to use IPv4 uplink connection.
                  type: boolean
                media:
                  description: Speed/duplex setting for this interface. Options are
                    dependent on physical interface capabilities.
                  type: string
                mss:
                  description: MSS for this interface.
                  maximum: 65535
                  minimum: 576
                  type: string
                mtu:
                  description: MTU for this interface. If a VLAN interface, this value
                    must be greater than parent.
                  maximum: 8192
                  minimum: 1280
                  type: integer
                prefix-6rd:
                  description: Set the 6RD IPv6 prefix assigned by the ISP. This parameter
                    is only required when `type6` is set to `6rd`
                  type: string
                prefix-6rd-v4plen:
                  default: 0
                  description: Set the 6RD IPv4 prefix length. This is typically assigned
                    by the ISP. This parameter is only available when `type6` is set
                    to `6rd`.
                  maximum: 32
                  minimum: 0
                  type: integer
                spoofmac:
                  default: ''
                  description: Custom MAC address to assign to the interface.
                  type: string
                subnet:
                  description: Interface's static IPv4 address's subnet bitmask. Required
                    if `type` is set to `staticv4`.
                  maximum: 32
                  minimum: 1
                  type: integer
                subnetv6:
                  description: Interface's static IPv6 address's subnet bitmask. Required
                    if `type6` is set to `staticv6`.
                  type: string
                track6-interface:
                  description: Set the Track6 dynamic IPv6 interface. This must be
                    a dynamically configured IPv6 interface. You may specify either
                    the interface's descriptive name, the pfSense ID (wan, lan, optx),
                    or the physical interface id (e.g. igb0). This parameter is only
                    required with `type6` is set to `track6`
                  type: string
                track6-prefix-id-hex:
                  default: 0
                  description: Set the IPv6 prefix ID. The value in this field is
                    the (Delegated) IPv6 prefix ID. This determines the configurable
                    network ID based on the dynamic IPv6 connection. The default value
                    is 0. This parameter is only available when `type6` is set to
                    `track6`
                  type: integer
                type:
                  description: IPv4 configuration type.
                  enum:
                    - staticv4
                    - dhcp
                  type: string
                type6:
                  description: IPv6 configuration type.
                  enum:
                    - staticv6
                    - dhcp6
                    - slaac
                    - 6rd
                    - track6
                    - 6to4
                  type: string
              required:
                - if
                - descr
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create interface
      tags:
        - Interface
    put:
      operationId: APIInterfaceUpdate
      description: 'Update an existing interface.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-assignnetworkports`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                adv_dhcp_config_advanced:
                  default: false
                  description: 'Enable the IPv4 DHCP advanced configuration options.
                    This enables the DHCP options: `adv_dhcp_send_options`, `adv_dhcp_request_options`,
                    `adv_dhcp_required_options`, `adv_dhcp_option_modifiers`. This
                    parameter is only available when `type` is set to `dhcp`.'
                  type: boolean
                adv_dhcp_config_file_override:
                  default: false
                  description: Enable local DHCP configuration file override. This
                    parameter is only available when `type` is set to `dhcp`.
                  type: boolean
                adv_dhcp_config_file_override_file:
                  description: Set the custom DHCP configuration file's absolute path.
                    This file must exist beforehand. This parameter is only available
                    when `type` is set to `dhcp` and  `adv_dhcp_config_file_override`
                    is set to `true`.
                  type: string
                adv_dhcp_option_modifiers:
                  description: Set a custom IPv4 option modifier. This parameter is
                    only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced`
                    is set to `true`.
                  type: string
                adv_dhcp_pt_backoff_cutoff:
                  description: Set the IPv4 DHCP protocol backoff cutoff interval.
                    Must be numeric value greater than 1. This parameter is only available
                    when `type` is set to `dhcp`.
                  minimum: 1
                  type: integer
                adv_dhcp_pt_initial_interval:
                  description: Set the IPv4 DHCP protocol initial interval. Must be
                    numeric value greater than 1. This parameter is only available
                    when `type` is set to `dhcp`.
                  minimum: 1
                  type: integer
                adv_dhcp_pt_reboot:
                  description: Set the IPv4 DHCP protocol reboot interval. Must be
                    numeric value greater than 1. This parameter is only available
                    when `type` is set to `dhcp`.
                  minimum: 1
                  type: integer
                adv_dhcp_pt_retry:
                  description: Set the IPv4 DHCP protocol retry interval. Must be
                    numeric value greater than 1. This parameter is only available
                    when `type` is set to `dhcp`.
                  minimum: 1
                  type: integer
                adv_dhcp_pt_select_timeout:
                  description: Set the IPv4 DHCP protocol select timeout interval.
                    Must be numeric value greater than 0. This parameter is only available
                    when `type` is set to `dhcp`.
                  minimum: 1
                  type: integer
                adv_dhcp_pt_timeout:
                  description: Set the IPv4 DHCP protocol timeout interval. Must be
                    numeric value greater than 1. This parameter is only available
                    when `type` is set to `dhcp`.
                  minimum: 1
                  type: integer
                adv_dhcp_request_options:
                  description: Set a custom IPv4 request option. This parameter is
                    only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced`
                    is set to `true`.
                  type: string
                adv_dhcp_required_options:
                  description: Set a custom IPv4 required option. This parameter is
                    only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced`
                    is set to `true`.
                  type: string
                adv_dhcp_send_options:
                  description: Set a custom IPv4 send option. This parameter is only
                    available when `type` is set to `dhcp` and `adv_dhcp_config_advanced`
                    is set to `true`.
                  type: string
                alias-address:
                  description: Set the IPv4 DHCP address alias. The value in this
                    field is used as a fixed alias IPv4 address by the DHCP  client.
                    This parameter is only available when `type` is set to `dhcp`.
                  type: string
                alias-subnet:
                  description: Set the IPv4 DHCP address aliases subnet. This parameter
                    is only available when `type` is set to `dhcp`.
                  maximum: 32
                  minimum: 1
                  type: integer
                apply:
                  default: false
                  description: Specify whether or not you would like this interface
                    to be applied immediately, or simply written to the configuration
                    to be applied later. Typically, if you are creating multiple interfaces
                    at once it Is best to set this to false and apply the changes
                    afterwards using the `/api/v1/interface/apply` endpoint. Otherwise,
                    If you are only creating a single interface, you may set this
                    true to apply it immediately.
                  type: boolean
                blockbogons:
                  default: false
                  description: Block bogon networks from routing over this interface.
                  type: boolean
                blockpriv:
                  default: false
                  description: Block RFC1918 traffic from routing over this interface.
                  type: boolean
                descr:
                  description: Descriptive name for the interface.
                  type: string
                dhcpcvpt:
                  description: Set the DHCP VLAN priority. This parameter is only
                    available when `type` is set to `dhcp` and `dhcpvlanenable` is
                    set to `true`.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
                  type: integer
                dhcphostname:
                  description: Assign IPv4 DHCP hostname. This parameter is only available
                    when `type` is set to `dhcp`.
                  type: string
                dhcprejectfrom:
                  description: Assign IPv4 DHCP rejected servers by IP. This parameter
                    is only available when `type` is set to `dhcp`.
                  items:
                    type: string
                  type: array
                dhcpvlanenable:
                  default: false
                  description: Enable DHCP VLAN prioritization. This parameter is
                    only available when `type` is set to `dhcp`.
                  type: boolean
                enable:
                  default: false
                  description: Enable or disable interface upon update.
                  type: boolean
                gateway:
                  description: Name of upstream IPv4 gateway for this interface. This
                    is only necessary on WAN/UPLINK interfaces. This parameter is only
                    available when `type` is set to `staticv4`.
                  type: string
                gateway-6rd:
                  description: Set the 6RD interface IPv4 gateway address. This parameter
                    is only required when `type6` is set to `6rd`
                  type: string
                gatewayv6:
                  description: Name of upstream IPv6 gateway for this interface. This
                    is only necessary for WAN/UPLINK interfaces. This parameter is
                    only available when `type6` is set to `staticv6`.
                  type: string
                id:
                  description: Interface ID to update. You may specify either the
                    interface's descriptive name, the pfSense ID (wan, lan, optx),
                    or the physical interface id (e.g. igb0).
                  type: string
                if:
                  description: Real interface ID to assign this configuration to.
                  type: string
                ipaddr:
                  description: Interface's static IPv4 address. Required if `type`
                    is set to `staticv4`.
                  type: string
                ipaddrv6:
                  description: Interface's static IPv6 address. Required if `type6`
                    is set to `staticv6`.
                  type: string
                ipv6usev4iface:
                  default: false
                  description: Allow IPv6 to use IPv4 uplink connection.
                  type: boolean
                media:
                  description: Speed/duplex setting for this interface. Options are
                    dependent on physical interface capabilities.
                  type: string
                mss:
                  description: MSS for this interface.
                  maximum: 65535
                  minimum: 576
                  type: string
                mtu:
                  description: MTU for this interface. If a VLAN interface, this value
                    must be greater than parent.
                  maximum: 8192
                  minimum: 1280
                  type: integer
                prefix-6rd:
                  description: Set the 6RD IPv6 prefix assigned by the ISP. This parameter
                    is only required when `type6` is set to `6rd`
                  type: string
                prefix-6rd-v4plen:
                  default: 0
                  description: Set the 6RD IPv4 prefix length. This is typically assigned
                    by the ISP. This parameter is only available when `type6` is set
                    to `6rd`.
                  maximum: 32
                  minimum: 0
                  type: integer
                spoofmac:
                  default: ''
                  description: Custom MAC address to assign to the interface.
                  type: string
                subnet:
                  description: Interface's static IPv4 address's subnet bitmask. Required
                    if `type` is set to `staticv4`.
                  maximum: 32
                  minimum: 1
                  type: integer
                subnetv6:
                  description: Interface's static IPv6 address's subnet bitmask. Required
                    if `type6` is set to `staticv6`.
                  type: string
                track6-interface:
                  description: Set the Track6 dynamic IPv6 interface. This must be
                    a dynamically configured IPv6 interface. You may specify either
                    the interface's descriptive name, the pfSense ID (wan, lan, optx),
                    or the physical interface id (e.g. igb0). This parameter is only
                    required with `type6` is set to `track6`
                  type: string
                track6-prefix-id-hex:
                  default: 0
                  description: Set the IPv6 prefix ID. The value in this field is
                    the (Delegated) IPv6 prefix ID. This determines the configurable
                    network ID based on the dynamic IPv6 connection. The default value
                    is 0. This parameter is only available when `type6` is set to
                    `track6`
                  type: integer
                type:
                  description: IPv4 configuration type. This parameter may be required in order to update
                    specific parameters. For example, this parameter must be set to `staticv4` in order to
                    update the `gateway` parameter.
                  enum:
                    - staticv4
                    - dhcp
                  type: string
                type6:
                  description: IPv6 configuration type. This parameter may be required in order to update
                    specific parameters. For example, this parameter must be set to `staticv6` in order to
                    update the `gatewayv6` parameter.
                  enum:
                    - staticv6
                    - dhcp6
                    - slaac
                    - 6rd
                    - track6
                    - 6to4
                  type: string
              required:
                - id
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update interface
      tags:
        - Interface
  /api/v1/interface/available:
    get:
      operationId: APIInterfaceAvailableRead
      description: 'Read all interfaces available on the system. This will provide details for all interfaces regardless
          if they are currently configured on pfSense.<br><br>


          _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-assignnetworkports`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read all available interfaces
      tags:
        - Interface > Available
  /api/v1/interface/apply:
    get:
      operationId: APIInterfaceApplyRead
      description: 'Check if all pending interface changes have been applied.<br><br>

              _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-assignnetworkports`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Poll interface apply status
      tags:
        - Interface > Apply
    post:
      operationId: APIInterfaceApplyCreate
      description: 'Apply pending interface changes.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-assignnetworkports`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                async:
                  description: 'Apply pending interface changes in the background. This is sometimes necessary to 
                  prevent gateway timeouts when many interfaces are being applied. The status of the interface 
                  application can be polled with a GET request to the /api/v1/interface/apply endpoint.'
                  type: boolean
                  default: false
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Apply interfaces
      tags:
        - Interface > Apply
  /api/v1/interface/bridge:
    delete:
      operationId: APIInterfaceBridgeDelete
      description: 'Delete bridge assignment and configuration.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-bridge-edit`]'
      parameters:
        - description: 'Bridge ID of bridge to delete. Bridges cannot be deleted while
          in use. _Note: This uses the `bridgeif` value (e.g. bridge0, bridge2, etc.)
          NOT the configuration array index like other objects._'
          in: query
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete interface bridge
      tags:
        - Interface > Bridge
    get:
      operationId: APIInterfaceBridgeRead
      description: 'Read bridge assignments and configuration.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-bridge`,
        `page-interfaces-bridge-edit`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read interface bridges
      tags:
        - Interface > Bridge
    post:
      operationId: APIInterfaceBridgeCreate
      description: 'Add a new bridge interface.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-bridge-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                descr:
                  default: ''
                  description: Description for the new bridge.
                  type: string
                members:
                  description: Interface members to add to this bridge. This can be
                    the physical interface ID (e.g. em0), the pfSense interface ID
                    (e.g. wan, lan, optx) or the interface description (e.g. WAN,
                    LAN).
                  items:
                    type: string
                  type: array
              required:
                - members
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create interface bridge
      tags:
        - Interface > Bridge
    put:
      operationId: APIInterfaceBridgeUpdate
      description: 'Update an existing bridge configuration.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-bridge-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                descr:
                  description: New description for the bridge.
                  type: string
                id:
                  description: 'Bridge ID of bridge to update. _Note: This uses the
                    `bridgeif` value (e.g. bridge0, bridge2, etc.) NOT the configuration
                    array index like other objects._'
                  type: string
                members:
                  description: Interface members to assign to this bridge. This can
                    be the physical interface ID (e.g. em0), the pfSense interface
                    ID (e.g. wan, lan, optx) or the interface description (e.g. WAN,
                    LAN). Any existing values will be overwritten.
                  items:
                    type: string
                  type: array
              required:
                - id
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update interface bridge
      tags:
        - Interface > Bridge
  /api/v1/interface/group:
    delete:
      operationId: APIInterfaceGroupDelete
      description: 'Delete interface group and configuration.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-group-edit`]'
      parameters:
        - description: 'Group ID of group to delete.'
          in: query
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete interface group
      tags:
        - Interface > Group
    get:
      operationId: APIInterfaceGroupRead
      description: 'Read interface group and configuration.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-group`,
        `page-interfaces-group-edit`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read interface groups
      tags:
        - Interface > Group
    post:
      operationId: APIInterfaceGroupCreate
      description: 'Add a new interface group.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-group-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                descr:
                  default: ''
                  description: Description for the new interface gropup.
                  type: string
                members:
                  description: Interface members to add to this group. This can be
                    the physical interface ID (e.g. em0), the pfSense interface ID
                    (e.g. wan, lan, optx) or the interface description (e.g. WAN,
                    LAN).
                  items:
                    type: string
                  type: array
                ifname:
                  description: Name of the new interface group.
                  type: string
              required:
                - ifname
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create interface group
      tags:
        - Interface > Group
    put:
      operationId: APIInterfaceGroupUpdate
      description: 'Update an existing interface group configuration.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-group-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                descr:
                  description: New description for the interface group.
                  type: string
                id:
                  description: 'Group ID of interface group to update.'
                  type: string
                members:
                  description: Interface members to assign to this group. This can
                    be the physical interface ID (e.g. em0), the pfSense interface
                    ID (e.g. wan, lan, optx) or the interface description (e.g. WAN,
                    LAN). Any existing values will be overwritten.
                  items:
                    type: string
                  type: array
              required:
                - id
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update interface group
      tags:
        - Interface > Group
  /api/v1/interface/vlan:
    delete:
      operationId: APIInterfaceVLANDelete
      description: 'Delete VLAN assignment and configuration.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-vlan-edit`]'
      parameters:
        - description: ID associated with the VLAN to Delete. Refer to the 'Obtaining
            Object IDs' section in the documentation intro for help obtaining this ID.
          in: query
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete Interface VLAN
      tags:
        - Interface > VLAN
    get:
      operationId: APIInterfaceVLANRead
      description: 'Read VLAN assignments and configuration.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-vlan`,
        `page-interfaces-vlan-edit`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read interface VLANs
      tags:
        - Interface > VLAN
    post:
      operationId: APIInterfaceVLANCreate
      description: 'Add a new VLAN interface.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-vlan-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                descr:
                  default: ''
                  description: Description of the new VLAN interface.
                  type: string
                if:
                  description: Parent interface to add the new VLAN to.
                  type: string
                pcp:
                  description: 802.1q VLAN priority.
                  maximum: 7
                  minimum: 0
                  type: integer
                tag:
                  description: VLAN tag to add to the parent interface.
                  maximum: 4096
                  minimum: 1
                  type: integer
              required:
                - if
                - tag
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create interface VLAN
      tags:
        - Interface > VLAN
    put:
      operationId: APIInterfaceVLANUpdate
      description: 'Modify an existing VLAN configuration


        _Note: Unlike the pfSense webConfigurator, you CAN modify an existing VLAN
        (including parent interface and VLAN tag) while the VLAN is assigned to an
        active interface. When doing so, please expect up to 5 seconds of downtime
        to the associated VLAN while the backend configuration is changed_<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-interfaces-vlan-edit`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                descr:
                  default: ''
                  description: Description of the new VLAN interface.
                  type: string
                id:
                  description: ID associated with the VLAN to update. Refer to the
                    'Obtaining Object IDs' section in the documentation intro for
                    help obtaining this ID.
                  type: integer
                if:
                  description: Parent interface to change the VLAN to.
                  type: string
                pcp:
                  description: 802.1q VLAN priority.
                  maximum: 7
                  minimum: 0
                  type: integer
                tag:
                  description: VLAN tag to change on the parent interface.
                  maximum: 4096
                  minimum: 1
                  type: integer
              required:
                - id
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update interface VLAN
      tags:
        - Interface > VLAN
  /api/v1/routing/apply:
    post:
      operationId: APIRoutingApplyCreate
      description: 'Apply pending routing changes.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-gateways`,
        `page-system-gateways-editgateway`, `page-system-staticroutes`, `page-system-staticroutes-editroute`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Apply routing changes
      tags:
        - Routing > Apply
  /api/v1/routing/gateway:
    delete:
      operationId: APIRoutingGatewayDelete
      description: 'Delete an existing routing gateway.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-gateways-editgateway`]'
      parameters:
        - description: ID of the gateway to delete. Refer to the 'Obtaining Object IDs'
            section in the documentation intro for help obtaining this ID.
          in: query
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete gateway
      tags:
        - Routing > Gateway
    get:
      operationId: APIRoutingGatewayRead
      description: 'Read existing gateways.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-gateways`]

        _Note: This endpoint originally returned verbose routing gateway details.
        This functionality has moved to /api/v1/routing/gateway/detail._'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read gateways
      tags:
        - Routing > Gateway
    post:
      operationId: APIRoutingGatewayCreate
      description: 'Create a new gateway.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-gateways-editgateway`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action_disable:
                  default: false
                  description: Disable any action taken on gateway events for this
                    gateway. This will consider the gateway as always up.
                  type: boolean
                alert_interval:
                  default: 1000
                  description: Time interval (in milliseconds) which alert conditions
                    will be checked. This value must be greater than or equal to the
                    `interval` value.
                  type: integer
                apply:
                  default: false
                  description: Specify whether or not you would like this gateway
                    to be applied immediately, or simply written to the configuration
                    to be applied later. Typically, if you are creating multiple gateways
                    at once it is best to set this to false and apply the changes
                    afterwards using the `/api/v1/routing/apply` endpoint.
                  type: boolean
                data_payload:
                  default: 1
                  description: Data payload to send in ICMP packets sent to the gateway
                    monitor IP.
                  minimum: 1
                  type: integer
                descr:
                  description: Description for this gateway.
                  type: string
                disabled:
                  default: false
                  description: Disable this gateway.
                  type: boolean
                force_down:
                  default: false
                  description: Force this gateway to always be considered down.
                  type: boolean
                gateway:
                  description: IP address of the gateway. This value must be a valid
                    IPv4 address if  `ipprotocol` is set to `inet`, or a valid IPv6  address
                    if `ipprotocol` is set to `inet6`.
                  type: string
                interface:
                  description: Interface the gateway will apply to. You may specify
                    either the interface's descriptive name, the pfSense ID (wan,
                    lan, optx), or the real interface ID (e.g. igb0).
                  type: string
                interval:
                  default: 500
                  description: How often (in milliseconds) gateway monitor ICMP probes
                    will be sent.
                  maximum: 3600000
                  minimum: 1
                  type: integer
                ipprotocol:
                  description: IP protocol this gateway will apply to.
                  enum:
                    - inet
                    - inet6
                  type: string
                latencyhigh:
                  default: 500
                  description: High threshold (in milliseconds) for latency. Any packet
                    that exceeds this threshold will trigger a major latency gateway
                    event. This value must be greater than the `latencylow` value.
                  type: integer
                latencylow:
                  default: 200
                  description: Low threshold (in milliseconds) for latency. Any packet
                    that exceeds this threshold will trigger a minor latency gateway
                    event.
                  minimum: 1
                  type: integer
                loss_interval:
                  default: 2000
                  description: How long (in milliseconds) the gateway monitor will
                    wait for response packets before considering the packet lost.
                    This value must be greater than or equal to the `latencyhigh`
                    value.
                  type: integer
                losshigh:
                  default: 10
                  description: High threshold (in %) for packet loss. If total packet
                    loss exceeds this percentage, a major packet loss gateway event
                    will be triggered. This value must be greater than the `losslow`
                    value.
                  maximum: 100
                  minimum: 1
                  type: integer
                losslow:
                  default: 10
                  description: Low threshold (in %) for packet loss. If total packet
                    loss exceeds this percentage, a minor packet loss gateway event
                    will be triggered.
                  maximum: 100
                  minimum: 1
                  type: integer
                monitor:
                  description: IP address used to monitor this gateway. This is only
                    necessary if the `gateway` IP does not accept ICMP probes. Defaults
                    to the `gateway` value.
                  type: string
                monitor_disable:
                  default: false
                  description: Disable gateway monitoring for this gateway.
                  type: boolean
                name:
                  description: Descriptive name for this gateway. This name must be
                    unique, and can only contain alphanumeric characters and underscores.
                  type: string
                time_period:
                  default: 60000
                  description: Time period (in milliseconds) for gateway monitor metrics
                    to be averaged. This value must be greater than  twice the `interval`
                    value plus the `loss_interval` value.
                  type: integer
                weight:
                  default: 1
                  description: Gateway's weight when utilizing gateway load balancing
                    within a gateway group.
                  maximum: 30
                  minimum: 1
                  type: integer
              required:
                - interface
                - ipprotocol
                - name
                - gateway
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create gateway
      tags:
        - Routing > Gateway
    put:
      operationId: APIRoutingGatewayUpdate
      description: 'Update an existing gateway.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-gateways-editgateway`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action_disable:
                  default: false
                  description: Disable any action taken on gateway events for this
                    gateway. This will consider the gateway as always up.
                  type: boolean
                alert_interval:
                  default: 1000
                  description: Time interval (in milliseconds) which alert conditions
                    will be checked. This value must be greater than or equal to the
                    `interval` value.
                  type: integer
                apply:
                  default: false
                  description: Specify whether or not you would like this gateway
                    to be applied immediately, or simply written to the configuration
                    to be applied later. Typically, if you are creating multiple gateways
                    at once it is best to set this to false and apply the changes
                    afterwards using the `/api/v1/routing/apply` endpoint.
                  type: boolean
                data_payload:
                  default: 1
                  description: Data payload to send in ICMP packets sent to the gateway
                    monitor IP.
                  minimum: 1
                  type: integer
                descr:
                  description: Description for this gateway.
                  type: string
                disabled:
                  default: false
                  description: Disable this gateway.
                  type: boolean
                force_down:
                  default: false
                  description: Force this gateway to always be considered down.
                  type: boolean
                gateway:
                  description: IP address of the gateway. This value must be a valid
                    IPv4 address if  `ipprotocol` is set to `inet`, or a valid IPv6  address
                    if `ipprotocol` is set to `inet6`.
                  type: string
                id:
                  description: ID of the gateway to update. Refer to the 'Obtaining
                    Object IDs' section in the documentation intro for help obtaining
                    this ID.
                  type: integer
                interface:
                  description: Interface the gateway will apply to. You may specify
                    either the interface's descriptive name, the pfSense ID (wan,
                    lan, optx), or the real interface ID (e.g. igb0).
                  type: string
                interval:
                  default: 500
                  description: How often (in milliseconds) gateway monitor ICMP probes
                    will be sent.
                  maximum: 3600000
                  minimum: 1
                  type: integer
                ipprotocol:
                  description: IP protocol this gateway will apply to.
                  enum:
                    - inet
                    - inet6
                  type: string
                latencyhigh:
                  default: 500
                  description: High threshold (in milliseconds) for latency. Any packet
                    that exceeds this threshold will trigger a major latency gateway
                    event. This value must be greater than the `latencylow` value.
                  type: integer
                latencylow:
                  default: 200
                  description: Low threshold (in milliseconds) for latency. Any packet
                    that exceeds this threshold will trigger a minor latency gateway
                    event.
                  minimum: 1
                  type: integer
                loss_interval:
                  default: 2000
                  description: How long (in milliseconds) the gateway monitor will
                    wait for response packets before considering the packet lost.
                    This value must be greater than or equal to the `latencyhigh`
                    value.
                  type: integer
                losshigh:
                  default: 10
                  description: High threshold (in %) for packet loss. If total packet
                    loss exceeds this percentage, a major packet loss gateway event
                    will be triggered. This value must be greater than the `losslow`
                    value.
                  maximum: 100
                  minimum: 1
                  type: integer
                losslow:
                  default: 10
                  description: Low threshold (in %) for packet loss. If total packet
                    loss exceeds this percentage, a minor packet loss gateway event
                    will be triggered.
                  maximum: 100
                  minimum: 1
                  type: integer
                monitor:
                  description: IP address used to monitor this gateway. This is only
                    necessary if the `gateway` IP does not accept ICMP probes. Defaults
                    to the `gateway` value.
                  type: string
                monitor_disable:
                  default: false
                  description: Disable gateway monitoring for this gateway.
                  type: boolean
                name:
                  description: Descriptive name for this gateway. This name must be
                    unique, and can only contain alphanumeric characters and underscores.
                  type: string
                time_period:
                  default: 60000
                  description: Time period (in milliseconds) for gateway monitor metrics
                    to be averaged. This value must be greater than  twice the `interval`
                    value plus the `loss_interval` value.
                  type: integer
                weight:
                  default: 1
                  description: Gateway's weight when utilizing gateway load balancing
                    within a gateway group.
                  maximum: 30
                  minimum: 1
                  type: integer
              required:
                - id
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update gateway
      tags:
        - Routing > Gateway
  /api/v1/routing/gateway/default:
    put:
      operationId: APIRoutingGatewayDefaultUpdate
      description: 'Update the default gateways for IPv4 and/or IPv6. _Note: changing the default gateway can
      prevent you from connecting to the system afterward. Proceed with caution._<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-gateways`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                defaultgw4:
                  description: >-
                    Set the IPv4 default gateway. This must be an existing IPv4 gateway name, `automatic` for automatic
                    gateway selection, or `none` for no default gateway selection for IPv4.
                  type: string
                defaultgw6:
                  description: >-
                    Set the IPv6 default gateway. This must be an existing IPv6 gateway name, `automatic` for automatic
                    gateway selection, or `none` for no default gateway selection for IPv6.
                  type: string
                apply:
                  default: true
                  description: Specify whether or not you would like this change
                    to be applied immediately, or simply written to the configuration
                    to be applied later. If set to `false` you must apply the changes
                    afterwards using the `/api/v1/routing/apply` endpoint.
                  type: boolean
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update default gateways
      tags:
        - Routing > Gateway > Default
  /api/v1/routing/gateway/detail:
    get:
      operationId: APIRoutingGatewayDetailRead
      description: 'Read verbose routing gateway details about both dynamic/system
        gateways and static gateways.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-gateways`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read gateway details
      tags:
        - Routing > Gateway > Detail
  /api/v1/routing/static_route:
    delete:
      operationId: APIRoutingStaticRouteDelete
      description: 'Delete existing static routes. __Note: route deletions will be
        applied immediately, there is no need to apply routing changes afterwards__<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-staticroutes-editroute`]'
      parameters:
        - description: ID of the static route to delete. Refer to the 'Obtaining Object
            IDs' section in the documentation intro for help obtaining this ID.
          in: query
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete static route
      tags:
        - Routing > Static Route
    get:
      operationId: APIRoutingStaticRouteRead
      description: 'Read existing static routes.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-staticroutes`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read static routes
      tags:
        - Routing > Static Route
    post:
      operationId: APIRoutingStaticRouteCreate
      description: 'Create a new static route.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-staticroutes-editroute`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: false
                  description: Specify whether or not you would like this route to
                    be applied immediately, or simply written to the configuration
                    to be applied later. Typically, if you are creating multiple routes
                    at once it Is best to set this to false and apply the changes
                    afterwards using the `/api/v1/routing/apply` endpoint.
                  type: boolean
                descr:
                  default: ''
                  description: Description for this route.
                  type: string
                disabled:
                  default: false
                  description: Disable this route.
                  type: boolean
                gateway:
                  description: Name of the gateway traffic matching this route will
                    use.
                  type: string
                network:
                  description: IPv4 CIDR, IPv6 CIDR or network alias this route will
                    apply to.
                  type: string
              required:
                - network
                - gateway
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create static route
      tags:
        - Routing > Static Route
    put:
      operationId: APIRoutingStaticRouteUpdate
      description: 'Update an existing static route.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-staticroutes-editroute`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: false
                  description: Specify whether or not you would like this route to
                    be applied immediately, or simply written to the configuration
                    to be applied later. Typically, if you are creating multiple routes
                    at once it Is best to set this to false and apply the changes
                    afterwards using the `/api/v1/routing/apply` endpoint.
                  type: boolean
                descr:
                  default: ''
                  description: Description for this route.
                  type: string
                disabled:
                  default: false
                  description: Disable this route.
                  type: boolean
                gateway:
                  description: Name of the gateway traffic matching this route will
                    use.
                  type: string
                id:
                  description: ID of the static route to update. Refer to the 'Obtaining
                    Object IDs' section in the documentation intro for help obtaining
                    this ID.
                  type: integer
                network:
                  description: IPv4 CIDR, IPv6 CIDR or network alias this route will
                    apply to.
                  type: string
              required:
                - id
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update static route
      tags:
        - Routing > Static Route
  /api/v1/services:
    get:
      operationId: APIServicesRead
      description: 'Read available services.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read all service statuses
      tags:
        - Services
  /api/v1/services/ddns:
    get:
      operationId: APIServicesDDNSRead
      description: 'Read configured dynamic DNS settings and statuses.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dynamicdnsclients`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read dynamic DNS configuration
      tags:
        - Services > DDNS
  /api/v1/services/dhcpd:
    get:
      operationId: APIServicesDHCPdRead
      description: 'Read the entire DHCP Server (dhcpd) configuration.<br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dhcpserverpage-services-dhcpserver`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read DHCP Server (dhcpd) configuration
      tags:
        - Services > DHCPD
    put:
      operationId: APIServicesDHCPdUpdate
      description: 'Update the current DHCP Server (dhcpd) configuration for a specified
        interface.<br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dhcpserver`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                defaultleasetime:
                  description: Default DHCP lease time. This must be a value of `60`
                    or greater and must be less than `maxleasetime`. This field can
                    be unset to the system default by passing in an empty string.
                  oneOf:
                    - type: string
                    - type: integer
                denyunknown:
                  description: Deny unknown MAC addresses. If true, you must specify
                    MAC addresses in the `mac_allow` field or add a static DHCP entry
                    to receive DHCP requests.
                  type: boolean
                dnsserver:
                  description: DNS servers to hand out in DHCP leases.
                  items:
                    type: string
                  type: array
                domain:
                  description: Domain name to include in DHCP leass. This must be
                    a valid domain name or an empty string to assume the system default.
                  type: string
                domainsearchlist:
                  description: Search domains to include in DHCP leases. Each entry
                    must be a valid domain name.
                  items:
                    type: string
                  type: array
                enable:
                  description: Enable the DHCP server for this interface.
                  type: boolean
                gateway:
                  description: Gateway to hand out in DHCP leases. This value must
                    be a valid IPv4 address within the interface's subnet. This field
                    can be unset to the system default by passing in an empty string.
                  type: string
                ignorebootp:
                  description: Ignore BOOTP requests.
                  type: boolean
                interface:
                  description: Interface of DHCP server configuration to update. You
                    may specify either the interface's descriptive name, the pfSense
                    ID (wan, lan, optx), or the real interface ID (e.g. igb0). This
                    interface must host a static IPv4 subnet that has more than one
                    available within the subnet.
                  type: string
                mac_allow:
                  description: MAC addresses allowed to register DHCP leases.
                  items:
                    type: string
                  type: array
                mac_deny:
                  description: MAC addresses denied from registering DHCP leases.
                  items:
                    type: string
                  type: array
                maxleasetime:
                  description: Maximum DHCP lease time. This must be a value of `60`
                    or greater and must be greater than `defaultleasetime`. This field
                    can be unset to the system default by passing in an empty string.
                  oneOf:
                    - type: string
                    - type: integer
                numberoptions:
                  description: Set DHCP options. This must be an array of option objects.
                    See documentation for the /api/v1/services/dhcpd/options endpoint
                    to object fields. To unset DHCP options, pass in an empty array.
                  properties:
                    number:
                      type: integer
                    type:
                      type: string
                    value:
                      oneOf:
                        - type: string
                        - type: integer
                        - type: boolean
                  type: object
                range_from:
                  description: DHCP pool's starting IPv4 address. This must be an
                    available address within the interface's subnet and be less than
                    the `range_to` value. This field is required if no `range_from`
                    value has been set previously.
                  type: string
                range_to:
                  description: DHCP pool's ending IPv4 address. This must be an available
                    address within the interface's subnet and be greater than the
                    `range_from` value. This field is required if no `range_to` has
                    been set previously.
                  type: string
                staticarp:
                  description: Create a static ARP entry for DHCP leases on this interface.
                  type: boolean
              required:
                - interface
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update DHCP Server (dhcpd) configuration
      tags:
        - Services > DHCPD
  /api/v1/services/dhcpd/lease:
    get:
      operationId: APIServicesDHCPdLeaseRead
      description: 'Read the current DHCP Server (dhcpd) leases.<br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-dhcpleases`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read DHCP Server (dhcpd) leases
      tags:
        - Services > DHCPD > Lease
  /api/v1/services/dhcpd/options:
    post:
      operationId: APIServicesDHCPdOptionsCreate
      description: 'Set new DHCP Server (dhcpd) option.<br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dhcpserver`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                interface:
                  description: Interface to create the DHCP option for. You may specify
                    either the interface's descriptive name, the pfSense ID (wan,
                    lan, optx), or the real interface ID (e.g. igb0).
                  type: string
                number:
                  description: DHCP option number to set. This must be a value between
                    1 and 254.
                  maximum: 254
                  minimum: 1
                  type: integer
                type:
                  description: DHCP option type.
                  enum:
                    - text
                    - string
                    - boolean
                    - unsigned integer 8
                    - unsigned integer 16
                    - unsigned integer 32
                    - signed integer 8
                    - signed integer 16
                    - signed integer 32
                    - ip-address
                  type: string
                value:
                  description: DHCP option's value. If `type` is set to `text`, this
                    field must be string that does not contain quotations marks. If
                    `type` is set to `string`, this field must be string enclosed
                    in quotes or is a hexadecimal value. If `type` is set to `boolean`,
                    this value must be `true` or `false` as a boolean OR `true`, `false`,
                    `on` or `off` as a string. If `type` is set to `unsigned integer
                    8`, this field must be an integer between `1` and `255`. If `type`
                    is set to `unsigned integer 16`, this field must be an integer
                    between `1` and `65535`. If `type` is set to `unsigned integer
                    32`, this field must be an integer between `1` and `4294967295`.
                    If `type` is set to `signed integer 8`, this field must be an
                    integer between `-128` and `127`. If `type` is set to `signed
                    integer 16`, this field must be an integer between `-32768` and
                    `32767`. If `type` is set to `signed integer 32`, this field must
                    be an integer between `-2147483648` and `2147483647`. If `type`
                    is set to `ip-address`, this field must be a string containing
                    a valid IPv4 address or hostname.
                  oneOf:
                    - type: string
                    - type: integer
                    - type: boolean
              required:
                - interface
                - number
                - type
                - value
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Set DHCP Server (dhcpd) option
      tags:
        - Services > DHCPD > Options
  /api/v1/services/dhcpd/restart:
    post:
      operationId: APIServicesDHCPdRestartCreate
      description: 'Restart the DHCP Server (dhcpd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Restart DHCP Server (dhcpd) service
      tags:
        - Services > DHCPD
  /api/v1/services/dhcpd/start:
    post:
      operationId: APIServicesDHCPdStartCreate
      description: 'Start the DHCP Server (dhcpd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Start DHCP Server (dhcpd) service
      tags:
        - Services > DHCPD
  /api/v1/services/dhcpd/static_mapping:
    delete:
      operationId: APIServicesDHCPdStaticMappingDelete
      description: 'Delete an existing DHCP Server (dhcpd) static mapping.<br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dhcpserver-editstaticmapping`]'
      parameters:
        - description: ID of the static mapping to delete. Refer to the 'Obtaining Object
            IDs' section in the documentation intro for help obtaining this ID.
          in: query
          name: id
          required: true
          schema:
            type: integer
        - description: Interface of the static mapping to delete. You may specify either
            the interface's descriptive name, the pfSense interface ID (e.g. wan, lan,
            optx), or the real interface ID (e.g. igb0).
          in: query
          name: interface
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete DHCP Server (dhcpd) static mapping
      tags:
        - Services > DHCPD > Static Mapping
    get:
      operationId: APIServicesDHCPdStaticMappingRead
      description: 'Read existing DHCP Server (dhcpd) static mappings.<br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dhcpserver-editstaticmapping`]'
      parameters:
        - description: Interface to read static mappings from. You may specify either
            the interface's descriptive name, the pfSense interface ID (e.g. wan, lan,
            optx), or the real interface ID (e.g. igb0).
          in: query
          name: interface
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read DHCP Server (dhcpd) static mappings
      tags:
        - Services > DHCPD > Static Mapping
    post:
      operationId: APIServicesDHCPdStaticMappingCreate
      description: 'Create a new DHCP Server (dhcpd) static mapping.<br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dhcpserver-editstaticmapping`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                arp_table_static_entry:
                  default: false
                  description: Create a static ARP entry for this static mapping.
                  type: boolean
                cid:
                  description: Set a client identifier.
                  type: string
                descr:
                  description: Description for this mapping.
                  type: string
                dnsserver:
                  description: DNS servers to assign this client. Each value must
                    be a valid IPv4 address.
                  items:
                    type: string
                  type: array
                domain:
                  description: Domain for this host.
                  type: string
                domainsearchlist:
                  description: Search domains to assign to this host. Each value must
                    be a valid domain name.
                  items:
                    type: string
                  type: array
                gateway:
                  description: Gateway to assign this host. This value must be a valid
                    IPv4 address within the interface's subnet.
                  type: string
                hostname:
                  description: Hostname for this host.
                  type: string
                interface:
                  description: Interface to assign this static mapping to. You may
                    specify either the interface's descriptive name, the pfSense interface
                    ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0).
                  type: string
                ipaddr:
                  description: IPv4 address the MAC address will be assigned.
                  type: string
                mac:
                  description: MAC address of the host this mapping will apply to.
                  type: string
              required:
                - interface
                - mac
                - ipaddr
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create DHCP Server (dhcpd) static mapping
      tags:
        - Services > DHCPD > Static Mapping
    put:
      operationId: APIServicesDHCPdStaticMappingUpdate
      description: 'Update an existing DHCP Server (dhcpd) static mapping.<br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dhcpserver-editstaticmapping`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                arp_table_static_entry:
                  default: false
                  description: Create a static ARP entry for this static mapping.
                  type: boolean
                cid:
                  description: Set a client identifier.
                  type: string
                descr:
                  description: Description for this mapping.
                  type: string
                dnsserver:
                  description: DNS servers to assign this client. Each value must
                    be a valid IPv4 address.
                  items:
                    type: string
                  type: array
                domain:
                  description: Domain for this host.
                  type: string
                domainsearchlist:
                  description: Search domains to assign to this host. Each value must
                    be a valid domain name.
                  items:
                    type: string
                  type: array
                gateway:
                  description: Gateway to assign this host. This value must be a valid
                    IPv4 address within the interface's subnet. You  may pass in an
                    empty string to revert to the default gateway.
                  type: string
                hostname:
                  description: Hostname for this host.
                  type: string
                id:
                  description: ID of the static mapping to update. Refer to the 'Obtaining
                    Object IDs' section in the documentation intro for help obtaining
                    this ID.
                  type: integer
                interface:
                  description: Interface of the static mapping to update. You may
                    specify either the interface's descriptive name, the pfSense interface
                    ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0).
                  type: string
                ipaddr:
                  description: IPv4 address the MAC address will be assigned.
                  type: string
                mac:
                  description: MAC address of the host this mapping will apply to.
                  type: string
              required:
                - id
                - interface
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update DHCP Server (dhcpd) static mapping
      tags:
        - Services > DHCPD > Static Mapping
  /api/v1/services/dhcpd/stop:
    post:
      operationId: APIServicesDHCPdStopCreate
      description: 'Stop the DHCP Server (dhcpd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Stop DHCP Server (dhcpd) service
      tags:
        - Services > DHCPD
  /api/v1/services/dnsmasq:
    get:
      operationId: APIServicesDnsmasqRead
      description: 'Read the entire DNS Forwarder (dnsmasq) configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsforwarder`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read DNS Forwarder (dnsmasq) configuration
      tags:
        - Services > DNSMASQ
  /api/v1/services/dnsmasq/apply:
    post:
      operationId: APIServicesDnsmasqApplyCreate
      description: 'Apply pending DNS Forwarder (dnsmasq) changes.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsforwarder`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Apply pending DNS Forwarder (dnsmasq) changes
      tags:
        - Services > DNSMASQ
  /api/v1/services/dnsmasq/host_override:
    delete:
      operationId: APIServicesDnsmasqHostOverrideDelete
      description: 'Delete an existing host override from the DNS Forwarder (dnsmasq).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsforwarder-edithost`]'
      parameters:
        - description: ID of the host override to delete. Refer to the 'Obtaining Object
            IDs' section in the documentation intro for help obtaining this ID.
          in: query
          name: id
          required: true
          schema:
            type: integer
        - description: Specify whether or not you would like this host override to be
            applied immediately, or simply written to the configuration to be applied
            later. Typically, if you are modifying multiple host overrides at once it
            Is best to set this to false and apply the changes afterwards using the
            `/api/v1/services/dnsmasq/apply` endpoint.
          in: query
          name: apply
          schema:
            default: false
            type: boolean
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete DNS Forwarder (dnsmasq) host override
      tags:
        - Services > DNSMASQ > Host Override
    get:
      operationId: APIServicesDnsmasqHostOverrideRead
      description: 'Read host overrides from the DNS Forwarder (dnsmasq).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsforwarder`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read DNS Forwarder (dnsmasq) host overrides
      tags:
        - Services > DNSMASQ > Host Override
    post:
      operationId: APIServicesDnsmasqHostOverrideCreate
      description: 'Add a new host override to the DNS Forwarder (dnsmasq).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsforwarder-edithost`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                aliases:
                  default: [ ]
                  description: Host override aliases to associate with this host override.
                    For more information on alias object fields, see documentation
                    for /api/v1/services/dnsmasq/host_override/alias.
                  items:
                    type: object
                  type: array
                apply:
                  default: false
                  description: Specify whether or not you would like this host override
                    to be applied immediately, or simply written to the configuration
                    to be applied later. Typically, if you are modifying multiple
                    host overrides at once it Is best to set this to false and apply
                    the changes afterwards using the `/api/v1/services/dnsmasq/apply`
                    endpoint.
                  type: boolean
                descr:
                  description: Description of the host override.
                  type: string
                domain:
                  description: Domain of the host override.
                  type: string
                host:
                  description: Hostname of the host override.
                  type: string
                ip:
                  description: IPv4 or IPv6 of the host override.
                  type: string
              required:
                - host
                - domain
                - ip
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create DNS Forwarder (dnsmasq) host override
      tags:
        - Services > DNSMASQ > Host Override
    put:
      operationId: APIServicesDnsmasqHostOverrideUpdate
      description: 'Modify an existing host override from the DNS Forwarder (dnsmasq).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsforwarder-edithost`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                aliases:
                  default: [ ]
                  description: Host override aliases to associate with this host override.
                    For more information on alias object fields, see documentation
                    for /api/v1/services/dnsmasq/host_override/alias. Existing entries
                    will be overwritten.
                  items:
                    type: object
                  type: array
                apply:
                  default: false
                  description: Specify whether or not you would like this host override
                    to be applied immediately, or simply written to the configuration
                    to be applied later. Typically, if you are modifying multiple
                    host overrides at once it Is best to set this to false and apply
                    the changes afterwards using the `/api/v1/services/dnsmasq/apply`
                    endpoint.
                  type: boolean
                descr:
                  description: Description of the host override.
                  type: string
                domain:
                  description: Domain of the host override.
                  type: string
                host:
                  description: Hostname of the host override.
                  type: string
                id:
                  description: ID of the host override to update. Refer to the 'Obtaining
                    Object IDs' section in the documentation intro for help obtaining
                    this ID.
                  type: integer
                ip:
                  description: IPv4 or IPv6 of the host override.
                  type: string
              required:
                - id
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update DNS Forwarder (dnsmasq) host override
      tags:
        - Services > DNSMASQ > Host Override
  /api/v1/services/dnsmasq/host_override/alias:
    post:
      operationId: APIServicesDnsmasqHostOverrideAliasCreate
      description: 'Add a new host override alias to the DNS Forwarder (dnsmasq).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsforwarder-edithost`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: false
                  description: Specify whether or not you would like this host override
                    alias to be applied immediately, or simply written to the configuration
                    to be applied later. Typically, if you are creating multiple host
                    override aliases at once it Is best to set this to false and apply
                    the changes afterwards using the `/api/v1/services/dnsmasq/apply`
                    endpoint.
                  type: boolean
                description:
                  description: Description for the alias.
                  type: string
                domain:
                  description: Domain of the alias
                  type: string
                host:
                  description: Hostname of the alias.
                  type: string
                id:
                  description: ID of the host override to apply this alias to. Refer
                    to the 'Obtaining Object IDs' section in the documentation intro
                    for help obtaining this ID.
                  type: integer
              required:
                - id
                - host
                - domain
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create DNS Forwarder (dnsmasq) host override alias
      tags:
        - Services > DNSMASQ > Host Override > Alias
  /api/v1/services/dnsmasq/restart:
    post:
      operationId: APIServicesDnsmasqRestartCreate
      description: 'Restart the DNS Forwarder (dnsmasq) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Restart DNS Forwarder (dnsmasq) service
      tags:
        - Services > DNSMASQ
  /api/v1/services/dnsmasq/start:
    post:
      operationId: APIServicesDnsmasqStartCreate
      description: 'Start the DNS Forwarder (dnsmasq) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Start DNS Forwarder (dnsmasq) service
      tags:
        - Services > DNSMASQ
  /api/v1/services/dnsmasq/stop:
    post:
      operationId: APIServicesDnsmasqStopCreate
      description: 'Stop the DNS Forwarder (dnsmasq) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Stop DNS Forwarder (dnsmasq) service
      tags:
        - Services > DNSMASQ
  /api/v1/services/dpinger/restart:
    post:
      operationId: APIServicesDpingerRestartCreate
      description: 'Restart the Gateway Monitoring (dpinger) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Restart Gateway Monitoring (dpinger) service
      tags:
        - Services > DPINGER
  /api/v1/services/dpinger/start:
    post:
      operationId: APIServicesDpingerStartCreate
      description: 'Start the Gateway Monitoring (dpinger) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Start Gateway Monitoring (dpinger) service
      tags:
        - Services > DPINGER
  /api/v1/services/dpinger/stop:
    post:
      operationId: APIServicesDpingerStopCreate
      description: 'Stop the Gateway Monitoring (dpinger) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Stop Gateway Monitoring (dpinger) service
      tags:
        - Services > DPINGER
  /api/v1/services/ntpd:
    get:
      operationId: APIServicesNTPdRead
      description: 'Read the NTP (ntpd) service configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-ntpd`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read NTP (ntpd) service
      tags:
        - Services > NTPD
    put:
      operationId: APIServicesNTPdUpdate
      description: 'Update the NTP (ntpd) service configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-ntpd`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                clockstats:
                  description: Enable logging of reference clock statistics.
                  type: boolean
                interface:
                  description: Update the interfaces NTP will listen on. You may specify
                    either the physical Interface ID, the pfSense Interface ID or
                    the descriptive Interface name. To match any interface, you may
                    pass in an empty array.
                  items:
                    type: string
                  type: array
                leapsec:
                  description: Update the leap seconds configuration. This should
                    be the contents of the leap seconds file received from the IERS.
                  type: string
                logpeer:
                  description: Enable logging of peer messages.
                  type: boolean
                logsys:
                  description: Enable logging of system messages.
                  type: boolean
                loopstats:
                  description: Enable logging of clock discipline statistics.
                  type: boolean
                orphan:
                  description: Update the orphan mode value. This must be a value
                    between `1` and `15`. Orphan mode allows the system clock to be
                    used when no other clocks are available. The number here specifies
                    the stratum reported during orphan mode and should normally be
                    set to a number high enough to insure that any other servers available
                    to clients are preferred over this server.
                  maximum: 15
                  minimum: 1
                  type: integer
                peerstats:
                  description: Enable logging of NTP peer statistics.
                  type: boolean
                statsgraph:
                  description: Enable RRD graphs of NTP metrics.
                  type: boolean
                time_servers:
                  description: Update the time servers used by the system. Each object
                    may use the parameters available in the /api/v1/services/ntpd/time_server
                    endpoint. To revert to the default timeserver, you may pass in
                    an  empty array. Existing values will be overwritten.
                  items:
                    type: object
                  type: array
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update NTP (ntpd) service
      tags:
        - Services > NTPD
  /api/v1/services/ntpd/restart:
    post:
      operationId: APIServicesNTPdRestartCreate
      description: 'Restart the NTP (ntpd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Restart NTP (ntpd) Service
      tags:
        - Services > NTPD
  /api/v1/services/ntpd/start:
    post:
      operationId: APIServicesNTPdStartCreate
      description: 'Start the NTP (ntpd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Start NTP (ntpd) service
      tags:
        - Services > NTPD
  /api/v1/services/ntpd/stop:
    post:
      operationId: APIServicesNTPdStopCreate
      description: 'Stop the NTP (ntpd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Stop NTP (ntpd) Service
      tags:
        - Services > NTPD
  /api/v1/services/ntpd/time_server:
    delete:
      operationId: APIServicesNTPdTimeServerDelete
      description: 'Delete an existing NTP time server from the NTP (ntpd) configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-ntpd`]'
      parameters:
        - description: IP or hostname of the NTP time server to delete. If more than
            one time server exists with this value, only the first match will be deleted.
            In the case that the last remaining time server was deleted, the default
            time server `pool.ntp.org` will be written.
          in: query
          name: timeserver
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete NTP (ntpd) time server
      tags:
        - Services > NTPD > Time Server
    post:
      operationId: APIServicesNTPdTimeServerCreate
      description: 'Add a new NTP time server to the NTP (ntpd) configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-ntpd`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ispool:
                  default: false
                  description: Specify whether or not this time server represents
                    an NTP server pool or a single NTP server.
                  type: boolean
                noselect:
                  default: false
                  description: Prevent this NTP server from being selected for time.
                  type: boolean
                prefer:
                  default: false
                  description: Set this NTP time server as a preferred NTP time server.
                    If `true`, this time server will take preference over other time
                    servers.
                  type: boolean
                timeserver:
                  description: IP or hostname of the NTP time server to add.
                  type: string
              required:
                - timeserver
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Add NTP (ntpd) time server
      tags:
        - Services > NTPD > Time Server
  /api/v1/services/openvpn/server:
    delete:
      operationId: APIServicesOpenVPNServerDelete
      description: 'Delete OpenVPN Server instance.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-openvpn-server`]'
      parameters:
        - description: This id indicates the id of the server you want to delete.
            This id is static and not an index of an entry in the config array.
            Best to first get all servers and get the id of the one you want to
            delete before calling this endpoint.
          in: query
          name: vpnid
          required: true
          schema:
            oneOf:
              - type: integer
              - type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                vpnid:
                  description: This id indicates the id of the server you want to delete.
                    This id is static and not an index of an entry in the config array.
                    Best to first get all servers and get the id of the one you want to
                    delete before calling this endpoint.
                  oneOf:
                    - type: integer
                    - type: string
                  example: "1"
              required:
                - vpnid
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete OpenVPN Server
      tags:
        - Services > OpenVPN > Server
    get:
      operationId: APIServicesOpenVPNServerRead
      description: 'Read All OpenVPN Server instances.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-openvpn-server`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read OpenVPN Server
      tags:
        - Services > OpenVPN > Server
    post:
      operationId: APIServicesOpenVPNServerCreate
      description: 'Create OpenVPN Server instance.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-openvpn-server`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                mode:
                  default: 'p2p_tls'
                  description: The role for the server, which specifies how peers connect to a
                    server instance. Changing this also affects which options the
                    GUI displays on the rest of the page.
                  enum:
                    - p2p_tls
                    - p2p_shared_key
                    - server_tls
                    - server_user
                    - server_tls_user
                  type: string
                protocol:
                  default: 'udp4'
                  description: The IP protocol clients will use to connect to this VPN.
                  enum:
                    - udp4
                    - udp6
                    - tcp4
                    - tcp6
                    - udp
                    - tcp
                  type: string
                authmode:
                  default: 'Local Database'
                  description: One or more authentication servers to use when checking user credentials.
                    This can be the Local Database (user manager) or it can be a RADIUS or LDAP server
                    configured in the user manager.

                    Selecting multiple entries will use each one in turn. If authentication against an entry fails,
                    the VPN will try the next server. It will continue this process until it has tried
                    all selected entries.

                    This field is only present when using a Server Mode (`server_user` or `server_tls_user`)
                    which requires user authentication.
                  type: string
                dev_mode:
                  default: 'tun'
                  description: OpenVPN can run in one of two device modes.
                  enum:
                    - tun
                    - tap
                  type: string
                interface:
                  default: 'wan'
                  description: 'Selects the interface, VIP, or failover group that the OpenVPN instance will use 
                    when communicating with peers.
                    This also controls which interface the traffic from the instance will exit.
                    Interface can be provided as Interface ID (e.g. `wan`, `lan`, `opt1`, etc.),
                    Interface physical name (e.g. `igb0`, `vtnet`, etc.) or Interface descriptive
                    name (e.g. `MY_LAN`, `MY_WAN`, etc.).
                    VIP can be provided as description, subnet or uniqid.
                    Failover group can be provided as group name.

                    _Note: If you are using a failover group, the failover group must be configured to use the same_.'
                  type: string
                local_port:
                  description: The port number upon which OpenVPN will listen for incoming connections from peers.
                    Firewall rules must allow traffic to this port and this port must be specified in the client configuration.

                    The port for each server must be unique for each interface when using a standard
                    UDP or TCP Protocol choice and must be globally unique if using a multihome Protocol.

                    Omitting this will default to next available port.
                  type: integer
                  example: 1194
                description:
                  description: Enter a description for this VPN instance, for reference.
                  type: string
                  example: 'My VPN'
                custom_options:
                  description: Custom options may be added in using the Custom option box separated by a semicolon (;)
                    and the firewall will pass the custom directives to OpenVPN.
                  type: string
                  example: 'push "route 10.0.0.0 255.255.255.0";'
                tls:
                  default: ''
                  description: TLS, or Transport Layer Security, can provide session
                    authentication and encryption to ensure the validity of peers and to protect the control channel.
                    Paste the TLS key. This is not necessary for mode `p2p_shared_key`.
                    Options are `""` or `true` for automatic TLS key generation, `false` to disable TLS
                    or a raw TLS key as a string.
                    Omitting disable TLS configuration.
                  type: string
                  example: '-----BEGIN OpenVPN Static key V1-----
                              db8701afd882d746be67f084bae68470
                              54a99ef3b61864cfe1864c6c02584335
                              fe706df150250bf7e294b8c35911817c
                              133c8d9b505573ebeb65259bc54c70ae
                              88cc3163fd11a20f73d2c6fb3eea7cc2
                              fdaefcde510486adc0acbb9481b3aef4
                              930db91806469218b2a4f92e71787cf4
                              635f5b3f773fefc28d492738d2648673
                              8fa9b23d41e5999f58c3f0004a59ecda
                              119162e598764d9c8f6b99e7054f3ea4
                              fdb4461913d2e3273a8a0db29332406a
                              237bcfccca2315445ef809eaa933fa30
                              a9a7510d2d167033edfd3580a824f3e1
                              1af57da6eee89e6318ec29c67da8a19d
                              7c9d74c7afac6ee0f813a0278a6261d7
                              a28e7bdbf1743527346bda359bc92fc9
                            -----END OpenVPN Static key V1-----'
                tls_type:
                  default: 'auth'
                  description: Enter TLS Key Usage Mode. This is not necessary for mode `p2p_shared_key`.
                  enum:
                    - auth
                    - crypt
                  type: string
                tlsauth_keydir:
                  default: 'default'
                  description: The direction in which this VPN endpoint uses the TLS key.
                    The TLS Key Direction must be set to complementary values on the server and clients.
                    The default behavior uses 0 on server instances and 1 on client instances.

                    Enter TLS keydir direction. This is not necessary for mode `p2p_shared_key`.
                  enum:
                    - default
                    - direction-0
                    - direction-1
                    - both-directions
                  type: string
                shared_key:
                  default: ''
                  description: Enter Shared Key. This is only mandatory for mode `p2p_shared_key`.
                    Options are `""` for automatic shared key generation and a raw shared key.
                  type: string
                  example: '-----BEGIN OpenVPN Static key V1-----
                              db8701afd882d746be67f084bae68470
                              54a99ef3b61864cfe1864c6c02584335
                              fe706df150250bf7e294b8c35911817c
                              133c8d9b505573ebeb65259bc54c70ae
                              88cc3163fd11a20f73d2c6fb3eea7cc2
                              fdaefcde510486adc0acbb9481b3aef4
                              930db91806469218b2a4f92e71787cf4
                              635f5b3f773fefc28d492738d2648673
                              8fa9b23d41e5999f58c3f0004a59ecda
                              119162e598764d9c8f6b99e7054f3ea4
                              fdb4461913d2e3273a8a0db29332406a
                              237bcfccca2315445ef809eaa933fa30
                              a9a7510d2d167033edfd3580a824f3e1
                              1af57da6eee89e6318ec29c67da8a19d
                              7c9d74c7afac6ee0f813a0278a6261d7
                              a28e7bdbf1743527346bda359bc92fc9
                            -----END OpenVPN Static key V1-----'
                caref:
                  description: Specify the unique reference ID of the certificate signing authority.
                  type: string
                  example: 61c7fbce3a351
                crlref:
                  default: 'none'
                  description: This optional field is for the Certificate Revocation List (CRL)
                    this tunnel will use to check the validity of peer certificates.

                    A CRL is a list of certificates signed by a CA which are no longer valid.
                    This could be due to a certificate being compromised or lost, such as from
                    a stolen laptop, spyware infection, etc.

                    Specify the unique reference ID of the certificate.
                  type: string
                  example: 61c467cd2fd4f
                certref:
                  description: The certificate used by the VPN instance to identify itself to peers.
                    This certificate must contain appropriate properties marking it as a server
                    certificate and not a user or client certificate.

                    Specify the unique reference ID of the certificate revocation list.
                  type: string
                  example: 61c4121240420
                ocspcheck:
                  default: false
                  description: When set, OpenVPN will attempt to confirm client certificate validity
                    using Online Certificate Status Protocol (OCSP) against the site listed in the OCSP URL field.
                  type: boolean
                ocspurl:
                  description: Enter OCSP URL. This is only necessary for `ocspcheck`.
                  type: string
                  format: uri
                dh_length:
                  default: 2048
                  description: The Diffie-Hellman (DH) key exchange parameters are used for establishing a
                    secure communications channel. They may be regenerated at any time, and they are not
                    specific to an OpenVPN instance. When importing an existing OpenVPN configuration
                    these parameters do not need to be copied from the previous server nor does it require
                    generating new parameters. The length of the desired DH parameters may be chosen from
                    the drop-down box, either 1024, 2048, or 4096. There is an additional choice for
                    ECDH Only which disables traditional DH parameters and uses only ECDH.
                  enum:
                    - 1024
                    - 2048
                    - 3072
                    - 4096
                    - 6144
                    - 7680
                    - 8192
                    - 15360
                    - 16384
                    - 'ECDH Only'
                  oneOf:
                    - type: string
                    - type: integer
                ecdh_curve:
                  default: 'none'
                  description: Configures a specific elliptic curve to use for Elliptic Curve Diffie-Hellman
                    key exchanges. This is only for use with ECDH TLS encryption.
                  enum:
                    - none
                    - prime256v1
                    - secp384r1
                    - secp521r1
                  type: string
                cert_depth:
                  default: 'one'
                  description: This option limits the valid length of a certificate chain. The default value
                    limits a chain to One (Client+Server). With that value, if an unauthorized intermediate
                    CA signs a certificate, certificates signed by the rogue intermediate would fail validation.
                    In cases when the certificate stricture requires chaining with intermediates,
                    raise this limit to accommodate the longest allowed chain.
                  enum:
                    - none
                    - one
                    - two
                    - three
                    - four
                    - five
                  type: string
                strictusercn:
                  default: false
                  description: Controls whether the firewall will enforce a strict match between the username
                    supplied by the user and the Common Name of their user certificate when the firewall
                    authenticates a user. When enabled, authentication fails if the two values do not match.

                    This prevents users from using their own credentials with the certificate from a different
                    user and vice versa.

                    This is only necessary for mode `server_tls_user`.
                    Omitting will disable.
                  type: boolean
                ncp_enable:
                  default: false
                  description: Enable Data Encryption Negotiation.
                    Disabling this feature is deprecated.
                    Omitting will enable.
                  type: boolean
                data_ciphers:
                  default: 'AES-256-GCM,AES-128-GCM,CHACHA20-POLY1305'
                  description: These options define the cryptographic ciphers OpenVPN will use for this VPN.
                    Enter comma sepereted data encryption algorithms
                    (e.g. `AES-256-GCM,AES-128-GCM,CHACHA20-POLY1305`).
                    Data encryption algorithms will be truncated to 19.
                  type: string
                data_ciphers_fallback:
                  default: 'AES-256-CBC'
                  description: Enter fallback data encryption algorithm.
                  type: string
                digest:
                  default: 'SHA256'
                  description: Selects the message digest algorithm OpenVPN uses for HMAC authentication of
                    incoming packets. This is used for the data channel and if also for the control channel
                    when the tunnel uses a TLS key. The GUI default of SHA256 is a good balance of security and speed.

                    When using AEAD ciphers such as AES-GCM, OpenVPN ignores this value for the data channel
                    since AEAD ciphers already perform authentication. Even with an AEAD cipher, OpenVPN still
                    uses this algorithm to authenticate the control channel when the tunnel uses a TLS key.
                  enum:
                    - BLAKE2b512
                    - BLAKE2b256
                    - MD4
                    - MD5
                    - MD5-SHA1
                    - MDC2
                    - RIPEMD160
                    - SHA1
                    - SHA224
                    - SHA256
                    - SHA3-224
                    - SHA3-256
                    - SHA3-384
                    - SHA3-512
                    - SHA384
                    - SHA512
                    - SHA512-224
                    - SHA512-256
                    - SHAKE128
                    - SHAKE256
                    - SM3
                    - whirlpool
                    - none
                  type: string
                engine:
                  default: 'none'
                  description: If available, this option controls which hardware cryptographic accelerator
                    will be used by OpenVPN. When left unspecified, OpenVPN will choose automatically based
                    on what is available in the operating system to accelerate ciphers OpenVPN wants to use.

                    Some hardware acceleration, such as AES-NI, happens automatically in OpenVPN via OpenSSL
                    and cannot be enabled or disabled by this option.

                    Enter Hardware crypto. Options are `none` and any enabled
                    hardware crypto.
                  type: string
                tunnel_network:
                  default: ''
                  description: 'Virtual IPv4 network used for private communications
                    between this client and the server expressed using CIDR (e.g.
                    10.0.8.5/24).

                    With subnet topology, enter the client IP address and the subnet
                    mask must match the IPv4 Tunnel Network on the server.

                    With net30 topology, the first network address of the /30 is assumed
                    to be the server address and the second network address will be
                    assigned to the client.'
                  type: string
                tunnel_networkv6:
                  default: ''
                  description: 'Virtual IPv6 network used for private communications
                    between this client and the server expressed using prefix (e.g.
                    2001:db9:1:1::100/64).

                    Enter the client IPv6 address and prefix. The prefix must match
                    the IPv6 Tunnel Network prefix on the server.'
                  type: string
                local_network:
                  default: ''
                  description: 'IPv4 server-side networks that will be accessible
                    from this particular client. Expressed as a comma-separated list
                    of one or more CIDR networks.

                    NOTE: Networks do not need to be specified here if they have already
                    been defined on the main server configuration.'
                  type: string
                local_networkv6:
                  default: ''
                  description: 'IPv6 server-side networks that will be accessible
                    from this particular client. Expressed as a comma-separated list
                    of one or more IP/PREFIX networks.

                    NOTE: Networks do not need to be specified here if they have already
                    been defined on the main server configuration.'
                  type: string
                remote_network:
                  default: ''
                  description: 'IPv4 client-side networks that will be routed to this
                    client specifically using iroute, so that a site-to-site VPN can
                    be established. Expressed as a comma-separated list of one or
                    more CIDR ranges. May be left blank if there are no client-side
                    networks to be routed.

                    NOTE: Remember to add these subnets to the IPv4 Remote Networks
                    list on the corresponding OpenVPN server settings.'
                  type: string
                remote_networkv6:
                  default: ''
                  description: 'IPv6 client-side networks that will be routed to this
                    client specifically using iroute, so that a site-to-site VPN can
                    be established. Expressed as a comma-separated list of one or
                    more IP/PREFIX networks. May be left blank if there are no client-side
                    networks to be routed.

                    NOTE: Remember to add these subnets to the IPv6 Remote Networks
                    list on the corresponding OpenVPN server settings.'
                  type: string
                redirect_gateway:
                  default: false
                  description: When a Redirect IPv4 Gateway option is selected the server
                    pushes a message to clients instructing them to forward all traffic for
                    that address family, including Internet traffic, over the VPN tunnel.
                  type: boolean
                redirect_gateway6:
                  default: false
                  description: When a Redirect IPv6 Gateway option is selected the server
                    pushes a message to clients instructing them to forward all traffic for
                    that address family, including Internet traffic, over the VPN tunnel.
                  type: boolean
                serverbridge_dhcp:
                  description: When using `tap` mode for a remote access SSL/TLS VPN,
                    (`server_tls`, `server_user`, `server_tls_user`), additional options
                    to control bridging behavior in OpenVPN and client address assignment.

                    When selected, OpenVPN passes through DHCP to the bridged.
                    In the most common scenario, this is LAN.

                    Using this method connecting clients receive IP addresses from the
                    same DHCP pool used by clients on the LAN.
                  type: string
                  format: ipv4
                serverbridge_interface:
                  default: "none"
                  description: This setting indicates to OpenVPN which interface will be used for the bridge.
                    In most cases this is LAN.
                    This option controls which existing IP address and subnet mask are used by OpenVPN for the bridge.
                    Setting this to none will cause the Server Bridge DHCP (`serverbridge_dhcp_start`, `serverbridge_dhcp_end`) settings below to be ignored.
                  enum:
                    - wan
                    - lan
                    - none
                  type: string
                serverbridge_routegateway:
                  description: Makes OpenVPN push the Bridge Interface IPv4 address to connecting
                    clients as a route gateway.

                    When the IPv4 Tunnel Network in OpenVPN is empty for a bridged VPN,
                    connecting clients cannot automatically determine a server-side gateway for
                    use with routes pushed to clients by the server.
                  type: boolean
                  example: true
                serverbridge_dhcp_start:
                  description: Defines a DHCP range from which OpenVPN can assign addresses to clients.
                    If these settings are left blank, OpenVPN passes DHCP through to the bridge interface
                    and it ignores the interface setting above.

                    When set, this range should be within the same subnet as the Bridge Interface
                    (`serverbridge_interface`) but it should not overlap an existing in-use portion
                    of the subnet, such as the current DHCP pool.

                    This allows a range of IP addresses to be set aside for use only by OpenVPN clients so they may be contained within a portion of the internal network rather than consuming IP addresses from the existing DHCP pool.
                  type: string
                  format: ipv4
                serverbridge_dhcp_end:
                  description: Defines a DHCP range from which OpenVPN can assign addresses to clients.
                    If these settings are left blank, OpenVPN passes DHCP through to the bridge interface
                    and it ignores the interface setting above.

                    When set, this range should be within the same subnet as the Bridge Interface
                    (`serverbridge_interface`) but it should not overlap an existing in-use portion
                    of the subnet, such as the current DHCP pool.

                    This allows a range of IP addresses to be set aside for use only by OpenVPN clients so they may be contained within a portion of the internal network rather than consuming IP addresses from the existing DHCP pool.
                  type: string
                  format: ipv4
                concurrent_connections:
                  description: Specifies the number of clients that may be simultaneously
                    connected to this OpenVPN server instance at any given time.
                  type: integer
                  example: 10
                allow_compression:
                  default: 'no'
                  description: Controls whether or not compression is allowed on the VPN, and how it is handled.
                  enum:
                    - asym
                    - no
                    - yes
                  type: string
                compression:
                  default: 'none'
                  description: Compression to be used with this VPN instance. This is only
                    necessary for `allow_compression` set to `yes` or `asym`.
                    Compression can potentially dangerous and insecure. Deprecated.
                    Compress tunnel packets using the LZO algorithm.
                  enum:
                    - none
                    - stub
                    - stub-v2
                    - lz4
                    - lz4-v2
                    - lzo
                    - noadapt
                    - adaptive
                    - yes
                    - no
                  type: string
                compression_push:
                  default: false
                  description: Push the selected Compression setting to connecting clients.
                    This is only necessary for `allow_compression` set to `yes` or `asym`.
                  type: boolean
                passtos:
                  default: false
                  description: When this option is enabled OpenVPN sets the Type-of-Service (TOS)
                    IP header value of tunnel packets to match the encapsulated packet value.
                    This may cause important traffic to be handled faster over the tunnel by
                    intermediate hops at the cost of minor information disclosure.
                  type: boolean
                client2client:
                  default: false
                  description: This option controls whether or not connected clients are able to
                    communicate with one another. To allow this behavior, check the option.
                    When unchecked, clients can only send traffic to the server or destinations
                    beyond the server such as routed networks or the Internet.
                  type: boolean
                duplicate_cn:
                  default: false
                  description: Controls whether or not OpenVPN will allow multiple connections
                    from the same user to work simultaneously.
                    This is only necessary for mode `p2p_shared_key`.
                  type: boolean
                dynamic_ip:
                  default: false
                  description: For clients on Internet connections where the IP address changes frequently,
                    or mobile users who commonly move between different Internet connections,
                    check this option for more stable connectivity. Where the client IP address
                    is static or rarely changes, not using this option offers a small security improvement.
                  type: boolean
                topology:
                  default: 'subnet'
                  description: Sets the method OpenVPN uses to allocate addresses for clients in a
                    client/server setup on tun device mode VPNs. The Topology option is relevant
                    only when supplying a virtual adapter IP address to clients using tun mode on IPv4.
                    Some clients may require this even for IPv6, such as OpenVPN Connect, though in
                    reality IPv6 always runs with a subnet topology even when IPv4 uses net30.
                    OpenVPN instances using tap mode always use subnet topology as well.
                  enum:
                    - subnet
                    - net30
                  type: string
                dns_domain:
                  default: ''
                  description: Configures a default domain name which clients will append to DNS requests.
                    This can be helpful to ensure name resolution works properly for hosts on the local
                    network where DNS name resolution is used.
                  type: string
                  example: example.com
                dns_servers:
                  default: ''
                  description: Comma-separated list of no more than 4 DNS server IP
                    addresses (i.e. 8.8.8.8). Any more than the first four are ignored.
                    This list is provided to the clent.
                  type: string
                  example: "8.8.8.8, 8.8.4.4, 8.8.3.3, 8.8.2.2"
                push_blockoutsidedns:
                  default: false
                  description: Make Windows 10 Clients Block access to DNS servers except
                    across OpenVPN while connected, forcing clients to use only VPN DNS servers.
                  type: boolean
                push_register_dns:
                  default: false
                  description: Run "net stop dnscache", "net start dnscache",
                    "ipconfig /flushdns" and "ipconfig /registerdns" on connection initiation.
                  type: boolean
                inactive_seconds:
                  default: 300
                  description: The amount of time, in seconds, which a client can be inactive before
                    OpenVPN disconnects it for inactivity. OpenVPN bases activity on the last incoming
                    or outgoing data channel packet, not control channel packets.

                    `0` disables this feature.
                  type: integer
                ping_method:
                  default: 'keepalive'
                  description: The Ping Method controls OpenVPN monitoring of peers through the
                    control channel and how it deals with unresponsive peers.
                  enum:
                    - keepalive
                    - ping
                  type: string
                keepalive_interval:
                  default: 10
                  description: Enter keepalive interval.
                  type: integer
                keepalive_timeout:
                  default: 60
                  description: Enter keepalive timeout.
                  type: integer
                ping_seconds:
                  default: 10
                  description: Enter ping seconds. This is only necessary for `ping` method.
                  type: integer
                ping_action_seconds:
                  default: 60
                  description: Enter ping action seconds. This is only necessary for `ping` method.
                  type: integer
                ping_push:
                  default: false
                  description: Push ping to VPN client. This is only necessary for `ping` method.
                  type: boolean
                ping_action_push:
                  default: false
                  description: Push ping-restart/ping-exit to VPN client.
                    This is only necessary for `ping` method.
                  type: boolean
                ping_action:
                  default: 'ping_restart'
                  description: Exit or restart OpenVPN after timeout from remote.
                    This is only necessary for `ping` method.
                  enum:
                    - ping_restart
                    - ping_exit
                  type: string
                username_as_common_name:
                  default: false
                  description: Controls whether or not OpenVPN will use the username given by the
                    client in place of the certificate common name (CN) for purposes such as determining
                    Client Specific Overrides. This is only relevant when user authentication is enabled.
                    This is typically the best practice, but not a requirement.

                    This is only necessary for mode `server_user` or `server_tls_user`.
                  type: boolean
                udp_fast_io:
                  default: false
                  description: Controls whether or not OpenVPN will use fast I/O operations with UDP writes
                    to its tun or tap device. This behavior optimizes the packet write event loop,
                    improving CPU efficiency by 5% to 10%. Experimental.
                  type: boolean
                exit_notify:
                  default: 'none'
                  description: Controls whether or not OpenVPN will send an explicit exit notification to
                    connected UDP clients or peers when restarting or shutting down. This notification
                    allows peers to immediately disconnect rather than wait for a timeout.
                    This is only relevant to UDP modes as TCP natively supports closing connections.
                  enum:
                    - once
                    - twice
                    - none
                    - ''
                  type: string
                sndrcvbuf:
                  default: 'default'
                  description: Configures a Send and Receive Buffer size for OpenVPN.
                    The default buffer size can be too small in many cases, depending on hardware
                    and network uplink speeds. Finding the best buffer size can take experimentation.
                    To test the best value for a site, start at 512KiB and test higher and lower
                    values until testing results in peak performance.
                  enum:
                    - 64KiB
                    - 128KiB
                    - 256KiB
                    - 512KiB
                    - 1MiB
                    - 2MiB
                    - default
                    - none
                  type: string
                ntp_servers:
                  default: ''
                  description: Comma-separated list of no more than 2 NTP server IP
                    addresses. Any more than the first two are ignored.
                  type: string
                  example: "192.168.56.101, 192.168.56.102"
                netbios_enable:
                  default: false
                  description: Enable NetBIOS over TCP/IP. If this option is not set,
                    all NetBIOS-over-TCP/IP options (including WINS) will be disabled.
                  type: boolean
                netbios_node_type:
                  description: 'Possible options: b (broadcasts), p (point-to-point
                    name queries to a WINS server), m (broadcast then query name server),
                    and h (query name server, then broadcast). This parameter takes
                    a single letter either b, p, m, or h. Any other string will result
                    in this option being set to none.'
                  enum:
                    - b
                    - p
                    - m
                    - h
                  type: string
                  example: b
                netbios_scope:
                  description: NetBIOS Scope ID provides an extended naming service
                    for NetBIOS over TCP/IP. The NetBIOS scope ID isolates NetBIOS
                    traffic on a single network to only those nodes with the same
                    NetBIOS scope ID.
                  type: string
                  example: '5'
                create_gw:
                  default: 'both'
                  description: If you assign a virtual interface to this OpenVPN server,
                    this setting controls which gateway types will be created.
                  enum:
                    - v4only
                    - v6only
                    - both
                  type: string
                verbosity_level:
                  default: 3
                  description: Configures the amount of detail OpenVPN will log for this instance,
                    which is useful for troubleshooting problems. Higher numbers will result in
                    higher amounts of detail in the log.
                    During normal operation the default selection is ideal.
                    Level `3` is recommended for a good summary of what's happening without
                    being swamped by output. Maximum level `11`.
                    The `default` setting is equivalent to level `1`.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
                    - 8
                    - 9
                    - 10
                    - 11
                    - 'default'
                  oneOf:
                    - type: string
                    - type: integer
                wins_servers:
                  default: ''
                  description: Comma-separated list of no more than 2 WINS server
                    IP addresses. Any more than the first two are ignored.
                  type: string
                  example: "192.168.56.103, 192.168.56.104"
                disable:
                  default: false
                  description: Disable this override without removing it.
                  type: boolean
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create OpenVPN Server
      tags:
        - Services > OpenVPN > Server
    put:
      operationId: APIServicesOpenVPNServerUpdate
      description: 'Update OpenVPN Server instance.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-openvpn-server`]'
      parameters:
        - description: This id indicates the id of the server you want to delete.
            This id is static and not an index of an entry in the config array.
            Best to first get all servers and get the id of the one you want to
            delete before calling this endpoint.
          in: query
          name: vpnid
          required: true
          schema:
            oneOf:
              - type: integer
              - type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                vpnid:
                  description: This id indicates the id of the server you want to delete.
                    This id is static and not an index of an entry in the config array.
                    Best to first get all servers and get the id of the one you want to
                    delete before calling this endpoint.
                  type: string
                  example: '1'
                mode:
                  default: 'p2p_tls'
                  description: The role for the server, which specifies how peers connect to a
                    server instance. Changing this also affects which options the
                    GUI displays on the rest of the page.
                  enum:
                    - p2p_tls
                    - p2p_shared_key
                    - server_tls
                    - server_user
                    - server_tls_user
                  type: string
                protocol:
                  default: 'udp4'
                  description: The IP protocol clients will use to connect to this VPN.
                  enum:
                    - udp4
                    - udp6
                    - tcp4
                    - tcp6
                    - udp
                    - tcp
                  type: string
                authmode:
                  default: 'Local Database'
                  description: One or more authentication servers to use when checking user credentials.
                    This can be the Local Database (user manager) or it can be a RADIUS or LDAP server
                    configured in the user manager.

                    Selecting multiple entries will use each one in turn. If authentication against an entry fails,
                    the VPN will try the next server. It will continue this process until it has tried
                    all selected entries.

                    This field is only present when using a Server Mode (`server_user` or `server_tls_user`)
                    which requires user authentication.
                  type: string
                dev_mode:
                  default: 'tun'
                  description: OpenVPN can run in one of two device modes.
                  enum:
                    - tun
                    - tap
                  type: string
                interface:
                  default: 'wan'
                  description: 'Selects the interface, VIP, or failover group that the OpenVPN instance will use 
                    when communicating with peers.
                    This also controls which interface the traffic from the instance will exit.
                    Interface can be provided as Interface ID (e.g. `wan`, `lan`, `opt1`, etc.),
                    Interface physical name (e.g. `igb0`, `vtnet`, etc.) or Interface descriptive
                    name (e.g. `MY_LAN`, `MY_WAN`, etc.).
                    VIP can be provided as description, subnet or uniqid.
                    Failover group can be provided as group name.

                    _Note: If you are using a failover group, the failover group must be configured to use the same_.'
                  type: string
                local_port:
                  description: The port number upon which OpenVPN will listen for incoming connections from peers.
                    Firewall rules must allow traffic to this port and this port must be specified in the client configuration.

                    The port for each server must be unique for each interface when using a standard
                    UDP or TCP Protocol choice and must be globally unique if using a multihome Protocol.

                    Omitting this will default to next available port.
                  type: integer
                  example: 1194
                description:
                  description: Enter a description for this VPN instance, for reference.
                  type: string
                  example: 'My VPN'
                custom_options:
                  description: Custom options may be added in using the Custom option box separated by a semicolon (;)
                    and the firewall will pass the custom directives to OpenVPN.
                  type: string
                  example: 'push "route 10.0.0.0 255.255.255.0";'
                tls:
                  default: ''
                  description: TLS, or Transport Layer Security, can provide session
                    authentication and encryption to ensure the validity of peers and to protect the control channel.
                    Paste the TLS key. This is not necessary for mode `p2p_shared_key`.
                    Options are `""` or `true` for automatic TLS key generation, `false` to disable TLS
                    or a raw TLS key as a string.
                    Omitting disable TLS configuration.
                  type: string
                  example: '-----BEGIN OpenVPN Static key V1-----
                              db8701afd882d746be67f084bae68470
                              54a99ef3b61864cfe1864c6c02584335
                              fe706df150250bf7e294b8c35911817c
                              133c8d9b505573ebeb65259bc54c70ae
                              88cc3163fd11a20f73d2c6fb3eea7cc2
                              fdaefcde510486adc0acbb9481b3aef4
                              930db91806469218b2a4f92e71787cf4
                              635f5b3f773fefc28d492738d2648673
                              8fa9b23d41e5999f58c3f0004a59ecda
                              119162e598764d9c8f6b99e7054f3ea4
                              fdb4461913d2e3273a8a0db29332406a
                              237bcfccca2315445ef809eaa933fa30
                              a9a7510d2d167033edfd3580a824f3e1
                              1af57da6eee89e6318ec29c67da8a19d
                              7c9d74c7afac6ee0f813a0278a6261d7
                              a28e7bdbf1743527346bda359bc92fc9
                            -----END OpenVPN Static key V1-----'
                tls_type:
                  default: 'auth'
                  description: Enter TLS Key Usage Mode. This is not necessary for mode `p2p_shared_key`.
                  enum:
                    - auth
                    - crypt
                  type: string
                tlsauth_keydir:
                  default: 'default'
                  description: The direction in which this VPN endpoint uses the TLS key.
                    The TLS Key Direction must be set to complementary values on the server and clients.
                    The default behavior uses 0 on server instances and 1 on client instances.

                    Enter TLS keydir direction. This is not necessary for mode `p2p_shared_key`.
                  enum:
                    - default
                    - direction-0
                    - direction-1
                    - both-directions
                  type: string
                shared_key:
                  default: ''
                  description: Enter Shared Key. This is only mandatory for mode `p2p_shared_key`.
                    Options are `""` for automatic shared key generation and a raw shared key.
                  type: string
                  example: '-----BEGIN OpenVPN Static key V1-----
                              db8701afd882d746be67f084bae68470
                              54a99ef3b61864cfe1864c6c02584335
                              fe706df150250bf7e294b8c35911817c
                              133c8d9b505573ebeb65259bc54c70ae
                              88cc3163fd11a20f73d2c6fb3eea7cc2
                              fdaefcde510486adc0acbb9481b3aef4
                              930db91806469218b2a4f92e71787cf4
                              635f5b3f773fefc28d492738d2648673
                              8fa9b23d41e5999f58c3f0004a59ecda
                              119162e598764d9c8f6b99e7054f3ea4
                              fdb4461913d2e3273a8a0db29332406a
                              237bcfccca2315445ef809eaa933fa30
                              a9a7510d2d167033edfd3580a824f3e1
                              1af57da6eee89e6318ec29c67da8a19d
                              7c9d74c7afac6ee0f813a0278a6261d7
                              a28e7bdbf1743527346bda359bc92fc9
                            -----END OpenVPN Static key V1-----'
                caref:
                  description: Specify the unique reference ID of the certificate signing authority.
                  type: string
                  example: 61c7fbce3a351
                crlref:
                  default: 'none'
                  description: This optional field is for the Certificate Revocation List (CRL)
                    this tunnel will use to check the validity of peer certificates.

                    A CRL is a list of certificates signed by a CA which are no longer valid.
                    This could be due to a certificate being compromised or lost, such as from
                    a stolen laptop, spyware infection, etc.

                    Specify the unique reference ID of the certificate.
                  type: string
                  example: 61c467cd2fd4f
                certref:
                  description: The certificate used by the VPN instance to identify itself to peers.
                    This certificate must contain appropriate properties marking it as a server
                    certificate and not a user or client certificate.

                    Specify the unique reference ID of the certificate revocation list.
                  type: string
                  example: 61c4121240420
                ocspcheck:
                  default: false
                  description: When set, OpenVPN will attempt to confirm client certificate validity
                    using Online Certificate Status Protocol (OCSP) against the site listed in the OCSP URL field.
                  type: boolean
                ocspurl:
                  description: Enter OCSP URL. This is only necessary for `ocspcheck`.
                  type: string
                  format: uri
                dh_length:
                  default: 2048
                  description: The Diffie-Hellman (DH) key exchange parameters are used for establishing a
                    secure communications channel. They may be regenerated at any time, and they are not
                    specific to an OpenVPN instance. When importing an existing OpenVPN configuration
                    these parameters do not need to be copied from the previous server nor does it require
                    generating new parameters. The length of the desired DH parameters may be chosen from
                    the drop-down box, either 1024, 2048, or 4096. There is an additional choice for
                    ECDH Only which disables traditional DH parameters and uses only ECDH.
                  enum:
                    - 1024
                    - 2048
                    - 3072
                    - 4096
                    - 6144
                    - 7680
                    - 8192
                    - 15360
                    - 16384
                    - 'ECDH Only'
                  oneOf:
                    - type: string
                    - type: integer
                ecdh_curve:
                  default: 'none'
                  description: Configures a specific elliptic curve to use for Elliptic Curve Diffie-Hellman
                    key exchanges. This is only for use with ECDH TLS encryption.
                  enum:
                    - none
                    - prime256v1
                    - secp384r1
                    - secp521r1
                  type: string
                cert_depth:
                  default: 'one'
                  description: This option limits the valid length of a certificate chain. The default value
                    limits a chain to One (Client+Server). With that value, if an unauthorized intermediate
                    CA signs a certificate, certificates signed by the rogue intermediate would fail validation.
                    In cases when the certificate stricture requires chaining with intermediates,
                    raise this limit to accommodate the longest allowed chain.
                  enum:
                    - none
                    - one
                    - two
                    - three
                    - four
                    - five
                  type: string
                strictusercn:
                  default: false
                  description: Controls whether the firewall will enforce a strict match between the username
                    supplied by the user and the Common Name of their user certificate when the firewall
                    authenticates a user. When enabled, authentication fails if the two values do not match.

                    This prevents users from using their own credentials with the certificate from a different
                    user and vice versa.

                    This is only necessary for mode `server_tls_user`.
                    Omitting will disable.
                  type: boolean
                ncp_enable:
                  default: false
                  description: Enable Data Encryption Negotiation.
                    Disabling this feature is deprecated.
                    Omitting will enable.
                  type: boolean
                data_ciphers:
                  default: 'AES-256-GCM,AES-128-GCM,CHACHA20-POLY1305'
                  description: These options define the cryptographic ciphers OpenVPN will use for this VPN.
                    Enter comma sepereted data encryption algorithms
                    (e.g. `AES-256-GCM,AES-128-GCM,CHACHA20-POLY1305`).
                    Data encryption algorithms will be truncated to 19.
                  type: string
                data_ciphers_fallback:
                  default: 'AES-256-CBC'
                  description: Enter fallback data encryption algorithm.
                  type: string
                digest:
                  default: 'SHA256'
                  description: Selects the message digest algorithm OpenVPN uses for HMAC authentication of
                    incoming packets. This is used for the data channel and if also for the control channel
                    when the tunnel uses a TLS key. The GUI default of SHA256 is a good balance of security and speed.

                    When using AEAD ciphers such as AES-GCM, OpenVPN ignores this value for the data channel
                    since AEAD ciphers already perform authentication. Even with an AEAD cipher, OpenVPN still
                    uses this algorithm to authenticate the control channel when the tunnel uses a TLS key.
                  enum:
                    - BLAKE2b512
                    - BLAKE2b256
                    - MD4
                    - MD5
                    - MD5-SHA1
                    - MDC2
                    - RIPEMD160
                    - SHA1
                    - SHA224
                    - SHA256
                    - SHA3-224
                    - SHA3-256
                    - SHA3-384
                    - SHA3-512
                    - SHA384
                    - SHA512
                    - SHA512-224
                    - SHA512-256
                    - SHAKE128
                    - SHAKE256
                    - SM3
                    - whirlpool
                    - none
                  type: string
                engine:
                  default: 'none'
                  description: If available, this option controls which hardware cryptographic accelerator
                    will be used by OpenVPN. When left unspecified, OpenVPN will choose automatically based
                    on what is available in the operating system to accelerate ciphers OpenVPN wants to use.

                    Some hardware acceleration, such as AES-NI, happens automatically in OpenVPN via OpenSSL
                    and cannot be enabled or disabled by this option.

                    Enter Hardware crypto. Options are `none` and any enabled
                    hardware crypto.
                  type: string
                tunnel_network:
                  default: ''
                  description: 'Virtual IPv4 network used for private communications
                    between this client and the server expressed using CIDR (e.g.
                    10.0.8.5/24).

                    With subnet topology, enter the client IP address and the subnet
                    mask must match the IPv4 Tunnel Network on the server.

                    With net30 topology, the first network address of the /30 is assumed
                    to be the server address and the second network address will be
                    assigned to the client.'
                  type: string
                tunnel_networkv6:
                  default: ''
                  description: 'Virtual IPv6 network used for private communications
                    between this client and the server expressed using prefix (e.g.
                    2001:db9:1:1::100/64).

                    Enter the client IPv6 address and prefix. The prefix must match
                    the IPv6 Tunnel Network prefix on the server.'
                  type: string
                local_network:
                  default: ''
                  description: 'IPv4 server-side networks that will be accessible
                    from this particular client. Expressed as a comma-separated list
                    of one or more CIDR networks.

                    NOTE: Networks do not need to be specified here if they have already
                    been defined on the main server configuration.'
                  type: string
                local_networkv6:
                  default: ''
                  description: 'IPv6 server-side networks that will be accessible
                    from this particular client. Expressed as a comma-separated list
                    of one or more IP/PREFIX networks.

                    NOTE: Networks do not need to be specified here if they have already
                    been defined on the main server configuration.'
                  type: string
                remote_network:
                  default: ''
                  description: 'IPv4 client-side networks that will be routed to this
                    client specifically using iroute, so that a site-to-site VPN can
                    be established. Expressed as a comma-separated list of one or
                    more CIDR ranges. May be left blank if there are no client-side
                    networks to be routed.

                    NOTE: Remember to add these subnets to the IPv4 Remote Networks
                    list on the corresponding OpenVPN server settings.'
                  type: string
                remote_networkv6:
                  default: ''
                  description: 'IPv6 client-side networks that will be routed to this
                    client specifically using iroute, so that a site-to-site VPN can
                    be established. Expressed as a comma-separated list of one or
                    more IP/PREFIX networks. May be left blank if there are no client-side
                    networks to be routed.

                    NOTE: Remember to add these subnets to the IPv6 Remote Networks
                    list on the corresponding OpenVPN server settings.'
                  type: string
                redirect_gateway:
                  default: false
                  description: When a Redirect IPv4 Gateway option is selected the server
                    pushes a message to clients instructing them to forward all traffic for
                    that address family, including Internet traffic, over the VPN tunnel.
                  type: boolean
                redirect_gateway6:
                  default: false
                  description: When a Redirect IPv6 Gateway option is selected the server
                    pushes a message to clients instructing them to forward all traffic for
                    that address family, including Internet traffic, over the VPN tunnel.
                  type: boolean
                serverbridge_dhcp:
                  description: When using `tap` mode for a remote access SSL/TLS VPN,
                    (`server_tls`, `server_user`, `server_tls_user`), additional options
                    to control bridging behavior in OpenVPN and client address assignment.

                    When selected, OpenVPN passes through DHCP to the bridged.
                    In the most common scenario, this is LAN.

                    Using this method connecting clients receive IP addresses from the
                    same DHCP pool used by clients on the LAN.
                  type: string
                  format: ipv4
                serverbridge_interface:
                  default: "none"
                  description: This setting indicates to OpenVPN which interface will be used for the bridge.
                    In most cases this is LAN.
                    This option controls which existing IP address and subnet mask are used by OpenVPN for the bridge.
                    Setting this to none will cause the Server Bridge DHCP (`serverbridge_dhcp_start`, `serverbridge_dhcp_end`) settings below to be ignored.
                  enum:
                    - wan
                    - lan
                    - none
                  type: string
                serverbridge_routegateway:
                  description: Makes OpenVPN push the Bridge Interface IPv4 address to connecting
                    clients as a route gateway.

                    When the IPv4 Tunnel Network in OpenVPN is empty for a bridged VPN,
                    connecting clients cannot automatically determine a server-side gateway for
                    use with routes pushed to clients by the server.
                  type: boolean
                  example: true
                serverbridge_dhcp_start:
                  description: Defines a DHCP range from which OpenVPN can assign addresses to clients.
                    If these settings are left blank, OpenVPN passes DHCP through to the bridge interface
                    and it ignores the interface setting above.

                    When set, this range should be within the same subnet as the Bridge Interface
                    (`serverbridge_interface`) but it should not overlap an existing in-use portion
                    of the subnet, such as the current DHCP pool.

                    This allows a range of IP addresses to be set aside for use only by OpenVPN clients so they may be contained within a portion of the internal network rather than consuming IP addresses from the existing DHCP pool.
                  type: string
                  format: ipv4
                serverbridge_dhcp_end:
                  description: Defines a DHCP range from which OpenVPN can assign addresses to clients.
                    If these settings are left blank, OpenVPN passes DHCP through to the bridge interface
                    and it ignores the interface setting above.

                    When set, this range should be within the same subnet as the Bridge Interface
                    (`serverbridge_interface`) but it should not overlap an existing in-use portion
                    of the subnet, such as the current DHCP pool.

                    This allows a range of IP addresses to be set aside for use only by OpenVPN clients so they may be contained within a portion of the internal network rather than consuming IP addresses from the existing DHCP pool.
                  type: string
                  format: ipv4
                concurrent_connections:
                  description: Specifies the number of clients that may be simultaneously
                    connected to this OpenVPN server instance at any given time.
                  type: integer
                  example: 10
                allow_compression:
                  default: 'no'
                  description: Controls whether or not compression is allowed on the VPN, and how it is handled.
                  enum:
                    - asym
                    - no
                    - yes
                  type: string
                compression:
                  default: 'none'
                  description: Compression to be used with this VPN instance. This is only
                    necessary for `allow_compression` set to `yes` or `asym`.
                    Compression can potentially dangerous and insecure. Deprecated.
                    Compress tunnel packets using the LZO algorithm.
                  enum:
                    - none
                    - stub
                    - stub-v2
                    - lz4
                    - lz4-v2
                    - lzo
                    - noadapt
                    - adaptive
                    - yes
                    - no
                  type: string
                compression_push:
                  default: false
                  description: Push the selected Compression setting to connecting clients.
                    This is only necessary for `allow_compression` set to `yes` or `asym`.
                  type: boolean
                passtos:
                  default: false
                  description: When this option is enabled OpenVPN sets the Type-of-Service (TOS)
                    IP header value of tunnel packets to match the encapsulated packet value.
                    This may cause important traffic to be handled faster over the tunnel by
                    intermediate hops at the cost of minor information disclosure.
                  type: boolean
                client2client:
                  default: false
                  description: This option controls whether or not connected clients are able to
                    communicate with one another. To allow this behavior, check the option.
                    When unchecked, clients can only send traffic to the server or destinations
                    beyond the server such as routed networks or the Internet.
                  type: boolean
                duplicate_cn:
                  default: false
                  description: Controls whether or not OpenVPN will allow multiple connections
                    from the same user to work simultaneously.
                    This is only necessary for mode `p2p_shared_key`.
                  type: boolean
                dynamic_ip:
                  default: false
                  description: For clients on Internet connections where the IP address changes frequently,
                    or mobile users who commonly move between different Internet connections,
                    check this option for more stable connectivity. Where the client IP address
                    is static or rarely changes, not using this option offers a small security improvement.
                  type: boolean
                topology:
                  default: 'subnet'
                  description: Sets the method OpenVPN uses to allocate addresses for clients in a
                    client/server setup on tun device mode VPNs. The Topology option is relevant
                    only when supplying a virtual adapter IP address to clients using tun mode on IPv4.
                    Some clients may require this even for IPv6, such as OpenVPN Connect, though in
                    reality IPv6 always runs with a subnet topology even when IPv4 uses net30.
                    OpenVPN instances using tap mode always use subnet topology as well.
                  enum:
                    - subnet
                    - net30
                  type: string
                dns_domain:
                  default: ''
                  description: Configures a default domain name which clients will append to DNS requests.
                    This can be helpful to ensure name resolution works properly for hosts on the local
                    network where DNS name resolution is used.
                  type: string
                  example: example.com
                dns_servers:
                  default: ''
                  description: Comma-separated list of no more than 4 DNS server IP
                    addresses (i.e. 8.8.8.8). Any more than the first four are ignored.
                    This list is provided to the clent.
                  type: string
                  example: "8.8.8.8, 8.8.4.4, 8.8.3.3, 8.8.2.2"
                push_blockoutsidedns:
                  default: false
                  description: Make Windows 10 Clients Block access to DNS servers except
                    across OpenVPN while connected, forcing clients to use only VPN DNS servers.
                  type: boolean
                push_register_dns:
                  default: false
                  description: Run "net stop dnscache", "net start dnscache",
                    "ipconfig /flushdns" and "ipconfig /registerdns" on connection initiation.
                  type: boolean
                inactive_seconds:
                  default: 300
                  description: The amount of time, in seconds, which a client can be inactive before
                    OpenVPN disconnects it for inactivity. OpenVPN bases activity on the last incoming
                    or outgoing data channel packet, not control channel packets.

                    `0` disables this feature.
                  type: integer
                ping_method:
                  default: 'keepalive'
                  description: The Ping Method controls OpenVPN monitoring of peers through the
                    control channel and how it deals with unresponsive peers.
                  enum:
                    - keepalive
                    - ping
                  type: string
                keepalive_interval:
                  default: 10
                  description: Enter keepalive interval.
                  type: integer
                keepalive_timeout:
                  default: 60
                  description: Enter keepalive timeout.
                  type: integer
                ping_seconds:
                  default: 10
                  description: Enter ping seconds. This is only necessary for `ping` method.
                  type: integer
                ping_action_seconds:
                  default: 60
                  description: Enter ping action seconds. This is only necessary for `ping` method.
                  type: integer
                ping_push:
                  default: false
                  description: Push ping to VPN client. This is only necessary for `ping` method.
                  type: boolean
                ping_action_push:
                  default: false
                  description: Push ping-restart/ping-exit to VPN client.
                    This is only necessary for `ping` method.
                  type: boolean
                ping_action:
                  default: 'ping_restart'
                  description: Exit or restart OpenVPN after timeout from remote.
                    This is only necessary for `ping` method.
                  enum:
                    - ping_restart
                    - ping_exit
                  type: string
                username_as_common_name:
                  default: false
                  description: Controls whether or not OpenVPN will use the username given by the
                    client in place of the certificate common name (CN) for purposes such as determining
                    Client Specific Overrides. This is only relevant when user authentication is enabled.
                    This is typically the best practice, but not a requirement.

                    This is only necessary for mode `server_user` or `server_tls_user`.
                  type: boolean
                udp_fast_io:
                  default: false
                  description: Controls whether or not OpenVPN will use fast I/O operations with UDP writes
                    to its tun or tap device. This behavior optimizes the packet write event loop,
                    improving CPU efficiency by 5% to 10%. Experimental.
                  type: boolean
                exit_notify:
                  default: 'none'
                  description: Controls whether or not OpenVPN will send an explicit exit notification to
                    connected UDP clients or peers when restarting or shutting down. This notification
                    allows peers to immediately disconnect rather than wait for a timeout.
                    This is only relevant to UDP modes as TCP natively supports closing connections.
                  enum:
                    - once
                    - twice
                    - none
                    - ''
                  type: string
                sndrcvbuf:
                  default: 'default'
                  description: Configures a Send and Receive Buffer size for OpenVPN.
                    The default buffer size can be too small in many cases, depending on hardware
                    and network uplink speeds. Finding the best buffer size can take experimentation.
                    To test the best value for a site, start at 512KiB and test higher and lower
                    values until testing results in peak performance.
                  enum:
                    - 64KiB
                    - 128KiB
                    - 256KiB
                    - 512KiB
                    - 1MiB
                    - 2MiB
                    - default
                    - none
                  type: string
                ntp_servers:
                  default: ''
                  description: Comma-separated list of no more than 2 NTP server IP
                    addresses. Any more than the first two are ignored.
                  type: string
                  example: "192.168.56.101, 192.168.56.102"
                netbios_enable:
                  default: false
                  description: Enable NetBIOS over TCP/IP. If this option is not set,
                    all NetBIOS-over-TCP/IP options (including WINS) will be disabled.
                  type: boolean
                netbios_node_type:
                  description: 'Possible options: b (broadcasts), p (point-to-point
                    name queries to a WINS server), m (broadcast then query name server),
                    and h (query name server, then broadcast). This parameter takes
                    a single letter either b, p, m, or h. Any other string will result
                    in this option being set to none.'
                  enum:
                    - b
                    - p
                    - m
                    - h
                  type: string
                  example: b
                netbios_scope:
                  description: NetBIOS Scope ID provides an extended naming service
                    for NetBIOS over TCP/IP. The NetBIOS scope ID isolates NetBIOS
                    traffic on a single network to only those nodes with the same
                    NetBIOS scope ID.
                  type: string
                  example: '5'
                create_gw:
                  default: 'both'
                  description: If you assign a virtual interface to this OpenVPN server,
                    this setting controls which gateway types will be created.
                  enum:
                    - v4only
                    - v6only
                    - both
                  type: string
                verbosity_level:
                  default: 3
                  description: Configures the amount of detail OpenVPN will log for this instance,
                    which is useful for troubleshooting problems. Higher numbers will result in
                    higher amounts of detail in the log.
                    During normal operation the default selection is ideal.
                    Level `3` is recommended for a good summary of what's happening without
                    being swamped by output. Maximum level `11`.
                    The `default` setting is equivalent to level `1`.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
                    - 8
                    - 9
                    - 10
                    - 11
                    - 'default'
                  oneOf:
                    - type: string
                    - type: integer
                wins_servers:
                  default: ''
                  description: Comma-separated list of no more than 2 WINS server
                    IP addresses. Any more than the first two are ignored.
                  type: string
                  example: "192.168.56.103, 192.168.56.104"
                disable:
                  default: false
                  description: Disable this override without removing it.
                  type: boolean
              required:
                - vpnid
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update OpenVPN Server
      tags:
        - Services > OpenVPN > Server
  /api/v1/services/openvpn/client:
    delete:
      operationId: APIServicesOpenVPNClientDelete
      description: 'Delete OpenVPN Client instance.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-openvpn-client`]'
      parameters:
        - description: This id indicates the id of the client you want to delete.
            This id is static and not an index of an entry in the config array.
            Best to first get all clients and get the id of the one you want to
            delete before calling this endpoint.
          in: query
          name: vpnid
          required: true
          schema:
            oneOf:
              - type: integer
              - type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                vpnid:
                  description: This id indicates the id of the client you want to delete.
                    This id is static and not an index of an entry in the config array.
                    Best to first get all clients and get the id of the one you want to
                    delete before calling this endpoint.
                  oneOf:
                    - type: integer
                    - type: string
                  example: "1"
              required:
                - vpnid
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete OpenVPN Client
      tags:
        - Services > OpenVPN > Client
    get:
      operationId: APIServicesOpenVPNClientRead
      description: 'Read All OpenVPN Client instances.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-openvpn-client`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read OpenVPN Client
      tags:
        - Services > OpenVPN > Client
    post:
      operationId: APIServicesOpenVPNClientCreate
      description: 'Create OpenVPN Client instance.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-openvpn-client`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                mode:
                  default: 'p2p_tls'
                  description: The role for the client, which specifies how peers connect to a
                    server instance. Changing this also affects which options the
                    GUI displays on the rest of the page.
                  enum:
                    - p2p_tls
                    - p2p_shared_key
                  type: string
                protocol:
                  default: 'udp4'
                  description: The IP protocol clients will use to connect to this VPN.
                  enum:
                    - udp4
                    - udp6
                    - tcp4
                    - tcp6
                    - udp
                    - tcp
                  type: string
                dev_mode:
                  default: 'tun'
                  description: OpenVPN can run in one of two device modes.
                  enum:
                    - tun
                    - tap
                  type: string
                interface:
                  default: 'wan'
                  description: 'Selects the interface, VIP, or failover group that the OpenVPN instance will use 
                    when communicating with peers.
                    This also controls which interface the traffic from the instance will exit.
                    VIP can be provided as description, subnet or uniqid.
                    Failover group can be provided as group name.

                    _Note: If you are using a failover group, the failover group must be configured to use the same_.'
                  type: string
                local_port:
                  description: For clients, the local port should be blank in nearly every case so that OpenVPN
                    will use a randomized local port. This behavior is more secure, but some server configurations
                    may require a specific source port.
                  type: integer
                  example: 999
                description:
                  description: Enter a description for this VPN instance, for reference.
                  type: string
                  example: 'My VPN'
                custom_options:
                  description: Custom options may be added in using the Custom option box separated by a semicolon (;)
                    and the firewall will pass the custom directives to OpenVPN.
                  type: string
                  example: 'push "route 10.0.0.0 255.255.255.0";'
                tls:
                  default: ''
                  description: TLS, or Transport Layer Security, can provide session
                    authentication and encryption to ensure the validity of peers and to protect the control channel.
                    Paste the TLS key. This is not necessary for mode `p2p_shared_key`.
                    Options are `""` or `true` for automatic TLS key generation, `false` to disable TLS
                    or a raw TLS key as a string.
                    Omitting disable TLS configuration.
                  type: string
                  example: '-----BEGIN OpenVPN Static key V1-----
                              db8701afd882d746be67f084bae68470
                              54a99ef3b61864cfe1864c6c02584335
                              fe706df150250bf7e294b8c35911817c
                              133c8d9b505573ebeb65259bc54c70ae
                              88cc3163fd11a20f73d2c6fb3eea7cc2
                              fdaefcde510486adc0acbb9481b3aef4
                              930db91806469218b2a4f92e71787cf4
                              635f5b3f773fefc28d492738d2648673
                              8fa9b23d41e5999f58c3f0004a59ecda
                              119162e598764d9c8f6b99e7054f3ea4
                              fdb4461913d2e3273a8a0db29332406a
                              237bcfccca2315445ef809eaa933fa30
                              a9a7510d2d167033edfd3580a824f3e1
                              1af57da6eee89e6318ec29c67da8a19d
                              7c9d74c7afac6ee0f813a0278a6261d7
                              a28e7bdbf1743527346bda359bc92fc9
                            -----END OpenVPN Static key V1-----'
                tls_type:
                  default: 'auth'
                  description: Enter TLS Key Usage Mode. This is not necessary for mode `p2p_shared_key`.
                  enum:
                    - auth
                    - crypt
                  type: string
                tlsauth_keydir:
                  default: 'default'
                  description: The direction in which this VPN endpoint uses the TLS key.
                    The TLS Key Direction must be set to complementary values on the server and clients.
                    The default behavior uses 0 on server instances and 1 on client instances.

                    Enter TLS keydir direction. This is not necessary for mode `p2p_shared_key`.
                  enum:
                    - default
                    - direction-0
                    - direction-1
                    - both-directions
                  type: string
                shared_key:
                  default: ''
                  description: Enter Shared Key. This is only mandatory for mode `p2p_shared_key`.
                    Options are `""` for automatic shared key generation and a raw shared key.
                  type: string
                  example: '-----BEGIN OpenVPN Static key V1-----
                              db8701afd882d746be67f084bae68470
                              54a99ef3b61864cfe1864c6c02584335
                              fe706df150250bf7e294b8c35911817c
                              133c8d9b505573ebeb65259bc54c70ae
                              88cc3163fd11a20f73d2c6fb3eea7cc2
                              fdaefcde510486adc0acbb9481b3aef4
                              930db91806469218b2a4f92e71787cf4
                              635f5b3f773fefc28d492738d2648673
                              8fa9b23d41e5999f58c3f0004a59ecda
                              119162e598764d9c8f6b99e7054f3ea4
                              fdb4461913d2e3273a8a0db29332406a
                              237bcfccca2315445ef809eaa933fa30
                              a9a7510d2d167033edfd3580a824f3e1
                              1af57da6eee89e6318ec29c67da8a19d
                              7c9d74c7afac6ee0f813a0278a6261d7
                              a28e7bdbf1743527346bda359bc92fc9
                            -----END OpenVPN Static key V1-----'
                caref:
                  description: Specify the unique reference ID of the certificate signing authority.
                  type: string
                  example: 61c7fbce3a351
                crlref:
                  default: 'none'
                  description: This optional field is for the Certificate Revocation List (CRL)
                    this tunnel will use to check the validity of peer certificates.

                    A CRL is a list of certificates signed by a CA which are no longer valid.
                    This could be due to a certificate being compromised or lost, such as from
                    a stolen laptop, spyware infection, etc.

                    Specify the unique reference ID of the certificate.
                  type: string
                  example: 61c467cd2fd4f
                certref:
                  description: The certificate used by the VPN instance to identify itself to peers.
                    This certificate must contain appropriate properties marking it as a server
                    certificate and not a user or client certificate.

                    Specify the unique reference ID of the certificate revocation list.
                  type: string
                  example: 61c4121240420
                ncp_enable:
                  default: false
                  description: Enable Data Encryption Negotiation.
                    Disabling this feature is deprecated.
                    Omitting will enable.
                  type: boolean
                data_ciphers:
                  default: 'AES-256-GCM,AES-128-GCM,CHACHA20-POLY1305'
                  description: These options define the cryptographic ciphers OpenVPN will use for this VPN.
                    Enter comma sepereted data encryption algorithms
                    (e.g. `AES-256-GCM,AES-128-GCM,CHACHA20-POLY1305`).
                    Data encryption algorithms will be truncated to 19.
                  type: string
                data_ciphers_fallback:
                  default: 'AES-256-CBC'
                  description: Enter fallback data encryption algorithm.
                  type: string
                digest:
                  default: 'SHA256'
                  description: Selects the message digest algorithm OpenVPN uses for HMAC authentication of
                    incoming packets. This is used for the data channel and if also for the control channel
                    when the tunnel uses a TLS key. The GUI default of SHA256 is a good balance of security and speed.

                    When using AEAD ciphers such as AES-GCM, OpenVPN ignores this value for the data channel
                    since AEAD ciphers already perform authentication. Even with an AEAD cipher, OpenVPN still
                    uses this algorithm to authenticate the control channel when the tunnel uses a TLS key.
                  enum:
                    - BLAKE2b512
                    - BLAKE2b256
                    - MD4
                    - MD5
                    - MD5-SHA1
                    - MDC2
                    - RIPEMD160
                    - SHA1
                    - SHA224
                    - SHA256
                    - SHA3-224
                    - SHA3-256
                    - SHA3-384
                    - SHA3-512
                    - SHA384
                    - SHA512
                    - SHA512-224
                    - SHA512-256
                    - SHAKE128
                    - SHAKE256
                    - SM3
                    - whirlpool
                    - none
                  type: string
                engine:
                  default: 'none'
                  description: If available, this option controls which hardware cryptographic accelerator
                    will be used by OpenVPN. When left unspecified, OpenVPN will choose automatically based
                    on what is available in the operating system to accelerate ciphers OpenVPN wants to use.

                    Some hardware acceleration, such as AES-NI, happens automatically in OpenVPN via OpenSSL
                    and cannot be enabled or disabled by this option.

                    Enter Hardware crypto. Options are `none` and any enabled
                    hardware crypto.
                  type: string
                tunnel_network:
                  default: ''
                  description: 'Virtual IPv4 network used for private communications
                    between this client and the server expressed using CIDR (e.g.
                    10.0.8.5/24).

                    With subnet topology, enter the client IP address and the subnet
                    mask must match the IPv4 Tunnel Network on the server.

                    With net30 topology, the first network address of the /30 is assumed
                    to be the server address and the second network address will be
                    assigned to the client.'
                  type: string
                tunnel_networkv6:
                  default: ''
                  description: 'Virtual IPv6 network used for private communications
                    between this client and the server expressed using prefix (e.g.
                    2001:db9:1:1::100/64).

                    Enter the client IPv6 address and prefix. The prefix must match
                    the IPv6 Tunnel Network prefix on the server.'
                  type: string
                remote_network:
                  default: ''
                  description: 'IPv4 client-side networks that will be routed to this
                    client specifically using iroute, so that a site-to-site VPN can
                    be established. Expressed as a comma-separated list of one or
                    more CIDR ranges. May be left blank if there are no client-side
                    networks to be routed.

                    NOTE: Remember to add these subnets to the IPv4 Remote Networks
                    list on the corresponding OpenVPN server settings.'
                  type: string
                remote_networkv6:
                  default: ''
                  description: 'IPv6 client-side networks that will be routed to this
                    client specifically using iroute, so that a site-to-site VPN can
                    be established. Expressed as a comma-separated list of one or
                    more IP/PREFIX networks. May be left blank if there are no client-side
                    networks to be routed.

                    NOTE: Remember to add these subnets to the IPv6 Remote Networks
                    list on the corresponding OpenVPN server settings.'
                  type: string
                compression:
                  default: 'none'
                  description: Compression to be used with this VPN instance. This is only
                    necessary for `allow_compression` set to `yes` or `asym`.
                    Compression can potentially dangerous and insecure. Deprecated.
                    Compress tunnel packets using the LZO algorithm.
                  enum:
                    - none
                    - stub
                    - stub-v2
                    - lz4
                    - lz4-v2
                    - lzo
                    - noadapt
                    - adaptive
                    - yes
                    - no
                  type: string
                passtos:
                  default: false
                  description: When this option is enabled OpenVPN sets the Type-of-Service (TOS)
                    IP header value of tunnel packets to match the encapsulated packet value.
                    This may cause important traffic to be handled faster over the tunnel by
                    intermediate hops at the cost of minor information disclosure.
                  type: boolean
                topology:
                  default: 'subnet'
                  description: Sets the method OpenVPN uses to allocate addresses for clients in a
                    client/server setup on tun device mode VPNs. The Topology option is relevant
                    only when supplying a virtual adapter IP address to clients using tun mode on IPv4.
                    Some clients may require this even for IPv6, such as OpenVPN Connect, though in
                    reality IPv6 always runs with a subnet topology even when IPv4 uses net30.
                    OpenVPN instances using tap mode always use subnet topology as well.
                  enum:
                    - subnet
                    - net30
                  type: string
                inactive_seconds:
                  default: 300
                  description: The amount of time, in seconds, which a client can be inactive before
                    OpenVPN disconnects it for inactivity. OpenVPN bases activity on the last incoming
                    or outgoing data channel packet, not control channel packets.

                    `0` disables this feature.
                  type: integer
                ping_method:
                  default: 'keepalive'
                  description: The Ping Method controls OpenVPN monitoring of peers through the
                    control channel and how it deals with unresponsive peers.
                  enum:
                    - keepalive
                    - ping
                  type: string
                keepalive_interval:
                  default: 10
                  description: Enter keepalive interval.
                  type: integer
                keepalive_timeout:
                  default: 60
                  description: Enter keepalive timeout.
                  type: integer
                ping_seconds:
                  default: 10
                  description: Enter ping seconds. This is only necessary for `ping` method.
                  type: integer
                ping_action_seconds:
                  default: 60
                  description: Enter ping action seconds. This is only necessary for `ping` method.
                  type: integer
                ping_push:
                  default: false
                  description: Push ping to VPN client. This is only necessary for `ping` method.
                  type: boolean
                ping_action_push:
                  default: false
                  description: Push ping-restart/ping-exit to VPN client.
                    This is only necessary for `ping` method.
                  type: boolean
                ping_action:
                  default: 'ping_restart'
                  description: Exit or restart OpenVPN after timeout from remote.
                    This is only necessary for `ping` method.
                  enum:
                    - ping_restart
                    - ping_exit
                  type: string
                udp_fast_io:
                  default: false
                  description: Controls whether or not OpenVPN will use fast I/O operations with UDP writes
                    to its tun or tap device. This behavior optimizes the packet write event loop,
                    improving CPU efficiency by 5% to 10%. Experimental.
                  type: boolean
                exit_notify:
                  default: 'none'
                  description: Controls whether or not OpenVPN will send an explicit exit notification to
                    connected UDP clients or peers when restarting or shutting down. This notification
                    allows peers to immediately disconnect rather than wait for a timeout.
                    This is only relevant to UDP modes as TCP natively supports closing connections.
                  enum:
                    - once
                    - twice
                    - none
                    - ''
                  type: string
                sndrcvbuf:
                  default: 'default'
                  description: Configures a Send and Receive Buffer size for OpenVPN.
                    The default buffer size can be too small in many cases, depending on hardware
                    and network uplink speeds. Finding the best buffer size can take experimentation.
                    To test the best value for a site, start at 512KiB and test higher and lower
                    values until testing results in peak performance.
                  enum:
                    - 64KiB
                    - 128KiB
                    - 256KiB
                    - 512KiB
                    - 1MiB
                    - 2MiB
                    - default
                    - none
                  type: string
                create_gw:
                  default: 'both'
                  description: If you assign a virtual interface to this OpenVPN server,
                    this setting controls which gateway types will be created.
                  enum:
                    - v4only
                    - v6only
                    - both
                  type: string
                verbosity_level:
                  default: 3
                  description: Configures the amount of detail OpenVPN will log for this instance,
                    which is useful for troubleshooting problems. Higher numbers will result in
                    higher amounts of detail in the log.
                    During normal operation the default selection is ideal.
                    Level `3` is recommended for a good summary of what's happening without
                    being swamped by output. Maximum level `11`.
                    The `default` setting is equivalent to level `1`.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
                    - 8
                    - 9
                    - 10
                    - 11
                    - 'default'
                  oneOf:
                    - type: string
                    - type: integer
                disable:
                  default: false
                  description: Disable this override without removing it.
                  type: boolean
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create OpenVPN Client
      tags:
        - Services > OpenVPN > Client
    put:
      operationId: APIServicesOpenVPNClientUpdate
      description: 'Update OpenVPN Client instance.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-openvpn-client`]'
      parameters:
        - description: This id indicates the id of the client you want to delete.
            This id is static and not an index of an entry in the config array.
            Best to first get all clients and get the id of the one you want to
            delete before calling this endpoint.
          in: query
          name: vpnid
          required: true
          schema:
            oneOf:
              - type: integer
              - type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                vpnid:
                  description: This id indicates the id of the client you want to delete.
                    This id is static and not an index of an entry in the config array.
                    Best to first get all clients and get the id of the one you want to
                    delete before calling this endpoint.
                  type: string
                  example: '1'
                mode:
                  default: 'p2p_tls'
                  description: The role for the server, which specifies how peers connect to a
                    server instance. Changing this also affects which options the
                    GUI displays on the rest of the page.
                  enum:
                    - p2p_tls
                    - p2p_shared_key
                    - server_tls
                    - server_user
                    - server_tls_user
                  type: string
                protocol:
                  default: 'udp4'
                  description: The IP protocol clients will use to connect to this VPN.
                  enum:
                    - udp4
                    - udp6
                    - tcp4
                    - tcp6
                    - udp
                    - tcp
                  type: string
                authmode:
                  default: 'Local Database'
                  description: One or more authentication servers to use when checking user credentials.
                    This can be the Local Database (user manager) or it can be a RADIUS or LDAP server
                    configured in the user manager.

                    Selecting multiple entries will use each one in turn. If authentication against an entry fails,
                    the VPN will try the next server. It will continue this process until it has tried
                    all selected entries.

                    This field is only present when using a Server Mode (`server_user` or `server_tls_user`)
                    which requires user authentication.
                  type: string
                dev_mode:
                  default: 'tun'
                  description: OpenVPN can run in one of two device modes.
                  enum:
                    - tun
                    - tap
                  type: string
                interface:
                  default: 'wan'
                  description: 'Selects the interface, VIP, or failover group that the OpenVPN instance will use 
                    when communicating with peers.
                    This also controls which interface the traffic from the instance will exit.
                    VIP can be provided as description, subnet or uniqid.
                    Failover group can be provided as group name.

                    _Note: If you are using a failover group, the failover group must be configured to use the same_.'
                  type: string
                local_port:
                  description: The port number upon which OpenVPN will listen for incoming connections from peers.
                    Firewall rules must allow traffic to this port and this port must be specified in the client configuration.

                    The port for each server must be unique for each interface when using a standard
                    UDP or TCP Protocol choice and must be globally unique if using a multihome Protocol.

                    Omitting this will default to next available port.
                  type: integer
                  example: 1194
                description:
                  description: Enter a description for this VPN instance, for reference.
                  type: string
                  example: 'My VPN'
                custom_options:
                  description: Custom options may be added in using the Custom option box separated by a semicolon (;)
                    and the firewall will pass the custom directives to OpenVPN.
                  type: string
                  example: 'push "route 10.0.0.0 255.255.255.0";'
                tls:
                  default: ''
                  description: TLS, or Transport Layer Security, can provide session
                    authentication and encryption to ensure the validity of peers and to protect the control channel.
                    Paste the TLS key. This is not necessary for mode `p2p_shared_key`.
                    Options are `""` or `true` for automatic TLS key generation, `false` to disable TLS
                    or a raw TLS key as a string.
                    Omitting disable TLS configuration.
                  type: string
                  example: '-----BEGIN OpenVPN Static key V1-----
                              db8701afd882d746be67f084bae68470
                              54a99ef3b61864cfe1864c6c02584335
                              fe706df150250bf7e294b8c35911817c
                              133c8d9b505573ebeb65259bc54c70ae
                              88cc3163fd11a20f73d2c6fb3eea7cc2
                              fdaefcde510486adc0acbb9481b3aef4
                              930db91806469218b2a4f92e71787cf4
                              635f5b3f773fefc28d492738d2648673
                              8fa9b23d41e5999f58c3f0004a59ecda
                              119162e598764d9c8f6b99e7054f3ea4
                              fdb4461913d2e3273a8a0db29332406a
                              237bcfccca2315445ef809eaa933fa30
                              a9a7510d2d167033edfd3580a824f3e1
                              1af57da6eee89e6318ec29c67da8a19d
                              7c9d74c7afac6ee0f813a0278a6261d7
                              a28e7bdbf1743527346bda359bc92fc9
                            -----END OpenVPN Static key V1-----'
                tls_type:
                  default: 'auth'
                  description: Enter TLS Key Usage Mode. This is not necessary for mode `p2p_shared_key`.
                  enum:
                    - auth
                    - crypt
                  type: string
                tlsauth_keydir:
                  default: 'default'
                  description: The direction in which this VPN endpoint uses the TLS key.
                    The TLS Key Direction must be set to complementary values on the server and clients.
                    The default behavior uses 0 on server instances and 1 on client instances.

                    Enter TLS keydir direction. This is not necessary for mode `p2p_shared_key`.
                  enum:
                    - default
                    - direction-0
                    - direction-1
                    - both-directions
                  type: string
                shared_key:
                  default: ''
                  description: Enter Shared Key. This is only mandatory for mode `p2p_shared_key`.
                    Options are `""` for automatic shared key generation and a raw shared key.
                  type: string
                  example: '-----BEGIN OpenVPN Static key V1-----
                              db8701afd882d746be67f084bae68470
                              54a99ef3b61864cfe1864c6c02584335
                              fe706df150250bf7e294b8c35911817c
                              133c8d9b505573ebeb65259bc54c70ae
                              88cc3163fd11a20f73d2c6fb3eea7cc2
                              fdaefcde510486adc0acbb9481b3aef4
                              930db91806469218b2a4f92e71787cf4
                              635f5b3f773fefc28d492738d2648673
                              8fa9b23d41e5999f58c3f0004a59ecda
                              119162e598764d9c8f6b99e7054f3ea4
                              fdb4461913d2e3273a8a0db29332406a
                              237bcfccca2315445ef809eaa933fa30
                              a9a7510d2d167033edfd3580a824f3e1
                              1af57da6eee89e6318ec29c67da8a19d
                              7c9d74c7afac6ee0f813a0278a6261d7
                              a28e7bdbf1743527346bda359bc92fc9
                            -----END OpenVPN Static key V1-----'
                caref:
                  description: Specify the unique reference ID of the certificate signing authority.
                  type: string
                  example: 61c7fbce3a351
                crlref:
                  default: 'none'
                  description: This optional field is for the Certificate Revocation List (CRL)
                    this tunnel will use to check the validity of peer certificates.

                    A CRL is a list of certificates signed by a CA which are no longer valid.
                    This could be due to a certificate being compromised or lost, such as from
                    a stolen laptop, spyware infection, etc.

                    Specify the unique reference ID of the certificate.
                  type: string
                  example: 61c467cd2fd4f
                certref:
                  description: The certificate used by the VPN instance to identify itself to peers.
                    This certificate must contain appropriate properties marking it as a server
                    certificate and not a user or client certificate.

                    Specify the unique reference ID of the certificate revocation list.
                  type: string
                  example: 61c4121240420
                ocspcheck:
                  default: false
                  description: When set, OpenVPN will attempt to confirm client certificate validity
                    using Online Certificate Status Protocol (OCSP) against the site listed in the OCSP URL field.
                  type: boolean
                ocspurl:
                  description: Enter OCSP URL. This is only necessary for `ocspcheck`.
                  type: string
                  format: uri
                dh_length:
                  default: 2048
                  description: The Diffie-Hellman (DH) key exchange parameters are used for establishing a
                    secure communications channel. They may be regenerated at any time, and they are not
                    specific to an OpenVPN instance. When importing an existing OpenVPN configuration
                    these parameters do not need to be copied from the previous server nor does it require
                    generating new parameters. The length of the desired DH parameters may be chosen from
                    the drop-down box, either 1024, 2048, or 4096. There is an additional choice for
                    ECDH Only which disables traditional DH parameters and uses only ECDH.
                  enum:
                    - 1024
                    - 2048
                    - 3072
                    - 4096
                    - 6144
                    - 7680
                    - 8192
                    - 15360
                    - 16384
                    - 'ECDH Only'
                  oneOf:
                    - type: string
                    - type: integer
                ecdh_curve:
                  default: 'none'
                  description: Configures a specific elliptic curve to use for Elliptic Curve Diffie-Hellman
                    key exchanges. This is only for use with ECDH TLS encryption.
                  enum:
                    - none
                    - prime256v1
                    - secp384r1
                    - secp521r1
                  type: string
                cert_depth:
                  default: 'one'
                  description: This option limits the valid length of a certificate chain. The default value
                    limits a chain to One (Client+Server). With that value, if an unauthorized intermediate
                    CA signs a certificate, certificates signed by the rogue intermediate would fail validation.
                    In cases when the certificate stricture requires chaining with intermediates,
                    raise this limit to accommodate the longest allowed chain.
                  enum:
                    - none
                    - one
                    - two
                    - three
                    - four
                    - five
                  type: string
                strictusercn:
                  default: false
                  description: Controls whether the firewall will enforce a strict match between the username
                    supplied by the user and the Common Name of their user certificate when the firewall
                    authenticates a user. When enabled, authentication fails if the two values do not match.

                    This prevents users from using their own credentials with the certificate from a different
                    user and vice versa.

                    This is only necessary for mode `server_tls_user`.
                    Omitting will disable.
                  type: boolean
                ncp_enable:
                  default: false
                  description: Enable Data Encryption Negotiation.
                    Disabling this feature is deprecated.
                    Omitting will enable.
                  type: boolean
                data_ciphers:
                  default: 'AES-256-GCM,AES-128-GCM,CHACHA20-POLY1305'
                  description: These options define the cryptographic ciphers OpenVPN will use for this VPN.
                    Enter comma sepereted data encryption algorithms
                    (e.g. `AES-256-GCM,AES-128-GCM,CHACHA20-POLY1305`).
                    Data encryption algorithms will be truncated to 19.
                  type: string
                data_ciphers_fallback:
                  default: 'AES-256-CBC'
                  description: Enter fallback data encryption algorithm.
                  type: string
                digest:
                  default: 'SHA256'
                  description: Selects the message digest algorithm OpenVPN uses for HMAC authentication of
                    incoming packets. This is used for the data channel and if also for the control channel
                    when the tunnel uses a TLS key. The GUI default of SHA256 is a good balance of security and speed.

                    When using AEAD ciphers such as AES-GCM, OpenVPN ignores this value for the data channel
                    since AEAD ciphers already perform authentication. Even with an AEAD cipher, OpenVPN still
                    uses this algorithm to authenticate the control channel when the tunnel uses a TLS key.
                  enum:
                    - BLAKE2b512
                    - BLAKE2b256
                    - MD4
                    - MD5
                    - MD5-SHA1
                    - MDC2
                    - RIPEMD160
                    - SHA1
                    - SHA224
                    - SHA256
                    - SHA3-224
                    - SHA3-256
                    - SHA3-384
                    - SHA3-512
                    - SHA384
                    - SHA512
                    - SHA512-224
                    - SHA512-256
                    - SHAKE128
                    - SHAKE256
                    - SM3
                    - whirlpool
                    - none
                  type: string
                engine:
                  default: 'none'
                  description: If available, this option controls which hardware cryptographic accelerator
                    will be used by OpenVPN. When left unspecified, OpenVPN will choose automatically based
                    on what is available in the operating system to accelerate ciphers OpenVPN wants to use.

                    Some hardware acceleration, such as AES-NI, happens automatically in OpenVPN via OpenSSL
                    and cannot be enabled or disabled by this option.

                    Enter Hardware crypto. Options are `none` and any enabled
                    hardware crypto.
                  type: string
                tunnel_network:
                  default: ''
                  description: 'Virtual IPv4 network used for private communications
                    between this client and the server expressed using CIDR (e.g.
                    10.0.8.5/24).

                    With subnet topology, enter the client IP address and the subnet
                    mask must match the IPv4 Tunnel Network on the server.

                    With net30 topology, the first network address of the /30 is assumed
                    to be the server address and the second network address will be
                    assigned to the client.'
                  type: string
                tunnel_networkv6:
                  default: ''
                  description: 'Virtual IPv6 network used for private communications
                    between this client and the server expressed using prefix (e.g.
                    2001:db9:1:1::100/64).

                    Enter the client IPv6 address and prefix. The prefix must match
                    the IPv6 Tunnel Network prefix on the server.'
                  type: string
                local_network:
                  default: ''
                  description: 'IPv4 server-side networks that will be accessible
                    from this particular client. Expressed as a comma-separated list
                    of one or more CIDR networks.

                    NOTE: Networks do not need to be specified here if they have already
                    been defined on the main server configuration.'
                  type: string
                local_networkv6:
                  default: ''
                  description: 'IPv6 server-side networks that will be accessible
                    from this particular client. Expressed as a comma-separated list
                    of one or more IP/PREFIX networks.

                    NOTE: Networks do not need to be specified here if they have already
                    been defined on the main server configuration.'
                  type: string
                remote_network:
                  default: ''
                  description: 'IPv4 client-side networks that will be routed to this
                    client specifically using iroute, so that a site-to-site VPN can
                    be established. Expressed as a comma-separated list of one or
                    more CIDR ranges. May be left blank if there are no client-side
                    networks to be routed.

                    NOTE: Remember to add these subnets to the IPv4 Remote Networks
                    list on the corresponding OpenVPN server settings.'
                  type: string
                remote_networkv6:
                  default: ''
                  description: 'IPv6 client-side networks that will be routed to this
                    client specifically using iroute, so that a site-to-site VPN can
                    be established. Expressed as a comma-separated list of one or
                    more IP/PREFIX networks. May be left blank if there are no client-side
                    networks to be routed.

                    NOTE: Remember to add these subnets to the IPv6 Remote Networks
                    list on the corresponding OpenVPN server settings.'
                  type: string
                redirect_gateway:
                  default: false
                  description: When a Redirect IPv4 Gateway option is selected the server
                    pushes a message to clients instructing them to forward all traffic for
                    that address family, including Internet traffic, over the VPN tunnel.
                  type: boolean
                redirect_gateway6:
                  default: false
                  description: When a Redirect IPv6 Gateway option is selected the server
                    pushes a message to clients instructing them to forward all traffic for
                    that address family, including Internet traffic, over the VPN tunnel.
                  type: boolean
                serverbridge_dhcp:
                  description: When using `tap` mode for a remote access SSL/TLS VPN,
                    (`server_tls`, `server_user`, `server_tls_user`), additional options
                    to control bridging behavior in OpenVPN and client address assignment.

                    When selected, OpenVPN passes through DHCP to the bridged.
                    In the most common scenario, this is LAN.

                    Using this method connecting clients receive IP addresses from the
                    same DHCP pool used by clients on the LAN.
                  type: string
                  format: ipv4
                serverbridge_interface:
                  default: "none"
                  description: This setting indicates to OpenVPN which interface will be used for the bridge.
                    In most cases this is LAN.
                    This option controls which existing IP address and subnet mask are used by OpenVPN for the bridge.
                    Setting this to none will cause the Server Bridge DHCP (`serverbridge_dhcp_start`, `serverbridge_dhcp_end`) settings below to be ignored.
                  enum:
                    - wan
                    - lan
                    - none
                  type: string
                serverbridge_routegateway:
                  description: Makes OpenVPN push the Bridge Interface IPv4 address to connecting
                    clients as a route gateway.

                    When the IPv4 Tunnel Network in OpenVPN is empty for a bridged VPN,
                    connecting clients cannot automatically determine a server-side gateway for
                    use with routes pushed to clients by the server.
                  type: boolean
                  example: true
                serverbridge_dhcp_start:
                  description: Defines a DHCP range from which OpenVPN can assign addresses to clients.
                    If these settings are left blank, OpenVPN passes DHCP through to the bridge interface
                    and it ignores the interface setting above.

                    When set, this range should be within the same subnet as the Bridge Interface
                    (`serverbridge_interface`) but it should not overlap an existing in-use portion
                    of the subnet, such as the current DHCP pool.

                    This allows a range of IP addresses to be set aside for use only by OpenVPN clients so they may be contained within a portion of the internal network rather than consuming IP addresses from the existing DHCP pool.
                  type: string
                  format: ipv4
                serverbridge_dhcp_end:
                  description: Defines a DHCP range from which OpenVPN can assign addresses to clients.
                    If these settings are left blank, OpenVPN passes DHCP through to the bridge interface
                    and it ignores the interface setting above.

                    When set, this range should be within the same subnet as the Bridge Interface
                    (`serverbridge_interface`) but it should not overlap an existing in-use portion
                    of the subnet, such as the current DHCP pool.

                    This allows a range of IP addresses to be set aside for use only by OpenVPN clients so they may be contained within a portion of the internal network rather than consuming IP addresses from the existing DHCP pool.
                  type: string
                  format: ipv4
                concurrent_connections:
                  description: Specifies the number of clients that may be simultaneously
                    connected to this OpenVPN server instance at any given time.
                  type: integer
                  example: 10
                allow_compression:
                  default: 'no'
                  description: Controls whether or not compression is allowed on the VPN, and how it is handled.
                  enum:
                    - asym
                    - no
                    - yes
                  type: string
                compression:
                  default: 'none'
                  description: Compression to be used with this VPN instance. This is only
                    necessary for `allow_compression` set to `yes` or `asym`.
                    Compression can potentially dangerous and insecure. Deprecated.
                    Compress tunnel packets using the LZO algorithm.
                  enum:
                    - none
                    - stub
                    - stub-v2
                    - lz4
                    - lz4-v2
                    - lzo
                    - noadapt
                    - adaptive
                    - yes
                    - no
                  type: string
                compression_push:
                  default: false
                  description: Push the selected Compression setting to connecting clients.
                    This is only necessary for `allow_compression` set to `yes` or `asym`.
                  type: boolean
                passtos:
                  default: false
                  description: When this option is enabled OpenVPN sets the Type-of-Service (TOS)
                    IP header value of tunnel packets to match the encapsulated packet value.
                    This may cause important traffic to be handled faster over the tunnel by
                    intermediate hops at the cost of minor information disclosure.
                  type: boolean
                client2client:
                  default: false
                  description: This option controls whether or not connected clients are able to
                    communicate with one another. To allow this behavior, check the option.
                    When unchecked, clients can only send traffic to the server or destinations
                    beyond the server such as routed networks or the Internet.
                  type: boolean
                duplicate_cn:
                  default: false
                  description: Controls whether or not OpenVPN will allow multiple connections
                    from the same user to work simultaneously.
                    This is only necessary for mode `p2p_shared_key`.
                  type: boolean
                dynamic_ip:
                  default: false
                  description: For clients on Internet connections where the IP address changes frequently,
                    or mobile users who commonly move between different Internet connections,
                    check this option for more stable connectivity. Where the client IP address
                    is static or rarely changes, not using this option offers a small security improvement.
                  type: boolean
                topology:
                  default: 'subnet'
                  description: Sets the method OpenVPN uses to allocate addresses for clients in a
                    client/server setup on tun device mode VPNs. The Topology option is relevant
                    only when supplying a virtual adapter IP address to clients using tun mode on IPv4.
                    Some clients may require this even for IPv6, such as OpenVPN Connect, though in
                    reality IPv6 always runs with a subnet topology even when IPv4 uses net30.
                    OpenVPN instances using tap mode always use subnet topology as well.
                  enum:
                    - subnet
                    - net30
                  type: string
                dns_domain:
                  default: ''
                  description: Configures a default domain name which clients will append to DNS requests.
                    This can be helpful to ensure name resolution works properly for hosts on the local
                    network where DNS name resolution is used.
                  type: string
                  example: example.com
                dns_servers:
                  default: ''
                  description: Comma-separated list of no more than 4 DNS server IP
                    addresses (i.e. 8.8.8.8). Any more than the first four are ignored.
                    This list is provided to the clent.
                  type: string
                  example: "8.8.8.8, 8.8.4.4, 8.8.3.3, 8.8.2.2"
                push_blockoutsidedns:
                  default: false
                  description: Make Windows 10 Clients Block access to DNS servers except
                    across OpenVPN while connected, forcing clients to use only VPN DNS servers.
                  type: boolean
                push_register_dns:
                  default: false
                  description: Run "net stop dnscache", "net start dnscache",
                    "ipconfig /flushdns" and "ipconfig /registerdns" on connection initiation.
                  type: boolean
                inactive_seconds:
                  default: 300
                  description: The amount of time, in seconds, which a client can be inactive before
                    OpenVPN disconnects it for inactivity. OpenVPN bases activity on the last incoming
                    or outgoing data channel packet, not control channel packets.

                    `0` disables this feature.
                  type: integer
                ping_method:
                  default: 'keepalive'
                  description: The Ping Method controls OpenVPN monitoring of peers through the
                    control channel and how it deals with unresponsive peers.
                  enum:
                    - keepalive
                    - ping
                  type: string
                keepalive_interval:
                  default: 10
                  description: Enter keepalive interval.
                  type: integer
                keepalive_timeout:
                  default: 60
                  description: Enter keepalive timeout.
                  type: integer
                ping_seconds:
                  default: 10
                  description: Enter ping seconds. This is only necessary for `ping` method.
                  type: integer
                ping_action_seconds:
                  default: 60
                  description: Enter ping action seconds. This is only necessary for `ping` method.
                  type: integer
                ping_push:
                  default: false
                  description: Push ping to VPN client. This is only necessary for `ping` method.
                  type: boolean
                ping_action_push:
                  default: false
                  description: Push ping-restart/ping-exit to VPN client.
                    This is only necessary for `ping` method.
                  type: boolean
                ping_action:
                  default: 'ping_restart'
                  description: Exit or restart OpenVPN after timeout from remote.
                    This is only necessary for `ping` method.
                  enum:
                    - ping_restart
                    - ping_exit
                  type: string
                username_as_common_name:
                  default: false
                  description: Controls whether or not OpenVPN will use the username given by the
                    client in place of the certificate common name (CN) for purposes such as determining
                    Client Specific Overrides. This is only relevant when user authentication is enabled.
                    This is typically the best practice, but not a requirement.

                    This is only necessary for mode `server_user` or `server_tls_user`.
                  type: boolean
                udp_fast_io:
                  default: false
                  description: Controls whether or not OpenVPN will use fast I/O operations with UDP writes
                    to its tun or tap device. This behavior optimizes the packet write event loop,
                    improving CPU efficiency by 5% to 10%. Experimental.
                  type: boolean
                exit_notify:
                  default: 'none'
                  description: Controls whether or not OpenVPN will send an explicit exit notification to
                    connected UDP clients or peers when restarting or shutting down. This notification
                    allows peers to immediately disconnect rather than wait for a timeout.
                    This is only relevant to UDP modes as TCP natively supports closing connections.
                  enum:
                    - once
                    - twice
                    - none
                    - ''
                  type: string
                sndrcvbuf:
                  default: 'default'
                  description: Configures a Send and Receive Buffer size for OpenVPN.
                    The default buffer size can be too small in many cases, depending on hardware
                    and network uplink speeds. Finding the best buffer size can take experimentation.
                    To test the best value for a site, start at 512KiB and test higher and lower
                    values until testing results in peak performance.
                  enum:
                    - 64KiB
                    - 128KiB
                    - 256KiB
                    - 512KiB
                    - 1MiB
                    - 2MiB
                    - default
                    - none
                  type: string
                ntp_servers:
                  default: ''
                  description: Comma-separated list of no more than 2 NTP server IP
                    addresses. Any more than the first two are ignored.
                  type: string
                  example: "192.168.56.101, 192.168.56.102"
                netbios_enable:
                  default: false
                  description: Enable NetBIOS over TCP/IP. If this option is not set,
                    all NetBIOS-over-TCP/IP options (including WINS) will be disabled.
                  type: boolean
                netbios_node_type:
                  description: 'Possible options: b (broadcasts), p (point-to-point
                    name queries to a WINS server), m (broadcast then query name server),
                    and h (query name server, then broadcast). This parameter takes
                    a single letter either b, p, m, or h. Any other string will result
                    in this option being set to none.'
                  enum:
                    - b
                    - p
                    - m
                    - h
                  type: string
                  example: b
                netbios_scope:
                  description: NetBIOS Scope ID provides an extended naming service
                    for NetBIOS over TCP/IP. The NetBIOS scope ID isolates NetBIOS
                    traffic on a single network to only those nodes with the same
                    NetBIOS scope ID.
                  type: string
                  example: '5'
                create_gw:
                  default: 'both'
                  description: If you assign a virtual interface to this OpenVPN server,
                    this setting controls which gateway types will be created.
                  enum:
                    - v4only
                    - v6only
                    - both
                  type: string
                verbosity_level:
                  default: 3
                  description: Configures the amount of detail OpenVPN will log for this instance,
                    which is useful for troubleshooting problems. Higher numbers will result in
                    higher amounts of detail in the log.
                    During normal operation the default selection is ideal.
                    Level `3` is recommended for a good summary of what's happening without
                    being swamped by output. Maximum level `11`.
                    The `default` setting is equivalent to level `1`.
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
                    - 8
                    - 9
                    - 10
                    - 11
                    - 'default'
                  oneOf:
                    - type: string
                    - type: integer
                wins_servers:
                  default: ''
                  description: Comma-separated list of no more than 2 WINS server
                    IP addresses. Any more than the first two are ignored.
                  type: string
                  example: "192.168.56.103, 192.168.56.104"
                disable:
                  default: false
                  description: Disable this override without removing it.
                  type: boolean
              required:
                - vpnid
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update OpenVPN Client
      tags:
        - Services > OpenVPN > Client
  /api/v1/services/openvpn/csc:
    delete:
      operationId: APIServicesOpenVPNClientSpecificOverridesDelete
      description: 'Delete OpenVPN Client Specific Override.<br><br>

              _Requires at least one of the following privileges:_ [`page-all`, `page-openvpn-server`]'
      parameters:
        - description: ID of the client specific override to update. Refer to the 'Obtaining
            Object IDs' section in the documentation intro for help obtaining this ID.
          in: query
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete OpenVPN client specific override
      tags:
        - Services > OpenVPN > CSC
    get:

      operationId: APIServicesOpenVPNClientSpecificOverridesRead
      description: 'Read existing OpenVPN Client Specific Overrides.<br><br>

                    _Requires at least one of the following privileges:_ [`page-all`, `page-openvpn-server`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read OpenVPN client specific overrides
      tags:
        - Services > OpenVPN > CSC
    post:
      operationId: APIServicesOpenVPNClientSpecificOverridesCreate
      description: 'Create a new OpenVPN Client Specific Overrides.<br><br>

          _Requires at least one of the following privileges:_ [`page-all`, `page-openvpn-server`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                block:
                  default: false
                  description: Prevents the client from connecting to this server.
                    Do not use this option to permanently disable a client due to
                    a compromised key or password. Use a CRL (certificate revocation
                    list) instead.
                  type: boolean
                common_name:
                  description: X.509 common name for the client certificate, or the
                    username for VPNs utilizing password authentication. This match
                    is case sensitive.
                  type: string
                custom_options:
                  description: Additional options to add for this client specific
                    override, separated by a semicolon.
                  type: string
                description:
                  default: ''
                  description: Description for administrative reference.
                  type: string
                disable:
                  default: false
                  description: Disable this override without removing it.
                  type: boolean
                dns_domain:
                  default: ''
                  description: Domain name for DNS to provide to the client.
                  type: string
                dns_servers:
                  default: ''
                  description: Comma-separated list of no more than 4 DNS server IP
                    addresses (i.e. 8.8.8.8). Any more than the first four are ignored.
                    This list is provided to the clent.
                  type: string
                local_network:
                  default: ''
                  description: 'IPv4 server-side networks that will be accessible
                      from this particular client. Expressed as a comma-separated list
                      of one or more CIDR networks.

                      NOTE: Networks do not need to be specified here if they have already
                      been defined on the main server configuration.'
                  type: string
                local_networkv6:
                  default: ''
                  description: 'IPv6 server-side networks that will be accessible
                      from this particular client. Expressed as a comma-separated list
                      of one or more IP/PREFIX networks.

                      NOTE: Networks do not need to be specified here if they have already
                      been defined on the main server configuration.'
                  type: string
                netbios_enable:
                  default: false
                  description: Enable NetBIOS over TCP/IP. If this option is not set,
                    all NetBIOS-over-TCP/IP options (including WINS) will be disabled.
                  type: boolean
                netbios_node_type:
                  description: 'Possible options: b (broadcasts), p (point-to-point
                      name queries to a WINS server), m (broadcast then query name server),
                      and h (query name server, then broadcast). This parameter takes
                      a single letter either b, p, m, or h. Any other string will result
                      in this option being set to none.'
                  enum:
                    - b
                    - p
                    - m
                    - h
                  type: string
                netbios_scope:
                  default: ''
                  description: NetBIOS Scope ID provides an extended naming service
                    for NetBIOS over TCP/IP. The NetBIOS scope ID isolates NetBIOS
                    traffic on a single network to only those nodes with the same
                    NetBIOS scope ID.
                  type: string
                ntp_servers:
                  default: ''
                  description: Comma-separated list of no more than 2 NTP server IP
                    addresses. Any more than the first two are ignored.
                  type: string
                prevent_server_definitions:
                  default: false
                  description: Prevent this client from receiving any server-defined
                    client settings.
                  type: boolean
                redirect_gateway:
                  default: false
                  description: Force all client generated traffic through the tunnel.
                  type: boolean
                remote_network:
                  default: ''
                  description: 'IPv4 client-side networks that will be routed to this
                      client specifically using iroute, so that a site-to-site VPN can
                      be established. Expressed as a comma-separated list of one or
                      more CIDR ranges. May be left blank if there are no client-side
                      networks to be routed.

                      NOTE: Remember to add these subnets to the IPv4 Remote Networks
                      list on the corresponding OpenVPN server settings.'
                  type: string
                remote_networkv6:
                  default: ''
                  description: 'IPv6 client-side networks that will be routed to this
                      client specifically using iroute, so that a site-to-site VPN can
                      be established. Expressed as a comma-separated list of one or
                      more IP/PREFIX networks. May be left blank if there are no client-side
                      networks to be routed.

                      NOTE: Remember to add these subnets to the IPv6 Remote Networks
                      list on the corresponding OpenVPN server settings.'
                  type: string
                remove_server_routes:
                  default: false
                  description: Prevent this client from receiving any server-defined
                    routes without removing any other options.
                  type: boolean
                server_list:
                  description: Comma separated string containing the ids of the OpenVPN
                    servers that use this override. Omitting this activates the override
                    for all servers.
                  type: string
                tunnel_network:
                  default: ''
                  description: 'Virtual IPv4 network used for private communications
                      between this client and the server expressed using CIDR (e.g.
                      10.0.8.5/24).

                      With subnet topology, enter the client IP address and the subnet
                      mask must match the IPv4 Tunnel Network on the server.

                      With net30 topology, the first network address of the /30 is assumed
                      to be the server address and the second network address will be
                      assigned to the client.'
                  type: string
                tunnel_networkv6:
                  default: ''
                  description: 'Virtual IPv6 network used for private communications
                      between this client and the server expressed using prefix (e.g.
                      2001:db9:1:1::100/64).

                      Enter the client IPv6 address and prefix. The prefix must match
                      the IPv6 Tunnel Network prefix on the server.'
                  type: string
                wins_servers:
                  default: ''
                  description: Comma-separated list of no more than 2 WINS server
                    IP addresses. Any more than the first two are ignored.
                  type: string
              required:
                - common_name
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create OpenVPN client specific override
      tags:
        - Services > OpenVPN > CSC
    put:
      operationId: APIServicesOpenVPNClientSpecificOverridesUpdate
      description: 'Update an existing OpenVPN Client Specific Overrides.<br><br>

          _Requires at least one of the following privileges:_ [`page-all`, `page-openvpn-server`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                block:
                  default: false
                  description: Prevents the client from connecting to this server.
                    Do not use this option to permanently disable a client due to
                    a compromised key or password. Use a CRL (certificate revocation
                    list) instead.
                  type: boolean
                common_name:
                  description: X.509 common name for the client certificate, or the
                    username for VPNs utilizing password authentication. This match
                    is case sensitive.
                  type: string
                custom_options:
                  description: Additional options to add for this client specific
                    override, separated by a semicolon.
                  type: string
                description:
                  default: ''
                  description: Description for administrative reference.
                  type: string
                disable:
                  default: false
                  description: Disable this override without removing it.
                  type: boolean
                dns_domain:
                  default: ''
                  description: Domain name for DNS to provide to the client.
                  type: string
                dns_servers:
                  default: ''
                  description: Comma-separated list of no more than 4 DNS server IP
                    addresses (i.e. 8.8.8.8). Any more than the first four are ignored.
                    This list is provided to the clent.
                  type: string
                id:
                  description: ID of the client specific override to update. Refer
                    to the 'Obtaining Object IDs' section in the documentation intro
                    for help obtaining this ID.
                  type: string
                local_network:
                  default: ''
                  description: 'IPv4 server-side networks that will be accessible
                      from this particular client. Expressed as a comma-separated list
                      of one or more CIDR networks.

                      NOTE: Networks do not need to be specified here if they have already
                      been defined on the main server configuration.'
                  type: string
                local_networkv6:
                  default: ''
                  description: 'IPv6 server-side networks that will be accessible
                      from this particular client. Expressed as a comma-separated list
                      of one or more IP/PREFIX networks.

                      NOTE: Networks do not need to be specified here if they have already
                      been defined on the main server configuration.'
                  type: string
                netbios_enable:
                  default: false
                  description: Enable NetBIOS over TCP/IP. If this option is not set,
                    all NetBIOS-over-TCP/IP options (including WINS) will be disabled.
                  type: boolean
                netbios_node_type:
                  description: 'Possible options: b (broadcasts), p (point-to-point
                      name queries to a WINS server), m (broadcast then query name server),
                      and h (query name server, then broadcast). This parameter takes
                      a single letter either b, p, m, or h. Any other string will result
                      in this option being set to none.'
                  enum:
                    - b
                    - p
                    - m
                    - h
                  type: string
                netbios_scope:
                  default: ''
                  description: NetBIOS Scope ID provides an extended naming service
                    for NetBIOS over TCP/IP. The NetBIOS scope ID isolates NetBIOS
                    traffic on a single network to only those nodes with the same
                    NetBIOS scope ID.
                  type: string
                ntp_servers:
                  default: ''
                  description: Comma-separated list of no more than 2 NTP server IP
                    addresses. Any more than the first two are ignored.
                  type: string
                prevent_server_definitions:
                  default: false
                  description: Prevent this client from receiving any server-defined
                    client settings.
                  type: boolean
                redirect_gateway:
                  default: false
                  description: Force all client generated traffic through the tunnel.
                  type: boolean
                remote_network:
                  default: ''
                  description: 'IPv4 client-side networks that will be routed to this
                      client specifically using iroute, so that a site-to-site VPN can
                      be established. Expressed as a comma-separated list of one or
                      more CIDR ranges. May be left blank if there are no client-side
                      networks to be routed.

                      NOTE: Remember to add these subnets to the IPv4 Remote Networks
                      list on the corresponding OpenVPN server settings.'
                  type: string
                remote_networkv6:
                  default: ''
                  description: 'IPv6 client-side networks that will be routed to this
                      client specifically using iroute, so that a site-to-site VPN can
                      be established. Expressed as a comma-separated list of one or
                      more IP/PREFIX networks. May be left blank if there are no client-side
                      networks to be routed.

                      NOTE: Remember to add these subnets to the IPv6 Remote Networks
                      list on the corresponding OpenVPN server settings.'
                  type: string
                remove_server_routes:
                  default: false
                  description: Prevent this client from receiving any server-defined
                    routes without removing any other options.
                  type: boolean
                server_list:
                  description: Comma separated string containing the ids of the OpenVPN
                    servers that use this override. Omitting this activates the override
                    for all servers.
                  type: string
                tunnel_network:
                  default: ''
                  description: 'Virtual IPv4 network used for private communications
                      between this client and the server expressed using CIDR (e.g.
                      10.0.8.5/24).

                      With subnet topology, enter the client IP address and the subnet
                      mask must match the IPv4 Tunnel Network on the server.

                      With net30 topology, the first network address of the /30 is assumed
                      to be the server address and the second network address will be
                      assigned to the client.'
                  type: string
                tunnel_networkv6:
                  default: ''
                  description: 'Virtual IPv6 network used for private communications
                      between this client and the server expressed using prefix (e.g.
                      2001:db9:1:1::100/64).

                      Enter the client IPv6 address and prefix. The prefix must match
                      the IPv6 Tunnel Network prefix on the server.'
                  type: string
                wins_servers:
                  default: ''
                  description: Comma-separated list of no more than 2 WINS server
                    IP addresses. Any more than the first two are ignored.
                  type: string
              required:
                - id
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update OpenVPN client specific override
      tags:
        - Services > OpenVPN > CSC
  /api/v1/services/restart:
    post:
      operationId: APIServicesRestartCreate
      description: 'Restart available services.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                service:
                  description: Specify the name of a single service to restart. If
                    this field is not specified, all services  will be restarted.
                  type: string
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Restart services
      tags:
        - Services
  /api/v1/services/sshd:
    get:
      operationId: APIServicesSSHdRead
      description: 'Read the current Secure Shell (sshd) configuration. <br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-advanced-admin`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read Secure Shell (sshd) configuration
      tags:
        - Services > SSHD
    put:
      operationId: APIServicesSSHdUpdate
      description: 'Modify the Secure Shell (sshd) service configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-advanced-admin`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable:
                  description: Enable the Secure Shell (sshd) service.
                  type: boolean
                port:
                  description: Port the Secure Shell server will bind to.
                  maximum: 65535
                  minimum: 1
                  type: integer
                sshdagentforwarding:
                  description: Enable Secure Shell agent forwarding.
                  type: boolean
                sshdkeyonly:
                  description: Secure Shell authentication type. Use `disabled` for
                    password OR public key, `enabled` for public key only, or `both`
                    to require both a password AND public key.
                  enum:
                    - disabled
                    - enabled
                    - both
                  type: string
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update Secure Shell (sshd) configuration
      tags:
        - Services > SSHD
  /api/v1/services/sshd/restart:
    post:
      operationId: APIServicesSSHdRestartCreate
      description: 'Restart the Secure Shell (sshd) service.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Restart Secure Shell (sshd) service
      tags:
        - Services > SSHD
  /api/v1/services/sshd/start:
    post:
      operationId: APIServicesSSHdStartCreate
      description: 'Start the Secure Shell (sshd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Start Secure Shell (sshd) service
      tags:
        - Services > SSHD
  /api/v1/services/sshd/stop:
    post:
      operationId: APIServicesSSHdStopCreate
      description: 'Stop the Secure Shell (sshd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Stop Secure Shell (sshd) service
      tags:
        - Services > SSHD
  /api/v1/services/start:
    post:
      operationId: APIServicesStartCreate
      description: 'Start all available services.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Start all services
      tags:
        - Services
  /api/v1/services/stop:
    post:
      operationId: APIServicesStopCreate
      description: 'Stop all available services.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      requestBody:
        content:
          application/json:
            schema:
              example: { }
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Stop all services
      tags:
        - Services
  /api/v1/services/syslogd/restart:
    post:
      operationId: APIServicesSyslogdRestartCreate
      description: 'Restart the System Logger (syslogd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Restart System Logger (syslogd) service
      tags:
        - Services > SYSLOGD
  /api/v1/services/syslogd/start:
    post:
      operationId: APIServicesSyslogdStartCreate
      description: 'Start the System Logger (syslogd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Start System Logger (syslogd) service
      tags:
        - Services > SYSLOGD
  /api/v1/services/syslogd/stop:
    post:
      operationId: APIServicesSyslogdStopCreate
      description: 'Stop the System Logger (syslogd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Stop System Logger (syslogd) service
      tags:
        - Services > SYSLOGD
  /api/v1/services/unbound:
    get:
      operationId: APIServicesUnboundRead
      description: 'Read the entire DNS Resolver (Unbound) configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsresolver`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read DNS Resolver (Unbound) configuration
      tags:
        - Services > Unbound
  /api/v1/services/unbound/access_list:
    delete:
      operationId: APIServicesUnboundAccessListDelete
      description: 'Delete DNS Resolver (Unbound) access list.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsresolver-acls`]'
      parameters:
        - description: ID of the access list to delete. Refer to the 'Obtaining Object
            IDs' section in the documentation intro for help obtaining this ID.
          in: query
          name: id
          required: true
          schema:
            type: integer
        - description: Specify whether or not the DNS Resolver (Unbound) configuration
            should be reloaded immediately after. `true` to apply immediately, `false`
            to keep the changes pending. If `false`, the DNS Resolver (Unbound) configuration
            must be reloaded manually by calling the /api/v1/services/unbound/apply
            endpoint.
          in: query
          name: apply
          schema:
            default: false
            type: boolean
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete DNS Resolver (Unbound) access list
      tags:
        - Services > Unbound > Access List
    get:
      operationId: APIServicesUnboundAccessListRead
      description: 'Read configured DNS Resolver (Unbound) access lists.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsresolver-acls`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read DNS Resolver (Unbound) access lists
      tags:
        - Services > Unbound > Access List
    post:
      operationId: APIServicesUnboundAccessListCreate
      description: 'Create a new DNS Resolver (Unbound) access list.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsresolver-acls`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                aclaction:
                  description: Action this access list will enforce.
                  enum:
                    - allow
                    - deny
                    - refuse
                    - allow snoop
                    - deny nonlocal
                    - refuse nonlocal
                  type: string
                aclname:
                  default: ''
                  description: Name for this access list.
                  type: string
                apply:
                  default: false
                  description: Specify whether or not the DNS Resolver (Unbound) configuration
                    should be reloaded immediately after. `true` to apply immediately,
                    `false` to keep the changes pending. If `false`, the DNS Resolver
                    (Unbound) configuration must be reloaded manually by calling the
                    /api/v1/services/unbound/apply endpoint.
                  type: boolean
                description:
                  default: ''
                  description: Detailed description for this access list.
                  type: string
                row:
                  description: Set networks to match for this access list. This must
                    be an array of access list row objects and must contain at least
                    one object. For more information on access list object fields,
                    see documentation for /api/v1/services/unbound/access_list/row.
                  items:
                    type: object
                  type: array
              required:
                - aclaction
                - row
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create DNS Resolver (Unbound) access list
      tags:
        - Services > Unbound > Access List
    put:
      operationId: APIServicesUnboundAccessListUpdate
      description: 'Modify an existing DNS Resolver (Unbound) access list.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsresolver-acls`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                aclaction:
                  description: Action this access list will enforce.
                  enum:
                    - allow
                    - deny
                    - refuse
                    - allow snoop
                    - deny nonlocal
                    - refuse nonlocal
                  type: string
                aclname:
                  default: ''
                  description: Name for this access list.
                  type: string
                apply:
                  default: false
                  description: Specify whether or not the DNS Resolver (Unbound) configuration
                    should be reloaded immediately after. `true` to apply immediately,
                    `false` to keep the changes pending. If `false`, the DNS Resolver
                    (Unbound) configuration must be reloaded manually by calling the
                    /api/v1/services/unbound/apply endpoint.
                  type: boolean
                description:
                  default: ''
                  description: Detailed description for this access list.
                  type: string
                id:
                  description: ID of the access list to update. Refer to the 'Obtaining
                    Object IDs' section in the documentation intro for help obtaining
                    this ID.
                  type: integer
                row:
                  description: Set networks to match for this access list. This must
                    be an array of access list row objects and must contain at least
                    one object. For more information on access list object fields,
                    see documentation for /api/v1/services/unbound/access_list/row.
                    Existing values will be overwritten.
                  items:
                    type: object
                  type: array
              required:
                - id
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update DNS Resolver (Unbound) access list
      tags:
        - Services > Unbound > Access List
  /api/v1/services/unbound/access_list/row:
    post:
      operationId: APIServicesUnboundAccessListRowCreate
      description: 'Add a new row (network entry) to an existing DNS Resolver (Unbound)
        access list.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsresolver-acls`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                acl_network:
                  description: IPv4 or IPv6 address of the network to add to the access
                    list.
                  type: string
                apply:
                  default: false
                  description: Specify whether or not you would like this access list
                    row to be applied immediately, or simply written to the configuration
                    to be applied later. Typically, if you are creating multiple access
                    list rows at once it Is best to set this to false and apply the
                    changes afterwards using the /api/v1/services/unbound/apply endpoint.
                  type: boolean
                description:
                  default: ''
                  description: Description of the access list row (optional)
                  type: string
                id:
                  description: ID of the access list to apply this row to. Refer to
                    the 'Obtaining Object IDs' section in the documentation intro
                    for help obtaining this ID.
                  type: integer
                mask:
                  description: Subnet mask of the `acl_network`. This must be a value
                    between `0` and `32` for IPv4 addresses or `0` and `128` or IPv6
                    addresses.
                  type: integer
              required:
                - id
                - acl_network
                - mask
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Add DNS Resolver (Unbound) access list row
      tags:
        - Services > Unbound > Access List > Row
  /api/v1/services/unbound/apply:
    get:
      operationId: APIServicesUnboundApplyRead
      description: 'Check the DNS Resolver (Unbound) apply status.<br><br>

            _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsresolver`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Poll DNS Resolver (Unbound) apply status
      tags:
        - Services > Unbound > Apply
    post:
      operationId: APIServicesUnboundApplyCreate
      description: 'Apply pending DNS Resolver (Unbound) changes.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsresolver`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                async:
                  default: false
                  description: "Apply Unbound changes in the background. The Unbound reload status can be polled using
                  a GET request to /api/v1/services/unbound/apply."
                  type: boolean
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Apply pending DNS Resolver (Unbound) changes
      tags:
        - Services > Unbound > Apply
  /api/v1/services/unbound/host_override:
    delete:
      operationId: APIServicesUnboundHostOverrideDelete
      description: 'Delete host overrides from the DNS Resolver (Unbound).<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsresolver-edithost`]'
      parameters:
        - description: ID of the host override to delete. Refer to the 'Obtaining Object
            IDs' section in the documentation intro for help obtaining this ID.
          in: query
          name: id
          required: true
          schema:
            type: integer
        - description: Specify whether or not you would like this deletion to be applied
            immediately, or simply written to the configuration to be applied later.
            Typically, if you are modifying multiple host overrides at once it Is best
            to set this to false and apply the changes afterwards using the `/api/v1/services/unbound/apply`
            endpoint.
          in: query
          name: apply
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete DNS Resolver (Unbound) host override
      tags:
        - Services > Unbound > Host Override
    get:
      operationId: APIServicesUnboundHostOverrideRead
      description: 'Read host overrides from the DNS Resolver (Unbound).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsresolver`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read DNS Resolver (Unbound) host overrides
      tags:
        - Services > Unbound > Host Override
    post:
      operationId: APIServicesUnboundHostOverrideCreate
      description: 'Add a new host override to the DNS Resolver (Unbound).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsresolver-edithost`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                aliases:
                  default: [ ]
                  description: Host override aliases to associate with this host override.
                    For more information on alias object fields, see documentation
                    for /api/v1/services/unbound/host_override/alias.
                  items:
                    type: object
                  type: array
                apply:
                  default: true
                  description: Specify whether or not you would like this host override
                    to be applied immediately, or simply written to the configuration
                    to be applied later. Typically, if you are modifying multiple
                    host overrides at once it Is best to set this to false and apply
                    the changes afterwards using the `/api/v1/services/unbound/apply`
                    endpoint.
                  type: boolean
                descr:
                  description: Description of the host override.
                  type: string
                domain:
                  description: Domain portion of the host override.
                  type: string
                host:
                  description: Hostname portion of the host override.
                  type: string
                ip:
                  description: IPv4 or IPv6 address this entry will resolve. This
                    can be passed in as a string to resolve a single IP, or an array
                    of strings to resolve multiple IPs. At least 1 value is required.
                  items:
                    type: string
                  type: array
              required:
                - host
                - domain
                - ip
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create DNS Resolver (Unbound) host override
      tags:
        - Services > Unbound > Host Override
    put:
      operationId: APIServicesUnboundHostOverrideUpdate
      description: 'Modify host overrides from the DNS Resolver (Unbound).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsresolver-edithost`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                aliases:
                  default: [ ]
                  description: Host override aliases to associate with this host override.
                    For more information on alias object fields, see documentation
                    for /api/v1/services/unbound/host_override/alias. Existing entries
                    will be overwritten.
                  items:
                    type: object
                  type: array
                apply:
                  default: true
                  description: Specify whether or not you would like this host override
                    to be applied immediately, or simply written to the configuration
                    to be applied later. Typically, if you are modifying multiple
                    host overrides at once it Is best to set this to false and apply
                    the changes afterwards using the `/api/v1/services/unbound/apply`
                    endpoint.
                  type: boolean
                descr:
                  description: Description of the host override.
                  type: string
                domain:
                  description: Domain portion of the host override.
                  type: string
                host:
                  description: Hostname portion of the host override.
                  type: string
                id:
                  description: ID of the host override to update. Refer to the 'Obtaining
                    Object IDs' section in the documentation intro for help obtaining
                    this ID.
                  type: integer
                ip:
                  description: IPv4 or IPv6 address this entry will resolve. This
                    can be passed in as a string to resolve a single IP, or an array
                    of strings to resolve multiple IPs. At least 1 value is required.
                    Any existing values will be overwritten.
                  items:
                    type: string
                  type: array
              required:
                - id
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update DNS Resolver (Unbound) host override
      tags:
        - Services > Unbound > Host Override
  /api/v1/services/unbound/host_override/alias:
    post:
      operationId: APIServicesUnboundHostOverrideAliasCreate
      description: 'Add a new host override alias to the DNS Resolver (Unbound).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsresolver-edithost`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apply:
                  default: false
                  description: Specify whether or not you would like this host override
                    alias to be applied immediately, or simply written to the configuration
                    to be applied later. Typically, if you are creating multiple host
                    override aliases at once it Is best to set this to false and apply
                    the changes afterwards using the `/api/v1/services/unbound/apply`
                    endpoint.
                  type: boolean
                description:
                  description: Description of the alias.
                  type: string
                domain:
                  description: Domain of the alias.
                  type: string
                host:
                  description: Hostname of the alias.
                  type: string
                id:
                  description: ID of the host override to apply this alias to. Refer
                    to the 'Obtaining Object IDs' section in the documentation intro
                    for help obtaining this ID.
                  type: integer
              required:
                - id
                - host
                - domain
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create DNS Resolver (Unbound) host override alias
      tags:
        - Services > Unbound > Host Override > Alias
  /api/v1/services/unbound/host_override/flush:
    put:
      operationId: APIServicesUnboundHostOverrideFlushUpdate
      description: 'Replace all existing DNS Resolver (Unbound) host overrides with a specified set of host overrides.
        This allows you to create multiple host overrides at once. If a validation error is encountered when validating
        the host overrides, the specific entry that triggered the error will be included in the `data` field of the 
        response.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsresolver-edithost`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                host_overrides:
                  type: array
                  items:
                    type: object
                  description: Host override objects to replace existing host overrides with. Specifying an
                    empty array will remove all existing host overrides. Each object within this array can use any
                    properties available to the /api/v1/services/unbound/host_override endpoint.
                  example:
                    - host: example1
                      domain: example.com
                      ip: [ 127.0.0.1 ]
                      descr: "Example entry #1"
                      aliases:
                        - host: example1-alias
                          domain: example.com
                          description: "Example entry #1 alias"
                    - host: example2
                      domain: example.com
                      ip: [ 127.0.0.2 ]
                      descr: "Example entry #2"
                      aliases:
                        - host: example2-alias
                          domain: example.com
                          description: "Example entry #2 alias"
                apply:
                  default: false
                  description: Specify whether or not you would like these host overrides
                    to be applied immediately, or simply written to the configuration
                    to be applied later using the /api/v1/services/unbound/apply endpoint.
                  type: boolean
              required:
                - host_overrides
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Replace all DNS Resolver (Unbound) host overrides
      tags:
        - Services > Unbound > Host Override > Flush
    delete:
      operationId: APIServicesUnboundHostOverrideFlushDelete
      description: 'Deletes all existing DNS Resolver (Unbound) host overrides. This is useful for scripts
          that need to setup host overrides from scratch.<br><br>_Note: this endpoint
          will not reload the DNS Resolver (Unbound) service automatically, you must make another API
          call to the /api/v1/services/unbound/apply endpoint to do so._<br><br>

          _Requires at least one of the following privileges:_ [`page-all`, `page-services-dnsresolver-edithost`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete all DNS Resolver (Unbound) host overrides
      tags:
        - Services > Unbound > Host Override > Flush
  /api/v1/services/unbound/restart:
    post:
      operationId: APIServicesUnboundRestartCreate
      description: 'Restart the DNS Resolver (Unbound) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Restart DNS Resolver (Unbound) service
      tags:
        - Services > Unbound
  /api/v1/services/unbound/start:
    post:
      operationId: APIServicesUnboundStartCreate
      description: 'Start the DNS Resolver (Unbound) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Start DNS Resolver (Unbound) service
      tags:
        - Services > Unbound
  /api/v1/services/unbound/stop:
    post:
      operationId: APIServicesUnboundStopCreate
      description: 'Stop the DNS Resolver (Unbound) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-services`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Stop DNS Resolver (Unbound) service
      tags:
        - Services > Unbound
  /api/v1/services/wol/send:
    post:
      operationId: APIServicesWOLSendCreate
      description: 'Send a magic WOL packet to a host.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-services-wakeonlan`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                interface:
                  description: Interface to which the host to be woken is connected.
                  type: string
                mac:
                  description: MAC address of the host to be woken.
                  type: string
              required:
                - interface
                - mac
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Send a magic WOL packet to a host
      tags:
        - Services > WOL
  /api/v1/status/carp:
    get:
      operationId: APIStatusCARPRead
      description: 'Read the CARP (failover) status.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-carp`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read CARP status
      tags:
        - Status > CARP
    put:
      operationId: APIStatusCARPUpdate
      description: 'Update the CARP (failover) status.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-carp`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                enable:
                  description: Enable or disable CARP.
                  type: boolean
                maintenance_mode:
                  description: Enable or disable CARP maintenance mode.
                  type: boolean
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update CARP status
      tags:
        - Status > CARP
  /api/v1/status/gateway:
    get:
      operationId: APIStatusGatewayRead
      description: 'Read gateway status and metrics.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-gateway`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read gateway status
      tags:
        - Status > Gateway
  /api/v1/status/interface:
    get:
      operationId: APIStatusInterfaceRead
      description: 'Read interface status and metrics.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-interfaces`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read interface status
      tags:
        - Status > Interface
  /api/v1/status/ipsec:
    get:
      operationId: APIStatusIPsecRead
      description: 'Read IPsec status and metrics.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-ipsec`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read IPsec status
      tags:
        - Status > IPsec
  /api/v1/status/log/config_history:
    get:
      operationId: APIStatusLogConfigHistoryRead
      description: 'Read the configuration history log.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-diagnostics-configurationhistory`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read configuration history log
      tags:
        - Status > Log
  /api/v1/status/log/dhcp:
    get:
      operationId: APIStatusLogDHCPRead
      description: 'Read the dhcpd.log file.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-diagnostics-logs-dhcp`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read DHCP log
      tags:
        - Status > Log
  /api/v1/status/log/firewall:
    get:
      operationId: APIStatusLogFirewallRead
      description: 'Read the filter.log file.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-diagnostics-logs-firewall`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read firewall log
      tags:
        - Status > Log
  /api/v1/status/log/settings:
    put:
      operationId: APIStatusLogSettingsUpdate
      description: 'Updates the log settings to include log rotation and remote logging settings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-logs-settings`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                format:
                  description: The logging format for syslog to use.
                  type: string
                  enum:
                    - rfc3164
                    - rfc5424
                reverse:
                  description: View logs in reverse order.
                  type: boolean
                nentries:
                  description: View logs in reverse order.
                  type: integer
                  minimum: 5
                  maximum: 200000
                nologdefaultblock:
                  description: Disable logging packets blocked by default firewall rules.
                  type: boolean
                nologdefaultpass:
                  description: Disable logging packets passed by default firewall rules.
                  type: boolean
                nologbogons:
                  description: Disable logging packets blocked by 'Block Bogon Networks' rules.
                  type: boolean
                nologprivatenets:
                  description: Disable logging packets blocked by 'Block Private Networks' rules.
                  type: boolean
                nolognginx:
                  description: Disable logging errors from the web server process.
                  type: boolean
                rawfilter:
                  description: Show logs generated by the packet filter without any formatting.
                  type: boolean
                disablelocallogging:
                  description: Disable writing log files to the local disk. This will also disable Login Protection!
                  type: boolean
                logconfigchanges:
                  description: Generate log entries when making changes to the configuration.
                  type: boolean
                filterdescriptions:
                  description: Show the applied rule description below or in the firewall log rows. `0` to not display
                    descriptions, `1` to display as a column, or `2` to display as a separate row.
                  type: integer
                  enum:
                    - 0
                    - 1
                    - 2
                logfilesize:
                  description: Size (in bytes) at which logs will be rotated.
                  type: integer
                  minimum: 100000
                  maximum: 2147483648
                rotatecount:
                  description: Number of log files to keep before the oldest copy is removed on rotation.
                  type: integer
                  minimum: 0
                  maximum: 99
                logcompressiontype:
                  description: Type of compression to use when rotating log files.
                  type: string
                  enum:
                    - bzip2
                    - gzip
                    - xz
                    - zstd
                    - none
                enable:
                  description: Send logs to remote syslog servers.
                  type: boolean
                remoteserver:
                  description: The remote server to send logs to. This field is only available if `enable` is set to
                    `True`.
                  type: string
                remoteserver2:
                  description: An additional remote server to send logs to. This field is only available if
                    a `remoteserver` value is set.
                  type: string
                remoteserver3:
                  description: An additional remote server to send logs to. This field is only available if
                    a `remoteserver2` value is set.
                  type: string
                sourceip:
                  description: Interface to send remote logs from. You may use the real interface ID (e.g. igb0), the
                    descriptive interface name, the pfSense ID (e.g. wan, lan, optx) or `any` to use any interface.
                  type: string
                ipprotocol:
                  description: Selects either the IPv4 or IPv6 address of the interface specified in `sourceip`.
                  type: string
                  enum:
                    - ipv4
                    - ipv6
                logall:
                  description: Send all logs to the remote log server. This field is only available if `enable` is set
                    to `True`.
                  type: boolean
                filter:
                  description: Send firewall logs to the remote log server. This field is only available if `enable`
                    is set to `True`.
                  type: boolean
                dhcp:
                  description: Send DHCP logs to the remote log server. This field is only available if `enable` is set
                    to `True`.
                  type: boolean
                auth:
                  description: Send authentication logs to the remote log server. This field is only available if
                    `enable` is set to `True`.
                  type: boolean
                portalauth:
                  description: Send captive portal logs to the remote log server. This field is only available if
                    `enable` is set to `True`.
                  type: boolean
                vpn:
                  description: Send VPN logs to the remote log server. This field is only available if
                    `enable` is set to `True`.
                  type: boolean
                dpinger:
                  description: Send gateway logs to the remote log server. This field is only available if
                    `enable` is set to `True`.
                  type: boolean
                hostapd:
                  description: Send wireless logs to the remote log server. This field is only available if
                    `enable` is set to `True`.
                  type: boolean
                system:
                  description: Send system logs to the remote log server. This field is only available if
                    `enable` is set to `True`.
                  type: boolean
                resolver:
                  description: Send DNS logs to the remote log server. This field is only available if
                    `enable` is set to `True`.
                  type: boolean
                ppp:
                  description: Send PPP logs to the remote log server. This field is only available if
                    `enable` is set to `True`.
                  type: boolean
                routing:
                  description: Send routing logs to the remote log server. This field is only available if
                    `enable` is set to `True`.
                  type: boolean
                ntpd:
                  description: Send NTP logs to the remote log server. This field is only available if
                    `enable` is set to `True`.
                  type: boolean
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update log settings
      tags:
        - Status > Log
  /api/v1/status/log/system:
    get:
      operationId: APIStatusLogSystemRead
      description: 'Read the system.log file.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-diagnostics-logs-system`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read system log
      tags:
        - Status > Log
  /api/v1/status/openvpn:
    get:
      operationId: APIStatusOpenVPNRead
      description: 'Read the OpenVPN status.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-status-openvpn`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read OpenVPN status
      tags:
        - Status > OpenVPN
  /api/v1/status/system:
    get:
      operationId: APIStatusSystemRead
      description: 'Read system status and metrics. All usage values are represented
        as a decimal percentage. Temperature readings require thermal sensor and/or
        driver configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-dashboard-widgets`,
        `page-dashboard-all`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read system status
      tags:
        - Status > System
  /api/v1/system/api:
    get:
      operationId: APISystemAPIRead
      description: 'Read the current API configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-api`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read API configuration
      tags:
        - System > API
    put:
      operationId: APISystemAPIUpdate
      description: 'Update the API configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-api`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                access_list:
                  description: Set the API access list. This must be an array of IPv4
                    or IPv6 subnets in CIDR notation. If left blank, all subnets will
                    be allowed.
                  items:
                    type: string
                  type: array
                allow_options:
                  description: Enable or disable the Options request method from API
                    responses. If set to `true`, the API will answer Options requests.
                    If set to `false`, the API will return a 405 Method Not Allowed
                    response.
                  type: boolean
                authmode:
                  description: Update the API authentication mode.
                  enum:
                    - local
                    - jwt
                    - token
                  type: string
                allowed_interfaces:
                  description: Interfaces that are allowed to answer API requests.
                    Each item in the array must be a valid real interface ID (e.g.
                    `em0`), pfSense interface ID, (e.g. `opt1`), or descriptive interface
                    name (e.g. `"WAN"`). Additionally you may add `localhost` to allow
                    local API requests, or add `any` to allow any interface to answer
                    API requests. It is best practice to only allow inside interfaces
                    to answer API requests, or use firewall rules to filter requests
                    made to outside interfaces.
                  items:
                    type: string
                  type: array
                custom_headers:
                  description: Custom response headers for the API to return in API
                    responses. To revert custom headers to the default state, simply
                    pass in an empty array. In most cases, custom headers are not
                    necessary. An example use case for custom headers is setting CORS
                    policy headers  required by some frontend web applications.
                  items:
                    type: object
                  type: array
                enable:
                  description: Enable or disable the API. If set to `false`, the API
                    will be disabled and you will no longer be able to  API requests
                    until the API enabled via the webConfigurator.
                  type: boolean
                hasync:
                  description: Enable or disable HA sync for API configurations.
                  type: boolean
                hasync_hosts:
                  description: Hosts to sync API configurations to. This must be an
                    array of IP addresses or FQDN strings. At least one host must
                    be specified when `hasync` is set to `true`.
                  items:
                    type: string
                  type: array
                hasync_password:
                  description: Password of the username to authenticate as for HA
                    synchronization. This parameter is required when  `hasync` is
                    set to `true`.
                  format: password
                  type: string
                hasync_username:
                  description: Username to authenticate as for HA synchronization.
                    This user must be present on ALL hosts specified in the `hasync_hosts`
                    value and must hold the `page-system-api` privilege. This parameter
                    is required when `hasync` is set to `true`.
                  type: string
                jwt_exp:
                  description: JWT expiration interval (in seconds). This parameter
                    is only available when `authmode` is set  to `jwt`.
                  maximum: 86400
                  minimum: 300
                  type: integer
                keybytes:
                  description: Key byte strength to use when generating API tokens.
                    This parameter is only available when `authmode` is  set to `token`.
                  enum:
                    - 16
                    - 32
                    - 64
                  type: integer
                keyhash:
                  description: Hashing algorithm to use when generating API tokens.
                    This parameter is only available when `authmode` is  set to `token`.
                  enum:
                    - sha256
                    - sha384
                    - sha512
                    - md5
                  type: string
                persist:
                  description: Enable or disable persistent API configuration. If
                    set to `true`, the API will store a copy of the API configuration
                    in the case a system update or package update is needed and/or
                    the API configuration must be restored. If set to `false`, all
                    API configuration will be lost whenever the system updates, the
                    package is updated, or the package is deleted. It is recommended
                    to keep this feature enabled.
                  type: boolean
                readonly:
                  description: Enable or disable read-only API mode. If `true`, the
                    API will only respond to read requests and modifications to configuration
                    will not be allowed.
                  type: boolean
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update API configuration
      tags:
        - System > API
  /api/v1/system/api/error:
    get:
      operationId: APISystemAPIErrorRead
      description: Read the error code library. This function does not require authentication
        and is intended to be used by third-party scripts/software to translate error
        codes to their full error message.
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read API error library
      tags:
        - System > API
  /api/v1/system/api/version:
    get:
      operationId: APISystemAPIVersionRead
      description: 'Read the current API version and locate available version updates.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-api`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read API version
      tags:
        - System > API
  /api/v1/system/arp:
    delete:
      operationId: APISystemARPDelete
      description: 'Delete an IP from the ARP table.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-diagnostics-arptable`]'
      parameters:
        - description: IPv4 address to delete from the ARP table.
          in: query
          name: ip
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete ARP table entry
      tags:
        - System > ARP
    get:
      operationId: APISystemARPRead
      description: 'Read the current ARP table.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-diagnostics-arptable`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read ARP table
      tags:
        - System > ARP
  /api/v1/system/ca:
    delete:
      operationId: APISystemCADelete
      description: 'Delete an existing CA certificate.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-camanager`]'
      parameters:
        - description: The `refid` of the existing CA to delete.
          in: query
          name: refid
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete CA certificate
      tags:
        - System > CA
    get:
      operationId: APISystemCARead
      description: 'Read installed CA certificates.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-camanager`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read CA certificates
      tags:
        - System > CA
    post:
      operationId: APISystemCACreate
      description: 'Generate or import a new CA certificate.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-camanager`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                caref:
                  description: Specify the unique reference ID of the root certificate
                    signing authority for the intermediate CA certificate. This parameter
                    is required when `method` is set to `intermediate`.
                  type: string
                crt:
                  description: Base64 encoded PEM CA certificate to import. This parameter
                    is required when `method` is set to `existing`.
                  type: string
                descr:
                  description: Descriptive name for the CA.
                  type: string
                digest_alg:
                  description: 'Digest algorithm to use. This parameter is required
                    when `method` is set to `internal` or `intermediate`. _Note: options
                    are subject to change, when in doubt, check the pfSense webConfigurator
                    options for this field._'
                  enum:
                    - sha1
                    - sha224
                    - sha256
                    - sha384
                    - sha512
                  type: string
                dn_city:
                  description: City or locale for this CA. This parameter is only
                    available when `method` is set to `internal` or `intermediate`.
                  type: string
                dn_commonname:
                  description: Common name of this CA. In mose cases, this will be
                    a hostname. This parameter is required when `method` is set to
                    `internal` or `intermediate`.
                  type: string
                dn_country:
                  description: Country code for this CA. This must be a known 2-digit
                    country code. This parameter is only available when `method` is
                    set to `internal` or `intermediate`.
                  type: string
                dn_organization:
                  description: The managing organization for this CA. This parameter
                    is only available when `method` is set to `internal` or `intermediate`.
                  type: string
                dn_organizationalunit:
                  description: The managing organizational unit or team for this CA.
                    This parameter is only available when `method` is set to `internal`
                    or `intermediate`.
                  type: string
                dn_state:
                  description: State or province for this CA. This parameter is only
                    available when `method` is set to `internal` or `intermediate`.
                  type: string
                ecname:
                  description: 'Elliptic curve name to use when generating the private
                    key. It is recommended to view options and compatibility within
                    the pfSense webConfigurator or manually through OpenSSL as certain
                    curves are not compatible in some circumstances. This parameter
                    is required when `method` is set to `internal` or `intermediate`
                    AND `keytype` is set to `ECDSA`. _Note: options are subject to
                    change, when in doubt, check the pfSense webConfigurator options
                    for this field._'
                  type: string
                keylen:
                  description: Private key length to generate. This parameter is required
                    when `method` is set to `internal` or `intermediate` AND `keytype`
                    is set to `RSA`.
                  enum:
                    - 1024
                    - 2048
                    - 3072
                    - 4096
                    - 6144
                    - 7680
                    - 8192
                    - 15360
                    - 16384
                  type: integer
                keytype:
                  description: Specify the private key type to generate. This parameter
                    is required when `method` is set to `internal` or `intermediate`.
                  enum:
                    - RSA
                    - ECDSA
                  type: string
                lifetime:
                  default: 3650
                  description: 'Number of days you would like this CA to be valid
                    for. This must be below OpenSSL''s maximum lifetime value (around
                    `12000` days). This parameter is required when `method` is set
                    to `internal` or `intermediate`. _Note: maximum value is subject
                    to change, when in doubt, check the pfSense webConfigurator options
                    for this field._'
                  type: integer
                method:
                  description: 'Method used to add the CA. _Note: previous releases
                    referred to the `existing` method as `import`. You may use `existing`
                    or `import` interchangeably._'
                  enum:
                    - import
                    - existing
                    - internal
                    - intermediate
                  type: string
                prv:
                  description: Corresponding Base64 encoded CA certificate key. This
                    parameter is only available when `method` is set to `existing`.
                  type: string
                randomserial:
                  default: false
                  description: Use randomized serial numbers for certificates signed
                    by this CA.
                  type: boolean
                serial:
                  default: 1
                  description: Set the serial number to be assigned to the next certificate
                    signed by this CA. This field is only available when `method`
                    is set to `existing`.
                  minimum: 1
                  type: integer
                trust:
                  default: false
                  description: Trust this CA across the entire system.
                  type: boolean
              required:
                - method
                - descr
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create or import CA certificate
      tags:
        - System > CA
  /api/v1/system/certificate:
    delete:
      operationId: APISystemCertificateDelete
      description: 'Delete an existing SSL/TLS certificate.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-certmanager`]'
      parameters:
        - description: The `refid` of the certificate to delete.
          in: query
          name: refid
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete certificate
      tags:
        - System > Certificate
    get:
      operationId: APISystemCertificateRead
      description: 'Read installed SSL/TLS certificates.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-certmanager`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read certificates
      tags:
        - System > Certificate
    post:
      operationId: APISystemCertificateCreate
      description: 'Generate or import a new SSL/TLS certificate.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-certmanager`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                active:
                  default: false
                  description: Set this certificate as the active certificate used
                    by the webConfigurator. This parameter is only available when
                    `type` is set to `server` or `method` is set to `existing`.
                  type: boolean
                altnames:
                  description: Subject alternative names to list in this certificate.
                    This must be an array of objects with each object containing a
                    alt name type as the key and the alt name value as the value.
                    Supported alt name types are `dns` for FQDNs, `ip` for IP addresses,
                    `uri` for URLs, and `email` for email addresses. This parameter
                    is only available when `method` is set to `internal`.
                  items:
                    type: object
                  type: array
                caref:
                  description: Unique reference ID of the existing certificate signing
                    authority to use for the certificate. This parameter is required
                    when `method` is set to `internal`.
                  type: string
                crt:
                  description: 'Base64 encoded PEM certificate to import. This parameter
                    is required when `method` is set to `existing`. _Note: previous
                    releases referred to the `crt` parameter as `cert`. Both `crt`
                    and `cert` can be used interchangeably._'
                  type: string
                descr:
                  description: Descriptive name for the certificate.
                  type: string
                digest_alg:
                  description: 'Digest algorithm to use. This parameter is required
                    when `method` is set to `internal`. _Note: options are subject
                    to change, when in doubt, check the pfSense webConfigurator options
                    for this field._'
                  enum:
                    - sha1
                    - sha224
                    - sha256
                    - sha384
                    - sha512
                  type: string
                dn_city:
                  description: City or locale for this certificate. This parameter
                    is only available when `method` is set to `internal`.
                  type: string
                dn_commonname:
                  description: Common name of this certificate. In mose cases, this
                    will be a hostname. This parameter is required when `method` is
                    set to `internal`.
                  type: string
                dn_country:
                  description: Country code for this certificate. This must be a known
                    2-digit country code. This parameter is only available when `method`
                    is set to `internal`.
                  type: string
                dn_organization:
                  description: The managing organization for this certificate. This
                    parameter is only available when `method` is set to `internal`.
                  type: string
                dn_organizationalunit:
                  description: The managing organizational unit or team for this certificate.
                    This parameter is only available when  `method` is set to `internal`.
                  type: string
                dn_state:
                  description: State or province for this certificate. This parameter
                    is only available when `method` is set to `internal`.
                  type: string
                ecname:
                  description: 'Elliptic curve name to use when generating the private
                    key. It is recommended to view options and compatibility within
                    the pfSense webConfigurator or manually through OpenSSL as certain
                    curves are not compatible in some circumstances. This parameter
                    is required when `method` is set to `internal` AND `keytype` is
                    set to `ECDSA`. _Note: options are subject to change, when in
                    doubt, check the pfSense webConfigurator options for this parameter._'
                  type: string
                keylen:
                  description: Specify the private key length to generate. This parameter
                    is required when `method` is set to `internal` AND `keytype` is
                    set to `RSA`.
                  enum:
                    - 1024
                    - 2048
                    - 3072
                    - 4096
                    - 6144
                    - 7680
                    - 8192
                    - 15360
                    - 16384
                  type: integer
                keytype:
                  description: Private key type to generate. Options are `RSA` or
                    `ECDSA`. This parameter is required when `method` is set to `internal`.
                  enum:
                    - RSA
                    - ECDSA
                  type: string
                lifetime:
                  default: 3650
                  description: 'Number of days you would like this certificate to
                    be valid for. This must be below OpenSSL''s maximum lifetime value
                    (around `12000` days). This parameter is required when `method`
                    is set  to `internal`. _Note: maximum value is subject to change,
                    when in doubt,  check the pfSense webConfigurator options for
                    this parameter._'
                  type: integer
                method:
                  description: 'Method used to add the certificate. _Note: previous
                    releases referred to the `existing` method as `import`.  You may
                    use `existing` or `import` interchangeably._'
                  enum:
                    - import
                    - existing
                    - internal
                  type: string
                prv:
                  description: 'Corresponding Base64 encoded certificate key. This
                    parameter is required when `method` is set to `existing`. _Note:
                    previous releases referred to the `prv` parameter as `key`. Both
                    `prv` and `key` can be used interchangeably._'
                  type: string
                type:
                  description: Type of certificate to generate. This parameter is
                    required when `method` is set to `internal`.
                  enum:
                    - server
                    - user
                  type: string
              required:
                - method
                - descr
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create or import certificate
      tags:
        - System > Certificate
    put:
      operationId: APISystemCertificateUpdate
      description: 'Update an imported SSL/TLS certificate.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-certmanager`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                refid:
                  description: 'ID of the certificate to be updated.'
                  type: string
                crt:
                  description: 'Base64 encoded PEM certificate to import. _Note: previous
                    releases referred to the `crt` parameter as `cert`. Both `crt`
                    and `cert` can be used interchangeably._'
                  type: string
                prv:
                  description: 'Corresponding Base64 encoded certificate key. _Note:
                    previous releases referred to the `prv` parameter as `key`. Both
                    `prv` and `key` can be used interchangeably._'
                  type: string
                descr:
                  description: Descriptive name for the certificate.
                  type: string
                active:
                  default: false
                  description: Set this certificate as the active certificate used
                    by the webConfigurator.
                  type: boolean
              required:
                - refid
                - crt
                - prv
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update certificate
      tags:
        - System > Certificate
  /api/v1/system/config:
    get:
      operationId: APISystemConfigRead
      description: 'Read the entire pfSense configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-diagnostics-backup-restore`,
        `page-diagnostics-command`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read pfSense configuration
      tags:
        - System > Config
    put:
      operationId: APISystemConfigUpdate
      description: 'Updates the entire pfSense configuration. This endpoint simply
        replaces the entire configuration with the values submitted in your request.
        This can be used to interface with configuration areas that may not be available
        to the API. Use extreme caution when utilizing this endpoint as it offers
        no input validation and has high potential for configuration loss. This endpoint
        is purely experimental.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-diagnostics-backup-restore`]'
      requestBody:
        content: { }
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update pfSense configuration
      tags:
        - System > Config
  /api/v1/system/console:
    put:
      operationId: APISystemConsoleUpdate
      description: 'Update console settings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-advanced-admin`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                disableconsolemenu:
                  description: Enable or disable console password protection.
                  type: boolean
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update console settings
      tags:
        - System > Console
  /api/v1/system/crl:
    delete:
      operationId: APISystemCRLDelete
      description: 'Delete an existing CRL.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-crlmanager`]'
      parameters:
        - description: The `refid` of the existing certificate revocation list to delete.
          in: query
          name: refid
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete CRL
      tags:
        - System > CRL
    get:
      operationId: APISystemCRLRead
      description: 'Read installed CRLs.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-crlmanager`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read CRLs
      tags:
        - System > CRL
    post:
      operationId: APISystemCRLCreate
      description: 'Add a new CRL.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-crlmanager`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                caref:
                  description: Specify the unique reference ID of the certificate
                    signing authority for the certificate revocation list.
                  type: string
                crl_data:
                  description: 'Base64 encoded PEM certificate revocation list to
                    import. This parameter is required when `method` is set to `existing`.
                    _Note: Import Certificate Revocation List in X.509 CRL format.
                    `-----BEGIN X509 CRL-----[A bunch of random-looking base64-encoded
                    data]-----END X509 CRL-----`._'
                  type: string
                descr:
                  description: Descriptive name for the certificate revocation list.
                  type: string
                lifetime:
                  default: 9999
                  description: 'Number of days you would like this certificate revocation
                    list to be valid for. This must be below OpenSSL''s maximum lifetime
                    value (around `12000` days). This parameter is  only available
                    when `method` is set to `internal`. _Note: maximum  value is subject
                    to change, when in doubt, check the pfSense webConfigurator  options
                    for this field._'
                  type: integer
                method:
                  description: 'Method used to add the certificate revocation list.
                    _Note: `internal` method will create new certificate revocation
                    list for CA provided in `caref`_.'
                  enum:
                    - existing
                    - internal
                  type: string
                serial:
                  default: 0
                  description: Serial number to be assigned to the next certificate
                    revocation list. This parameter is only available when `method`
                    is set to `internal`.
                  type: integer
              required:
                - caref
                - method
                - descr
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create CRL
      tags:
        - System > CRL
  /api/v1/system/dns:
    get:
      operationId: APISystemDNSRead
      description: 'Read current system DNS settings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read system DNS settings
      tags:
        - System > DNS
    put:
      operationId: APISystemDNSUpdate
      description: 'Modify the existing system DNS settings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dnsallowoverride:
                  description: Allow or deny DNS server list to be overridden by DHCP/PPP
                    on WAN or remote OpenVPN server.
                  type: boolean
                dnslocalhost:
                  description: Enable or disable system DNS resolution via local DNS
                    services.
                  type: boolean
                dnsserver:
                  description: DNS servers to assign the system. Existing values will
                    be overwritten.
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update system DNS settings
      tags:
        - System > DNS
  /api/v1/system/dns/server:
    delete:
      operationId: APISystemDNSServerDelete
      description: 'Remove existing system DNS servers.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system`]'
      parameters:
        - description: IP of the system DNS servers to remove.
          in: query
          name: dnsserver
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Remove system DNS servers
      tags:
        - System > DNS > Server
    post:
      operationId: APISystemDNSServerCreate
      description: 'Add new DNS servers to the system DNS servers.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dnsserver:
                  description: IP(s) of the DNS servers to add.
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Add system DNS servers
      tags:
        - System > DNS > Server
  /api/v1/system/halt:
    post:
      operationId: APISystemHaltCreate
      description: 'Shutdown the pfSense system.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-diagnostics-haltsystem`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Initiate system shutdown
      tags:
        - System > Halt
  /api/v1/system/hostname:
    get:
      operationId: APISystemHostnameRead
      description: 'Read the system''s hostname.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read system hostname
      tags:
        - System > Hostname
    put:
      operationId: APISystemHostnameUpdate
      description: 'Modify the system hostname.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                domain:
                  description: Domain portion of the system hostname. Do not specify
                    to retain existing value.
                  type: string
                hostname:
                  description: Hostname portion of the system hostname. Do not specify
                    to retain existing value.
                  type: string
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update system hostname
      tags:
        - System > Hostname
  /api/v1/system/notifications/email:
    get:
      operationId: APISystemNotificationsEmailRead
      description: 'Read the current email notification settings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-advanced-notifications`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read email notification settings
      tags:
        - System > Notifications > Email
    put:
      operationId: APISystemNotificationsEmailUpdate
      description: 'Update the email notification settings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-advanced-notifications`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                authentication_mechanism:
                  description: Authentication type to use for connections to the remote
                    SMTP server.
                  enum:
                    - PLAIN
                    - LOGIN
                  type: string
                disabled:
                  description: Enable or disable email notifications.
                  type: boolean
                fromaddress:
                  description: Email address email notifications will be sent from.
                  format: email
                  type: string
                ipaddress:
                  description: IP address or hostname of the remote SMTP server.
                  type: string
                notifyemailaddress:
                  description: Email address email notifications will be sent to.
                  format: email
                  type: string
                password:
                  description: Password to use during authentication. This parameter
                    is only available when `authentication_mechanism` is set to `LOGIN`.
                  format: password
                  type: string
                port:
                  description: Port of the remote SMTP server.
                  maximum: 65535
                  minimum: 1
                  type: integer
                ssl:
                  description: Enable or disable SMTP over SSL/TLS.
                  type: boolean
                sslvalidate:
                  description: Enable or disable certificate verification for SSL/TLS
                    connections.
                  type: boolean
                timeout:
                  default: 20
                  description: Timeout (in seconds) for connections to the remote
                    SMTP server.
                  minimum: 1
                  type: integer
                username:
                  description: Username to use during authentication. This parameter
                    is only available when `authentication_mechanism` is set to `LOGIN`.
                  type: string
              required:
                - ipaddress
                - port
                - fromaddress
                - notifyemailaddress
                - authentication_mechanism
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update email notification settings
      tags:
        - System > Notifications > Email
  /api/v1/system/package:
    delete:
      operationId: APISystemPackageDelete
      description: 'Remove an existing pfSense package.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-packagemanager-installed`]'
      parameters:
        - description: Name of pfSense package to delete. This must be the pfSense package
            internal name including the  `pfSense-pkg-` prefix. Non-pfSense packages
            cannot be removed.
          in: query
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Remove system package
      tags:
        - System > Package
    get:
      operationId: APISystemPackageRead
      description: 'Read all pfSense packages that are currently installed.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-packagemanager-installed`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read system packages
      tags:
        - System > Package
    post:
      operationId: APISystemPackageCreate
      description: 'Install a pfSense package.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-packagemanager-installpackage`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of pfSense package to install. This must be the
                    pfSense package internal name including the  `pfSense-pkg-` prefix.
                  type: string
              required:
                - name
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Install system package
      tags:
        - System > Package
  /api/v1/system/reboot:
    post:
      operationId: APISystemRebootCreate
      description: 'Reboot the pfSense system.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-diagnostics-rebootsystem`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Initiate system reboot
      tags:
        - System > Reboot
  /api/v1/system/table:
    get:
      operationId: APISystemTableRead
      description: 'Read existing table entries.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-diagnostics-tables`]'
      parameters:
        - name: name
          in: query
          schema:
            type: string
          description: >-
            Name of the table to read. This must be an existing table. If no table name is specified, all tables will
            be read. Depending on the size of the tables on the system, reading all tables may take a while.
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read tables
      tags:
        - System > Table
  /api/v1/system/tunable:
    delete:
      operationId: APISystemTunableDelete
      description: 'Delete an existing system tunable.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-advanced-sysctl`]'
      parameters:
        - description: Name of the existing tunable to delete.
          in: query
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete system tunable
      tags:
        - System > Tunable
    get:
      operationId: APISystemTunableRead
      description: 'Read current system tunable configurations.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-advanced-sysctl`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read system tunables
      tags:
        - System > Tunable
    post:
      operationId: APISystemTunableCreate
      description: 'Create a new system tunable.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-advanced-sysctl`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                descr:
                  description: Description for this tunable.
                  type: string
                tunable:
                  description: Name of this tunable. This should be a value recognized
                    by sysctl.
                  type: string
                value:
                  description: Value to assign this tunable.
                  type: string
              required:
                - tunable
                - value
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create system tunable
      tags:
        - System > Tunable
    put:
      operationId: APISystemTunableUpdate
      description: 'Update an existing system tunable.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-advanced-sysctl`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                descr:
                  description: Description for this tunable.
                  type: string
                id:
                  description: Name of the existing tunable to update.
                  type: string
                tunable:
                  description: New name to assign this tunable. This should be a value
                    recognized by sysctl.
                  type: string
                value:
                  description: Value to assign this tunable.
                  type: string
              required:
                - id
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update system tunable
      tags:
        - System > Tunable
  /api/v1/system/version:
    get:
      operationId: APISystemVersionRead
      description: 'Read the pfSense version data. This includes base version, patch
        version, buildtime, and last commit.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-dashboard-widgets`,
        `page-diagnostics-command`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read system version
      tags:
        - System > Version
  /api/v1/user:
    delete:
      operationId: APIUserDelete
      description: 'Delete an existing pfSense user from the local database.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-usermanager`]'
      parameters:
        - description: Username of user to delete.
          in: query
          name: username
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete user
      tags:
        - User
    get:
      operationId: APIUserRead
      description: 'Read users from the local user database.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-usermanager`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read users
      tags:
        - User
    post:
      operationId: APIUserCreate
      description: 'Add a new user to the local database.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-usermanager`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                authorizedkeys:
                  default: ''
                  description: Base64 encoded authorized SSH keys to assign new user.
                  type: string
                cert:
                  default: [ ]
                  description: Assign certificates to this user. This must be an array
                    of corresponding user certificate's `refid` values.
                  items:
                    type: string
                  type: array
                descr:
                  default: ''
                  description: Full name of the new user.
                  type: string
                disabled:
                  default: false
                  description: Disable user account upon creation.
                  type: boolean
                expires:
                  default: ''
                  description: Expiration date for user account in MM/DD/YYYY format.
                  type: string
                ipsecpsk:
                  default: ''
                  description: IPsec pre-shared key to assign new user.
                  type: string
                password:
                  description: Password to assign new user.
                  format: password
                  type: string
                priv:
                  default: [ ]
                  description: Assign privileges to this user. This must be an array
                    of corresponding pfSense privileges.
                  items:
                    type: string
                  type: array
                username:
                  description: Username to assign to the new user.
                  type: string
              required:
                - username
                - password
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create user
      tags:
        - User
    put:
      operationId: APIUserUpdate
      description: 'Update an existing user.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-usermanager`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                authorizedkeys:
                  description: New Base64 encoded authorized SSH keys to assign new
                    user.
                  type: string
                cert:
                  description: Assign certificates to this user. This must be an array
                    of corresponding user certificate's `refid` values. Existing values
                    will be overwritten.
                  items:
                    type: string
                  type: array
                descr:
                  description: New full name of the user.
                  type: string
                disabled:
                  description: Disable user account.
                  type: boolean
                expires:
                  description: New expiration date for user account in MM/DD/YYYY
                    format.
                  type: string
                ipsecpsk:
                  description: New IPsec pre-shared key to assign new user.
                  type: string
                password:
                  description: New password to assign user.
                  format: password
                  type: string
                priv:
                  description: Assign privileges to this user. This must be an array
                    of corresponding pfSense privileges. Existing values will be overwritten.
                  items:
                    type: string
                  type: array
                username:
                  description: Username of the user to update. This field cannot be
                    updated.
                  type: string
              required:
                - username
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update user
      tags:
        - User
  /api/v1/user/auth_server:
    delete:
      operationId: APIUserAuthServerDelete
      description: 'Delete an existing authentication server. This can be either a
        RADIUS or LDAP authentication server.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-authservers`]'
      parameters:
        - description: Name of authentication server to delete.
          in: query
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete authentication server
      tags:
        - User > Authentication Server
    get:
      operationId: APIUserAuthServerRead
      description: 'Read configured LDAP and RADIUS authentication servers.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-authservers`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read authentication servers
      tags:
        - User > Authentication Server
  /api/v1/user/auth_server/ldap:
    delete:
      operationId: APIUserAuthServerLDAPDelete
      description: 'Delete an existing LDAP authentication server.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-authservers`]'
      parameters:
        - description: Name of the LDAP authentication server to delete.
          in: query
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete LDAP authentication server
      tags:
        - User > Authentication Server
    get:
      operationId: APIUserAuthServerLDAPRead
      description: 'Read configured LDAP authentication servers.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-authservers`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read LDAP authentication servers
      tags:
        - User > Authentication Server
    post:
      operationId: APIUserAuthServerLDAPCreate
      description: 'Add a new remote LDAP authentication server.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-authservers`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                active:
                  default: false
                  description: Set this authentication server as the system default.
                  type: boolean
                host:
                  description: Hostname or IP of the LDAP server to query.
                  type: string
                ldap_attr_group:
                  description: LDAP group naming attribute.
                  type: string
                ldap_attr_groupobj:
                  description: LDAP group object class. Specifying any value enables
                    RFC2307 mode.
                  type: string
                ldap_attr_member:
                  description: LDAP group member attribute.
                  type: string
                ldap_attr_user:
                  description: LDAP user naming attribute.
                  type: string
                ldap_authcn:
                  default: ''
                  description: LDAP authentication container.
                  type: string
                ldap_basedn:
                  default: ''
                  description: Base distinguished name of LDAP tree.
                  type: string
                ldap_binddn:
                  default: ''
                  description: Bind DN to use for LDAP authentication.
                  type: string
                ldap_bindpw:
                  description: Bind password to use for LDAP authentication.
                  format: password
                  type: string
                ldap_extended_query:
                  description: Extended LDAP queries. Specifying any value enables
                    LDAP extended queries.
                  type: string
                ldap_nostrip_at:
                  default: false
                  description: Disable LDAP username alterations.
                  type: boolean
                ldap_port:
                  description: Remote LDAP server's LDAP port.
                  maximum: 65535
                  minimum: 1
                  type: integer
                ldap_protver:
                  default: 3
                  description: LDAP version used by the remote authentication server.
                  enum:
                    - 2
                    - 3
                  type: integer
                ldap_scope:
                  description: Scope of LDAP search.
                  enum:
                    - one
                    - subtree
                  type: string
                ldap_timeout:
                  default: 25
                  description: Connection timeout for LDAP requests.
                  type: integer
                ldap_urltype:
                  description: Transport method to use for LDAP queries.
                  enum:
                    - standard
                    - starttls
                    - encrypted
                  type: string
                ldap_utf8:
                  default: false
                  description: Enable UTF-8 encoded LDAP parameters.
                  type: boolean
                name:
                  description: Unique name for the authentication server.
                  type: string
              required:
                - name
                - host
                - ldap_port
                - ldap_urltype
                - ldap_scope
                - ldap_bindpw
                - ldap_attr_user
                - ldap_attr_group
                - ldap_attr_member
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create LDAP authentication server
      tags:
        - User > Authentication Server
  /api/v1/user/auth_server/radius:
    delete:
      operationId: APIUserAuthServerRADIUSDelete
      description: 'Delete an existing RADIUS authentication server.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-authservers`]'
      parameters:
        - description: Name of the RADIUS authentication server to delete.
          in: query
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete RADIUS authentication server
      tags:
        - User > Authentication Server
    get:
      operationId: APIUserAuthServerRADIUSRead
      description: 'Read configured RADIUS authentication servers.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-authservers`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read RADIUS authentication servers
      tags:
        - User > Authentication Server
    post:
      operationId: APIUserAuthServerRADIUSCreate
      description: 'Create a new RADIUS authentication server.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-authservers`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                active:
                  default: false
                  description: Set this authentication server as the system default.
                  type: boolean
                host:
                  description: IP or hostname of the remote RADIUS authentication
                    server.
                  type: string
                name:
                  description: Descriptive name for the RADIUS authentication server.  This
                    name must be unique from all other authentication servers on the
                    system.
                  type: string
                radius_acct_port:
                  description: Remote RADIUS authentication server's accounting port.
                    If no value is specified, the accounting service on the remote
                    RADIUS server will not be used. This field is optional if a `radius_auth_port`
                    value is specified.
                  maximum: 65535
                  minimum: 1
                  type: integer
                radius_auth_port:
                  description: Remote RADIUS authentication server's authentication
                    port. If no value is specified, the authentication service on
                    the remote RADIUS server will not be used. This field is optional
                    if a `radius_acct_port` value is specified.
                  maximum: 65535
                  minimum: 1
                  type: integer
                radius_nasip_attribute:
                  default: wan
                  description: Interface to use for the "NAS-IP-Address" attribute
                    during RADIUS requests.
                  type: string
                radius_protocol:
                  default: MSCHAPv2
                  description: RADIUS authentication protocol to use when communicating
                    with the remote RADIUS server.
                  enum:
                    - PAP
                    - CHAP_MD5
                    - MSCHAPv1
                    - MSCHAPv2
                  type: string
                radius_secret:
                  description: Shared secret of the remote RADIUS authentication server.
                  format: password
                  type: string
                radius_timeout:
                  default: 5
                  description: Amount of time (in seconds) to wait for the remote
                    RADIUS server to respond before timing out.
                  minimum: 1
                  type: integer
              required:
                - name
                - host
                - radius_secret
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create RADIUS authentication server
      tags:
        - User > Authentication Server
  /api/v1/user/group:
    get:
      operationId: APIUserGroupRead
      description: 'Read existing user groups.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-groupmanager`]'
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Read user groups
      tags:
        - User > Group
    post:
      operationId: APIUserGroupCreate
      description: 'Create a new group.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-groupmanager`]'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  description: "Name of the group."
                  type: string
                  minLength: 1
                  maxLength: 64
                scope:
                  description: "Scope of the group."
                  type: string
                  enum: [ "local", "remote" ]
                  default: local
                description:
                  description: "Description of the group"
                  type: string
                  default: ""
                member:
                  description: UIDs of users to assign to this group.
                  type: array
                  default: [ ]
                  items:
                    type: integer
                priv:
                  description: Privileges to assign to this group.
                  type: array
                  default: [ ]
                  items:
                    type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Create user group
      tags:
        - User > Group
    put:
      operationId: APIUserGroupUpdate
      description: 'Update an existing group.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-groupmanager`]'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  description: "Name of the group to update."
                  type: string
                name:
                  description: "New name of the group."
                  type: string
                  minLength: 1
                  maxLength: 64
                scope:
                  description: "Scope of the group."
                  type: string
                  enum: [ "local", "remote" ]
                description:
                  description: "Description of the group"
                  type: string
                member:
                  description: UIDs of users to assign to this group.
                  type: array
                  items:
                    type: integer
                priv:
                  description: Privileges to assign to this group.
                  type: array
                  items:
                    type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Update user group
      tags:
        - User > Group
    delete:
      operationId: APIUserGroupDelete
      description: 'Delete an existing user group.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`, `page-system-groupmanager`]'
      parameters:
        - name: id
          description: "Name of the group to delete."
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Delete user group
      tags:
        - User > Group
  /api/v1/user/group/member:
    delete:
      operationId: APIUserGroupMemberDelete
      description: 'Remove a user from an existing group.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-groupmanager`]'
      parameters:
        - description: Username of member to remove from group.
          in: query
          name: username
          required: true
          schema:
            type: string
        - description: Name of group to remove user from.
          example: admins
          in: query
          name: group
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Remove group member
      tags:
        - User > Group > Member
    post:
      operationId: APIUserGroupMemberCreate
      description: 'Assign a user to an existing group.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-groupmanager`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                group:
                  description: Names of groups to assign user to.
                  items:
                    type: string
                  type: array
                username:
                  description: Username of user to assign to groups.
                  type: string
              required:
                - username
                - group
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Assign group member
      tags:
        - User > Group > Member
  /api/v1/user/privilege:
    delete:
      operationId: APIUserPrivilegeDelete
      description: 'Remove privilege from an existing user.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-usermanager-addprivs`]'
      parameters:
        - description: Username of user to remove privilege.
          in: query
          name: username
          required: true
          schema:
            type: string
        - description: Name of the privilege to remove from the user.
          example: page-all
          in: query
          name: priv
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Remove user privilege
      tags:
        - User > Privilege
    post:
      operationId: APIUserPrivilegeCreate
      description: 'Assign new privileges to an existing user.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`, `page-system-usermanager-addprivs`]'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                priv:
                  default: [ ]
                  description: Names of privileges to assign to the user.
                  items:
                    type: string
                  type: array
                username:
                  description: Username of user to be granted privileges.
                  type: string
              required:
                - username
              type: object
      responses:
        "200":
          $ref: '#/components/responses/Success'
        "401":
          $ref: '#/components/responses/AuthenticationFailed'
      summary: Assign user privileges
      tags:
        - User > Privilege
tags:
  - name: Access Token
  - name: User
  - name: User > Authentication Server
  - name: User > Privilege
  - name: User > Group
  - name: User > Group > Member
  - name: Interface
  - name: Interface > Available
  - name: Interface > Bridge
  - name: Interface > Group
  - name: Interface > VLAN
  - name: Interface > Apply
  - name: Firewall > Alias
  - name: Firewall > Alias > Entry
  - name: Firewall > Alias > Advanced
  - name: Firewall > Rule
  - name: Firewall > Rule > Flush
  - name: Firewall > Rule > Sort
  - name: Firewall > Virtual IP
  - name: Firewall > NAT > Port Forward
  - name: Firewall > NAT > One-To-One
  - name: Firewall > NAT > Outbound
  - name: Firewall > NAT > Outbound > Mapping
  - name: Firewall > States
  - name: Firewall > States > Size
  - name: Firewall > Apply
  - name: Firewall > Traffic Shaper
  - name: Firewall > Traffic Shaper > Queue
  - name: Firewall > Traffic Shaper > Limiter
  - name: Firewall > Traffic Shaper > Limiter > Bandwidth
  - name: Firewall > Traffic Shaper > Limiter > Queue
  - name: Firewall > Schedule
  - name: Firewall > Schedule > Time Range
  - name: System > Notifications > Email
  - name: System > Version
  - name: System > Package
  - name: System > ARP
  - name: System > Config
  - name: System > Hostname
  - name: System > Certificate
  - name: System > CA
  - name: System > CRL
  - name: System > API
  - name: System > DNS
  - name: System > DNS > Server
  - name: System > Tunable
  - name: System > Table
  - name: System > Console
  - name: System > Reboot
  - name: System > Halt
  - name: Routing > Gateway
  - name: Routing > Gateway > Default
  - name: Routing > Gateway > Detail
  - name: Routing > Static Route
  - name: Routing > Apply
  - name: Status > CARP
  - name: Status > OpenVPN
  - name: Status > Log
  - name: Status > Gateway
  - name: Status > Interface
  - name: Status > IPsec
  - name: Status > System
  - name: Services
  - name: Services > OpenVPN > Server
  - name: Services > OpenVPN > Client
  - name: Services > OpenVPN > CSC
  - name: Services > Unbound
  - name: Services > Unbound > Apply
  - name: Services > Unbound > Access List
  - name: Services > Unbound > Access List > Row
  - name: Services > Unbound > Host Override
  - name: Services > Unbound > Host Override > Alias
  - name: Services > Unbound > Host Override > Flush
  - name: Services > DNSMASQ
  - name: Services > DNSMASQ > Host Override
  - name: Services > DNSMASQ > Host Override > Alias
  - name: Services > DHCPD
  - name: Services > DHCPD > Static Mapping
  - name: Services > DHCPD > Options
  - name: Services > DHCPD > Lease
  - name: Services > DPINGER
  - name: Services > NTPD
  - name: Services > NTPD > Time Server
  - name: Services > SSHD
  - name: Services > SYSLOGD
  - name: Services > DDNS
  - name: Services > WOL
  - name: Diagnostics > Command Prompt
