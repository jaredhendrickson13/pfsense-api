
openapi: 3.0.0
info:
  title: pfSense REST API Documentation
  version: "v1"
  description: >-
    ---
    
    # Introduction
    
    pfSense API is a fast, safe, REST API package for pfSense firewalls. This
    works by leveraging the same PHP functions and processes used by pfSense's 
    webConfigurator into API endpoints to create, read, update and
    delete pfSense configurations. All API endpoints enforce input validation 
    to prevent invalid configurations from being made. Configurations made via API 
    are properly written to the master XML configuration and the correct backend configurations 
    are made preventing the need for a reboot. All this results in the fastest, safest, and 
    easiest way to automate pfSense!


    # Requirements
    
    - pfSense CE 2.5.0 or later is supported. pfSense Plus is NOT compatible
    with this API and will break your pfSense Plus installation. (older pfSense
    CE versions may be compatible with older versions of pfSense API)
    
    - pfSense API requires a local user account in pfSense. The same permissions
    required to make configurations in the webConfigurator are required to make 
    calls to the API endpoints.
    
    - While not an enforced requirement, it is **strongly** recommended that you
    configure pfSense to use HTTPS instead of HTTP. This ensures that login
    credentials and/or API tokens remain secure in-transit.

    # Installation
    
    To install pfSense API, simply run the following command from the pfSense
    shell:<br><br>

    ```
    pkg add
    https://github.com/jaredhendrickson13/pfsense-api/releases/latest/download/pfSense-2.5-pkg-API.txz
    && /etc/rc.restart_webgui
    ```<br><br>

    To uninstall pfSense API, run the following command:<br><br>

    ```
    pfsense-api delete
    ```<br><br>

    To update pfSense API to the latest stable version, run the following
    command:<br><br>

    ```
    pfsense-api update
    ```<br><br>

    To revert to a previous version of pfSense API (e.g. v1.1.7), run the
    following command:<br><br>

    ```
    pfsense-api revert v1.1.7
    ```<br><br>

    ### Notes: 
    
    - To install the 2.6 package, simply change the `2.5` in the install URL to
    `2.6`.
    
    - In order for pfSense to apply some required web server changes, it is
    required to restart the webConfigurator after installing the package.
    
    - If you do not have shell access to pfSense, you can still install via the
    webConfigurator by navigating to 'Diagnostics > Command Prompt' and enter the commands there.
    
    - When updating pfSense, **_you must reinstall pfSense API afterwards_**.
    Unfortunately, pfSense removes all existing packages and only re-installs
    packages found within pfSense's package repositories. Since pfSense API is
    not an official package in pfSense's repositories, it does not get
    reinstalled automatically.
    
    - The `pfsense-api` command line tool was introduced in v1.1.0. Refer to the
    corresponding documentation for earlier releases.

    # UI Settings & Documentation
    
    After installation, you will be able to access the API user interface pages
    within the pfSense webConfigurator. These will be found under System > API.
    The settings tab will allow you change various API settings such as enabled
    API interfaces, authentication modes, and more. Additionally, the
    documentation tab will give you access to an embedded documentation tool
    that makes it easy to view the full API documentation in context to your
    pfSense instance.

    ### Notes: 
    
    - Users must hold the `page-all` or `page-system-api` privileges to access
    the API page within the webConfigurator.

    # Authentication & Authorization
    
    By default, pfSense API uses the same credentials as the webConfigurator.
    This behavior allows you to configure pfSense from the API out of the box, and user passwords may be changed from 
    the API to immediately add additional security if needed. After installation, you can navigate to System > API in 
    the pfSense webConfigurator to configure API authentication. Please note that external authentication servers like 
    LDAP or RADIUS are not supported with any API authentication method at this time. 

    To authenticate your API call, follow the instructions for your configured
    authentication mode:

    <details>
        <summary>Local Database (default)</summary>

    Uses the same credentials as the pfSense webConfigurator. To authenticate
    API calls, pass in your username and password using basic authentication.
    For example:<br><br>
    
    `curl -u admin:pfsense https://pfsense.example.com/api/v1/firewall/rule`<br><br>

    _Note: in previous releases, local database authentication used the
    `client-id` and `client-token` fields in your request body to authenticate.
    This functionality still exists but is not recommended. It will be removed
    in a future release._

    </details>

    <details>
        <summary>JWT</summary>

    Requires a bearer token to be included in the `Authorization` header of your
    request. To receive a bearer token, you may make a POST request to
    /api/v1/access_token and include a `client-id` value containing your
    pfSense username and a `client-token` value containing your pfSense password
    to your payload. For example:<br><br>
    
    `{"client-id": "admin", "client-token" "pfsense"}`<br><br>
    
    Once you have your bearer token, you can authenticate your API call by adding it to the request's authorization header. (e.g.
    `Authorization: Bearer xxxxxxxx.xxxxxxxxx.xxxxxxxx`)

    </details>

    <details>
        <summary>API Token</summary>

    Uses standalone tokens generated via the UI. These are better suited to
    distribute to systems as they are revocable and will only allow API
    authentication; not UI or SSH authentication (like the local database
    credentials). To generate or revoke credentials, navigate to System > API
    within the UI and ensure the Authentication Mode is set to API token. Then
    you should have the options to configure API Token generation, generate new
    tokens, and revoke existing tokens. Once you have your API token, you may
    authenticate your API call by specifying your client-id and client-token
    within an `Authorization` header, these values must be separated by a space.
    (e.g. `Authorization: client-id-here client-token-here`)<br><br>

    _Note: In previous versions of pfSense API, the client-id and client-token
    were provided via the request payload. This functionality is still supported
    but is not recommended. It will be removed in a future release._

    </details>

    ### Authorization

    pfSense API uses the same privileges as the pfSense webConfigurator. The
    required privileges for each endpoint are stated within the API
    documentation.

    # Content Types

    pfSense API can handle a few different content types. Please note, if a
    `Content-Type` header is not specified in your request, pfSense API will
    attempt to determine the content type which may have undesired results. It is recommended you specify your 
    preferred `Content-Type` on each request.<br><br>
    
    While several content types may be enabled, `application/json` is the recommended content type. Supported content types are:

    <details>
        <summary>application/json</summary>

    Parses the request body as a JSON formatted string. This is the recommended
    content type.<br><br>

    Example:<br><br>

    ```
    curl -s -H "Content-Type: application/json" -d '{"client-id": "admin", "client-token": "pfsense"}' -X GET https://pfsense.example.com/api/v1/system/arp 
    ```
    
    </details>

    <details>
        <summary>application/yaml</summary>

    Parses the request body as a YAML formatted string.<br><br>

    Example:<br><br>

    ```
    curl -s -H "Content-Type: application/yaml" --data-binary @requestbody.yml -X GET https://pfsense.example.com/api/v1/system/arp
    ```<br><br>
  
    _Note: request body must be contained within a properly formatted YAML file
    and data must be sent as binary data. Using the YAML content type may impact
    performance compared to JSON._

    </details>

    <details>
        <summary>application/x-www-form-urlencoded</summary>

    Parses the request body as URL encoded parameters.<br><br>
    
    _Note: this content type inherently cannot support all data types
    required by certain API endpoints and is only sufficient for simple tasks such as read requests._<br><br>

    Example:<br><br>

    ```
    curl -s -H "Content-Type: application/x-www-form-urlencoded" -X GET "https://pfsense.example.com/api/v1/system/arp?client-id=admin&client-token=pfsense"
    ```

    </details>

    # Queries
    
    pfSense API contains an advanced query engine to make it easy to query
    specific data from API calls. For endpoints supporting `GET` requests, you
    may query the return data to only return data you are looking for. To query
    data, you may add the data you are looking for to your payload. You may
    specify as many query parameters as you need. In order to match the query,
    each parameter must match exactly, or utilize a query filter to set
    criteria. If no matches were found, the endpoint will return an empty array
    in the data field. 

    <details>
        <summary>Targeting Objects</summary>
    
    You may find yourself only needing to read objects with specific values set.
    For example, say an API endpoint normally returns this response without a
    query:<br><br>

    ```json

    {
        "status":"ok",
        "code":200,
        "return":0,
        "message":"Success",
        "data": [
            {"id": 0, "name": "Test", "type": "type1", "extra": {"tag": 0}}, 
            {"id": 1, "name": "Other Test", "type": "type2", "extra": {"tag": 100}},
            {"id": 2, "name": "Another Test", "type": "type1", "extra": {"tag": 200}}
        ]
    }
    
    ```
    
    If you want the endpoint to only return the objects that have their `type`
    value set to `type1` you could add `{"type": "type1"}` to your payload. This
    returns:<br><br>

    ```json

    {
        "status":"ok",
        "code":200,
        "return":0,
        "message":"Success",
        "data": [
            {"id": 0, "name": "Test", "type": "type1", "extra": {"tag": 0}}, 
            {"id": 2, "name": "Another Test", "type": "type1", "extra": {"tag": 200}}
        ]
    }
    
    ```

    Additionally, if you need to target values that are nested within an array,
    you can add `{"extra__tag": 100}` to recursively target the `tag` value
    within the `extra` array. Note the double underscore separating the parent and child keys.
    This returns:<br><br>

    ```json

    {
        "status":"ok",
        "code":200,
        "return":0,
        "message":"Success",
        "data": [
            {"id": 1, "name": "Other Test", "type": "type2", "extra": {"tag": 100}}
        ]
    }
    
    ```

    </details>

    <details>
        <summary>Query Filters</summary>
    
    Query filters allow you to apply logic to the objects you target. This makes
    it easy to target data that meets specific criteria:<br><br>

    ### Starts With
    
    The `startswith` filter allows you to target objects whose values start with
    a specific substring. This will work on both string and integer data types.
    Below is an example response without any queries:<br><br>

    ```json

    {
        "status":"ok",
        "code":200,
        "return":0,
        "message":"Success",
        "data": [
            {"id": 0, "name": "Test", "type": "type1", "extra": {"tag": 0}}, 
            {"id": 1, "name": "Other Test", "type": "type2", "extra": {"tag": 100}},
            {"id": 2, "name": "Another Test", "type": "type1", "extra": {"tag": 200}}
        ]
    }
    
    ```
    
    If you wanted to target objects whose names started with `Other`, you could
    use the payload `{"name__startswith": "Other"}`. This returns:<br><br>

    ```json

    {
        "status":"ok",
        "code":200,
        "return":0,
        "message":"Success",
        "data": [
            {"id": 1, "name": "Other Test", "type": "type2", "extra": {"tag": 100}}
        ]
    }
    
    ```

    ### Ends With
    
    The `endswith` filter allows you to target objects whose values end with a
    specific substring. This will work on both string and integer data types.
    Below is an example response without any queries:<br><br>

    ```json

    {
        "status":"ok",
        "code":200,
        "return":0,
        "message":"Success",
        "data": [
            {"id": 0, "name": "Test", "type": "type1", "extra": {"tag": 0}}, 
            {"id": 1, "name": "Other Test", "type": "type2", "extra": {"tag": 100}},
            {"id": 2, "name": "Another Test", "type": "type1", "extra": {"tag": 200}}

        ]
    }
    
    ```

    If you wanted to target objects whose names ended with `er Test`, you could
    use the payload `{"name__endswith" "er Test"}`. This returns:<br><br>

    ```json

    {
        "status":"ok",
        "code":200,
        "return":0,
        "message":"Success",
        "data": [
            {"id": 1, "name": "Other Test", "type": "type2", "extra": {"tag": 100}},
            {"id": 2, "name": "Another Test", "type": "type1", "extra": {"tag": 200}}    
        ]
    }
    
    ```

    ### Contains
    
    The `contains` filter allows you to target objects whose values contain a
    specific substring. This will work on both string and integer data types.
    Below is an example response without any queries:<br><br>

    ```json

    {
        "status":"ok",
        "code":200,
        "return":0,
        "message":"Success",
        "data": [
            {"id": 0, "name": "Test", "type": "type1", "extra": {"tag": 0}}, 
            {"id": 1, "name": "Other Test", "type": "type2", "extra": {"tag": 100}},
            {"id": 2, "name": "Another Test", "type": "type1", "extra": {"tag": 200}}
        ]
    }
    
    ```

    If you wanted to target objects whose names contain `ther`, you could use
    the payload `{"name__contains": "ther"}`. This returns:<br><br>

    ```json

    {
        "status":"ok",
        "code":200,
        "return":0,
        "message":"Success",
        "data": [
            {"id": 1, "name": "Other Test", "type": "type2", "extra": {"tag": 100}},
            {"id": 2, "name": "Another Test", "type": "type1", "extra": {"tag": 200}}    
        ]
    }
    
    ```

    ### Less Than
    
    The `lt` filter allows you to target objects whose values are less than a
    specific number. This will work on both numeric strings and integer data
    types. Below is an example response without any queries:<br><br>

    ```json

    {
        "status":"ok",
        "code":200,
        "return":0,
        "message":"Success",
        "data": [
            {"id": 0, "name": "Test", "type": "type1", "extra": {"tag": 0}}, 
            {"id": 1, "name": "Other Test", "type": "type2", "extra": {"tag": 100}},
            {"id": 2, "name": "Another Test", "type": "type1", "extra": {"tag": 200}}
        ]
    }
    ```
    
    If you wanted to target objects whose tag is less than `100`, you could use
    the payload `{"extra__tag__lt": 100}`. This returns:<br><br>

    ```json

    {
        "status":"ok",
        "code":200,
        "return":0,
        "message":"Success",
        "data": [
            {"id": 0, "name": "Test", "type": "type1", "extra": {"tag": 0}}  
        ]
    }
    
    ```

    ### Less Than or Equal To
    
    The `lte` filter allows you to target objects whose values are less than or
    equal to a specific number. This will work on both numeric strings and
    integer data types. Below is an example response without any queries:<br><br>

    ```json

    {
        "status":"ok",
        "code":200,
        "return":0,
        "message":"Success",
        "data": [
            {"id": 0, "name": "Test", "type": "type1", "extra": {"tag": 0}}, 
            {"id": 1, "name": "Other Test", "type": "type2", "extra": {"tag": 100}},
            {"id": 2, "name": "Another Test", "type": "type1", "extra": {"tag": 200}}
        ]
    }
    
    ```

    If you wanted to target objects whose tag is less than or equal to `100`,
    you could use the payload `{"extra__tag__lte": 100}`. This returns:<br><br>

    ```json

    {
        "status":"ok",
        "code":200,
        "return":0,
        "message":"Success",
        "data": [
            {"id": 0, "name": "Test", "type": "type1", "extra": {"tag": 0}},
            {"id": 1, "name": "Other Test", "type": "type2", "extra": {"tag": 100}}
        ]
    }
    
    ```

    ### Greater Than
    The `gt` filter allows you to target objects whose values are greater than a
    specific number. This will work on both numeric strings and integer data
    types. Below is an example response without any queries:<br><br>
    
    ```json

    {
        "status":"ok",
        "code":200,
        "return":0,
        "message":"Success",
        "data": [
            {"id": 0, "name": "Test", "type": "type1", "extra": {"tag": 0}}, 
            {"id": 1, "name": "Other Test", "type": "type2", "extra": {"tag": 100}},
            {"id": 2, "name": "Another Test", "type": "type1", "extra": {"tag": 200}}
        ]
    }
    
    ```
    
    If you wanted to target objects whose tag is greater than `100`, you could
    use the payload `{"extra__tag__gt": 100}`. This returns:<br><br>

    ```json

    {
        "status":"ok",
        "code":200,
        "return":0,
        "message":"Success",
        "data": [
            {"id": 2, "name": "Another Test", "type": "type1", "extra": {"tag": 200}}  
        ]
    }
    
    ```

    ### Greater Than or Equal To
    
    The `lte` filter allows you to target objects whose values are greater than
    or equal to a specific number. This will work on both numeric strings and
    integer data types. Below is an example response without any queries:<br><br>

    ```json

    {
        "status":"ok",
        "code":200,
        "return":0,
        "message":"Success",
        "data": [
            {"id": 0, "name": "Test", "type": "type1", "extra": {"tag": 0}}, 
            {"id": 1, "name": "Other Test", "type": "type2", "extra": {"tag": 100}},
            {"id": 2, "name": "Another Test", "type": "type1", "extra": {"tag": 200}}
        ]
    }
    
    ```

    If you wanted to target objects whose tag is greater than or equal to `100`,
    you could use the payload `{"extra__tag__gte": 100}`. This returns:<br><br>

    ```json

    {
        "status":"ok",
        "code":200,
        "return":0,
        "message":"Success",
        "data": [
            {"id": 1, "name": "Other Test", "type": "type2", "extra": {"tag": 100}},
            {"id": 2, "name": "Another Test", "type": "type1", "extra": {"tag": 200}}
        ]
    }
    
    ```

    </details>

    <details>
      <summary>Obtaining Object IDs</summary>
    
    You may notice some API endpoints require an object `id` to update or delete
    objects. These IDs are not stored values, rather pfSense uses the object's
    array index value to locate and identify objects. Unless specified
    otherwise, API endpoints will use the same array index value (as returned in
    the `data` response field) to locate objects when updating or deleting. Some
    important items to note about these IDs:<br><br>

    - pfSense starts arrays with an index of 0. If you use a loop counter to
    determine the ID of a specific object, you must start that counter at 0.
    
    - These IDs are dynamic. For example, if you have 3 static route objects
    stored (IDs `0`, `1`, and `2`) and you _delete_ the object with ID `1`,
    pfSense will resort the array so the object with ID `2` will now have an ID
    of `1`.
    
    - API queries will retain the object's ID in the response. In the event that
    the `data` response field is no longer a sequential array due to the query,
    the `data` field will be represented as an associative array with the array
    items` key being the objects ID.

    </details>


    ### Requirements for queries:
    
    - API call must be successful and return `0` in the `return` field.
    
    - Endpoints must return an array of objects in the data field (e.g. `[{"id":
    0, "name": "Test"}, {"id": 1, "name": "Other Test"}]`).
    
    - At least two objects must be present within the data field to support
    queries.
    
    # Limitations
    
    There are a few key limitations to keep in mind while using this API:<br><br>
    
    - pfSense's XML configuration was not designed for quick simultaneous writes
    like a traditional database. It may be necessary to delay API calls in
    sequence to prevent unexpected behavior such as configuration overwrites.
    
    - By design, values stored in pfSense's XML configuration can only be parsed as strings,
    arrays or objects. This means that even though request data requires data to be of a 
    certain type, it will not necessarily be stored as that type. Data read from the API
    may be represented differently than the format it was requested as.

components:
  schemas:
    Response:
      type: object
      properties:
        status:
          type: string
          description: HTTP status message.
        code:
          type: integer
          description: HTTP status code.
        return:
          type: integer
          description: API response/error code.
        message:
          type: string
          description: API response message.
        data:
          description: API response data.
          example: {}
          oneOf:
            - type: array
            - type: object

  responses:
    Success:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
    AuthenticationFailed:
      description: Authentication failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'

  securitySchemes:
    local_database:
      type: http
      scheme: basic
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - local_database: []
  - jwt: []

tags:
  - name: Access Token
  - name: User
  - name: User > Authentication Server
  - name: User > Privilege
  - name: User > Group > Member
  - name: Interface
  - name: Interface > Bridge
  - name: Interface > VLAN
  - name: Interface > Apply
  - name: Firewall > Alias
  - name: Firewall > Alias > Entry
  - name: Firewall > Rule
  - name: Firewall > Rule > Flush
  - name: Firewall > Rule > Sort
  - name: Firewall > Virtual IP
  - name: Firewall > NAT > Port Forward
  - name: Firewall > NAT > One-To-One
  - name: Firewall > NAT > Outbound
  - name: Firewall > NAT > Outbound > Mapping
  - name: Firewall > States
  - name: Firewall > States > Size
  - name: Firewall > Apply
  - name: Firewall > Traffic Shaper
  - name: Firewall > Traffic Shaper > Queue
  - name: Firewall > Traffic Shaper > Limiter
  - name: Firewall > Traffic Shaper > Limiter > Bandwidth
  - name: Firewall > Traffic Shaper > Limiter > Queue
  - name: Firewall > Schedule
  - name: Firewall > Schedule > Time Range
  - name: System > Notifications > Email
  - name: System > Version
  - name: System > Package
  - name: System > ARP
  - name: System > Config
  - name: System > Hostname
  - name: System > Certificate
  - name: System > CA
  - name: System > CRL
  - name: System > API
  - name: System > DNS
  - name: System > DNS > Server
  - name: System > Tunable
  - name: System > Table
  - name: System > Console
  - name: System > Reboot
  - name: System > Halt
  - name: Routing > Gateway
  - name: Routing > Gateway > Detail
  - name: Routing > Static Route
  - name: Routing > Apply
  - name: Status > CARP
  - name: Status > OpenVPN
  - name: Status > Log
  - name: Status > Gateway
  - name: Status > Interface
  - name: Status > System
  - name: Services
  - name: Services > OpenVPN > CSC
  - name: Services > Unbound
  - name: Services > Unbound > Access List
  - name: Services > Unbound > Access List > Row
  - name: Services > Unbound > Host Override
  - name: Services > Unbound > Host Override > Alias
  - name: Services > DNSMASQ
  - name: Services > DNSMASQ > Host Override
  - name: Services > DNSMASQ > Host Override > Alias
  - name: Services > DHCPD
  - name: Services > DHCPD > Static Mapping
  - name: Services > DHCPD > Options
  - name: Services > DHCPD > Lease
  - name: Services > DPINGER
  - name: Services > NTPD
  - name: Services > NTPD > Time Server
  - name: Services > SSHD
  - name: Services > SYSLOGD
  - name: Services > DDNS
  - name: Diagnostics > Command Prompt
paths:
  /api/v1/access_token:
    post:
      tags:
        - Access Token
      summary: Request JWT access token
      description: >-
        Receive a temporary access token using your pfSense local database
        credentials. Basic authentication must be used to authenticate
        on this endpoint and this token is only applicable when the API is configured
        to use the JWT authentication type.
      security:
        - local_database: [ ]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/user/auth_server:
    get:
      tags:
        - User > Authentication Server
      summary: Read authentication servers
      description: >-
        Read configured LDAP and RADIUS authentication servers.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-authservers`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"


    delete:
      tags:
        - User > Authentication Server
      summary: Delete authentication server
      description: >-
        Delete an existing authentication server. This can be either a RADIUS or
        LDAP authentication server.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-authservers`]
      parameters:
        - name: name
          in: body
          description: Name of authentication server to delete.
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/user/auth_server/ldap:
    get:
      tags:
        - User > Authentication Server
      summary: Read LDAP authentication servers
      description: >-
        Read configured LDAP authentication servers.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-authservers`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - User > Authentication Server
      summary: Create LDAP authentication server
      description: >-
        Add a new remote LDAP authentication server.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-authservers`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: EXAMPLE_LDAP
                host: ldap.example.com
                ldap_port: 636
                ldap_urltype: encrypted
                ldap_protver: 3
                ldap_timeout: 12
                ldap_scope: subtree
                ldap_basedn: dc=test,dc=com
                ldap_authcn: ou=people,dc=example,dc=com;ou=groups,dc=example,dc=com
                ldap_attr_user: uid
                ldap_attr_group: cn
                ldap_attr_member: memberof
                ldap_attr_groupobj: posixGroup
                ldap_binddn: cn=pfsense,dc=example,dc=com
                ldap_bindpw: example_password
                active: false
      parameters:
        - name: name
          in: body
          description: Unique name for the authentication server.
          required: true
          schema:
            type: string
        - name: host
          in: body
          description: Hostname or IP of the LDAP server to query.
          required: true
          schema:
            type: string
        - name: ldap_port
          in: body
          description: Remote LDAP server's LDAP port.
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 65535
        - name: ldap_urltype
          in: body
          required: true
          schema:
            type: string
            enum: ["standard", "starttls", "encrypted"]
          description: Transport method to use for LDAP queries.
        - name: ldap_protver
          in: body
          description: LDAP version used by the remote authentication server.
          schema:
            type: integer
            enum: [2, 3]
            default: 3
        - name: ldap_scope
          in: body
          required: true
          description: Scope of LDAP search.
          schema:
            type: string
            enum: ["one", "subtree"]
        - name: ldap_basedn
          in: body
          description: Base distinguished name of LDAP tree.
          schema:
            type: string
            default: ""
        - name: ldap_authcn
          in: body
          description: LDAP authentication container.
          schema:
            type: string
            default: ""
        - name: ldap_extended_query
          in: body
          description: Extended LDAP queries. Specifying any value enables LDAP extended queries.
          schema:
            type: string
        - name: ldap_binddn
          in: body
          description: Bind DN to use for LDAP authentication.
          schema:
            type: string
            default: ""
        - name: ldap_bindpw
          in: body
          description: Bind password to use for LDAP authentication.
          required: true
          schema:
            type: string
            format: password
        - name: ldap_attr_user
          in: body
          description: LDAP user naming attribute.
          required: true
          example: uid
          schema:
            type: string
        - name: ldap_attr_group
          in: body
          description: LDAP group naming attribute.
          required: true
          example: gid
          schema:
            type: string
        - name: ldap_attr_member
          in: body
          description: LDAP group member attribute.
          required: true
          example: memberof
          schema:
            type: string
        - name: ldap_attr_groupobj
          in: body
          description: LDAP group object class. Specifying any value enables RFC2307 mode.
          example: posixGroup
          schema:
            type: string
        - name: ldap_utf8
          in: body
          description: Enable UTF-8 encoded LDAP parameters.
          schema:
            type: boolean
            default: false
        - name: ldap_timeout
          in: body
          description: Connection timeout for LDAP requests.
          schema:
            type: integer
            default: 25
        - name: ldap_nostrip_at
          in: body
          description: Disable LDAP username alterations.
          schema:
            type: boolean
            default: false
        - name: active
          in: body
          description: Set this authentication server as the system default.
          schema:
            type: boolean
            default: false
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - User > Authentication Server
      summary: Delete LDAP authentication server
      description: >-
        Delete an existing LDAP authentication server.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-authservers`]
      parameters:
        - name: name
          in: body
          description: Name of the LDAP authentication server to delete.
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/user/auth_server/radius:
    delete:
      tags:
        - User > Authentication Server
      summary: Delete RADIUS authentication server
      description: >-
        Delete an existing RADIUS authentication server.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-authservers`]
      parameters:
        - name: name
          in: body
          description: Name of the RADIUS authentication server to delete.
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - User > Authentication Server
      summary: Create RADIUS authentication server
      description: >-
        Create a new RADIUS authentication server.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-authservers`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: EXAMPLE_RADIUS
                host: radius.example.com
                radius_secret: example_secret
                radius_auth_port: 1812
                radius_acct_port: 1813
                radius_protocol: MSCHAPv2
                radius_timeout: 5
                radius_nasip_attribute: wan
      parameters:
        - name: name
          in: body
          required: true
          schema:
            type: string
          description: >-
            Descriptive name for the RADIUS authentication server. 
            This name must be unique from all other authentication servers on the system.
        - name: host
          in: body
          description: IP or hostname of the remote RADIUS authentication server.
          required: true
          schema:
            type: string
        - name: radius_secret
          in: body
          description: Shared secret of the remote RADIUS authentication server.
          required: true
          schema:
            type: string
            format: password
        - name: radius_auth_port
          in: body
          schema:
            type: integer
            minimum: 1
            maximum: 65535
          description: >-
            Remote RADIUS authentication server's authentication
            port. If no value is specified, the authentication service on the
            remote RADIUS server will not be used. This field is optional if a
            `radius_acct_port` value is specified.
        - name: radius_acct_port
          in: body
          schema:
            type: integer
            minimum: 1
            maximum: 65535
          description: >-
            Remote RADIUS authentication server's accounting port.
            If no value is specified, the accounting service on the remote
            RADIUS server will not be used. This field is optional if a
            `radius_auth_port` value is specified.
        - name: radius_timeout
          in: body
          description: Amount of time (in seconds) to wait for the remote RADIUS server to respond before timing out.
          schema:
            type: integer
            minimum: 1
            default: 5
        - name: radius_nasip_attribute
          in: body
          description: Interface to use for the "NAS-IP-Address" attribute during RADIUS requests.
          schema:
            type: string
            default: wan
        - name: radius_protocol
          in: body
          description: RADIUS authentication protocol to use when communicating with the remote RADIUS server.
          schema:
            type: string
            enum: ["PAP", "CHAP_MD5", "MSCHAPv1", "MSCHAPv2"]
            default: MSCHAPv2
        - name: active
          in: body
          description: Set this authentication server as the system default.
          schema:
            type: boolean
            default: false
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    get:
      tags:
        - User > Authentication Server
      summary: Read RADIUS authentication servers
      description: >-
        Read configured RADIUS authentication servers.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-authservers`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/user/privilege:
    post:
      tags:
        - User > Privilege
      summary: Assign user privileges
      description: >-
        Assign new privileges to an existing user.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-usermanager-addprivs`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: example_user
                priv:
                  - page-all
                  - page-system-usermanager
      parameters:
        - name: username
          in: body
          description: Username of user to be granted privileges.
          required: true
          schema:
            type: string
        - name: priv
          in: body
          description: Names of privileges to assign to the user.
          example: ["page-all"]
          schema:
            type: array
            default: []
            items:
              type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - User > Privilege
      summary: Remove user privileges
      description: >-
        Remove privileges from an existing user.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-usermanager-addprivs`]
      parameters:
        - name: username
          in: body
          description: Username of user to remove privileges.
          required: true
          schema:
            type: string
        - name: priv
          in: body
          description: Names of privileges to remove from the user.
          example: ["page-all"]
          schema:
            type: array
            items:
              type: string
              default: []
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/user/group/member:
    post:
      tags:
        - User > Group > Member
      summary: Assign group member
      description: >-
        Assign a user to an existing group.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-groupmanager`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: example_user
                group:
                  - admins
      parameters:
        - name: username
          in: body
          description: Username of user to assign to groups.
          required: true
          schema:
            type: string
        - name: group
          in: body
          description: Names of groups to assign user to.
          example: ["admins"]
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - User > Group > Member
      summary: Remove group member
      description: >-
        Remove a user from an existing group.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-groupmanager`]
      parameters:
        - name: username
          in: body
          description: Username of member to remove from group.
          required: true
          schema:
            type: string
        - name: group
          in: body
          description: Names of groups to remove user from.
          example: ["admins"]
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"


  /api/v1/user:
    get:
      tags:
        - User
      summary: Read users
      description: >-
        Read users from the local user database.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-usermanager`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - User
      summary: Create user
      description: >-
        Add a new user to the local database.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-usermanager`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                disabled: true
                username: example_user
                password: example_password
                descr: John Doe
                expires: 11/22/2020
                priv: ["page-firewall-rules"]
                cert: ["621e68249d170"]
      parameters:
        - name: username
          in: body
          description: Username to assign to the new user.
          required: true
          schema:
            type: string
        - name: password
          in: body
          description: Password to assign new user.
          required: true
          schema:
            type: string
            format: password
        - name: disabled
          in: body
          description: Disable user account upon creation.
          schema:
            type: boolean
            default: false
        - name: descr
          in: body
          description: Full name of the new user.
          schema:
            type: string
            default: ""
        - name: expires
          in: body
          description: Expiration date for user account in MM/DD/YYYY format.
          schema:
            type: string
            default: ""
        - name: priv
          in: body
          example: ["page-firewall-rule"]
          schema:
            type: array
            default: []
            items:
              type: string
          description: >-
            Assign privileges to this user. This must be an array of
            corresponding pfSense privileges.
        - name: cert
          in: body
          example: ["621e68249d170"]
          schema:
            type: array
            default: []
            items:
              type: string
          description: >-
            Assign certificates to this user. This must be an array of
            corresponding user certificate's `refid` values.
        - name: authorizedkeys
          in: body
          description: Base64 encoded authorized SSH keys to assign new user.
          schema:
            type: string
            default: ""
        - name: ipsecpsk
          in: body
          description: IPsec pre-shared key to assign new user.
          schema:
            type: string
            default: ""
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - User
      summary: Update user
      description: >-
        Update an existing user.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-usermanager`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                disabled: false
                username: example_user
                password: updated_example_password
                descr: Jane Doe
                expires: 11/22/2022
                priv: ["page-firewall-rules", "page-all"]
                cert: []
      parameters:
        - name: username
          in: body
          description: Username of the user to update. This field cannot be updated.
          required: true
          schema:
            type: string
        - name: password
          in: body
          description: New password to assign user.
          schema:
            type: string
            format: password
        - name: disabled
          in: body
          description: Disable user account.
          schema:
            type: boolean
        - name: descr
          in: body
          description: New full name of the user.
          schema:
            type: string
        - name: expires
          in: body
          description: New expiration date for user account in MM/DD/YYYY format.
          schema:
            type: string
        - name: priv
          in: body
          example: ["page-firewall-rule"]
          schema:
            type: array
            items:
              type: string
          description: >-
            Assign privileges to this user. This must be an array of
            corresponding pfSense privileges. Existing values will be
            overwritten.
        - name: cert
          in: body
          example: ["621e68249d170"]
          schema:
            type: array
            items:
              type: string
          description: >-
            Assign certificates to this user. This must be an array of
            corresponding user certificate's `refid` values. Existing values will be
            overwritten.
        - name: authorizedkeys
          in: body
          description: New Base64 encoded authorized SSH keys to assign new user.
          schema:
            type: string
        - name: ipsecpsk
          in: body
          description: New IPsec pre-shared key to assign new user.
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - User
      summary: Delete user
      description: >-
        Delete an existing pfSense user from the local database.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-usermanager`]
      parameters:
        - name: username
          in: body
          description: Username of user to delete.
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/interface/bridge:
    get:
      tags:
        - Interface > Bridge
      summary: Read interface bridges
      description: >-
        Read bridge assignments and configuration.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-interfaces-bridge`, `page-interfaces-bridge-edit`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - Interface > Bridge
      summary: Create interface bridge
      description: >-
        Add a new bridge interface.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-interfaces-bridge-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                members:
                  - em1
                  - LAN
                descr: Example bridge
      parameters:
        - name: members
          in: body
          required: true
          example: ["LAN", "opt7", "em0"]
          schema:
            type: array
            items:
              type: string
          description: >-
            Interface members to add to this bridge. This can be the
            physical interface ID (e.g. em0), the pfSense interface ID (e.g.
            wan, lan, optx) or the interface description (e.g. WAN, LAN).
        - name: descr
          in: body
          description: Description for the new bridge.
          schema:
            type: string
            default: ""
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Interface > Bridge
      summary: Update interface bridge
      description: >-
        Update an existing bridge configuration.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-interfaces-bridge-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: bridge0
                members:
                  - WAN
                  - lan
                  - igb2
                descr: Updated example bridge
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: string
          description: >-
            Bridge ID of bridge to update. _Note: This uses the `bridgeif`
            value (e.g. bridge0, bridge2, etc.) NOT the configuration array
            index like other objects._
        - name: members
          in: body
          example: ["LAN", "opt7", "em0"]
          schema:
            type: array
            items:
              type: string
          description: >-
            Interface members to assign to this bridge. This can be the
            physical interface ID (e.g. em0), the pfSense interface ID (e.g.
            wan, lan, optx) or the interface description (e.g. WAN, LAN). Any
            existing values will be overwritten.
        - name: descr
          in: body
          description: New description for the bridge.
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Interface > Bridge
      summary: Delete interface bridge
      description: >-
        Delete bridge assignment and configuration.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-interfaces-bridge-edit`]
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: string
          description: >-
            Bridge ID of bridge to delete. Bridges cannot be deleted while in
            use. _Note: This uses the `bridgeif` value (e.g. bridge0, bridge2,
            etc.) NOT the configuration array index like other objects._
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/interface/vlan:
    get:
      tags:
        - Interface > VLAN
      summary: Read interface VLANs
      description: >-
        Read VLAN assignments and configuration.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-interfaces-vlan`, `page-interfaces-vlan-edit`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - Interface > VLAN
      summary: Create interface VLAN
      description: >-
        Add a new VLAN interface.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-interfaces-vlan-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                if: em1
                tag: 3
                descr: Example VLAN
      parameters:
        - name: if
          in: body
          description: Parent interface to add the new VLAN to.
          required: true
          schema:
            type: string
        - name: tag
          in: body
          description: VLAN tag to add to the parent interface.
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 4096
        - name: pcp
          in: body
          description: 802.1q VLAN priority.
          schema:
            type: integer
            minimum: 0
            maximum: 7
        - name: descr
          in: body
          description: Description of the new VLAN interface.
          schema:
            type: string
            default: ""
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Interface > VLAN
      summary: Update interface VLAN
      description: >-
        Modify an existing VLAN configuration


        _Note: Unlike the pfSense webConfigurator, you CAN modify an existing
        VLAN (including parent interface and VLAN tag) while the VLAN is
        assigned to an active interface. When doing so, please expect up to 5
        seconds of downtime to the associated VLAN while the backend
        configuration is changed_<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-interfaces-vlan-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                vlanif: em1.3
                tag: 770
                pcp: 3
                descr: Example description
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            ID associated with the VLAN to update. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: if
          in: body
          description: Parent interface to change the VLAN to.
          schema:
            type: string
        - name: tag
          in: body
          description: VLAN tag to change on the parent interface.
          schema:
            type: integer
            minimum: 1
            maximum: 4096
        - name: pcp
          in: body
          description: 802.1q VLAN priority.
          schema:
            type: integer
            minimum: 0
            maximum: 7
        - name: descr
          in: body
          description: Description of the new VLAN interface.
          schema:
            type: string
            default: ""
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Interface > VLAN
      summary: Delete Interface VLAN
      description: >-
        Delete VLAN assignment and configuration.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-interfaces-vlan-edit`]
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            ID associated with the VLAN to Delete. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/interface/apply:
    post:
      tags:
        - Interface > Apply
      summary: Apply interfaces
      description: >-
        Apply pending interface changes.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-interfaces-assignnetworkports`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/interface:
    get:
      tags:
        - Interface
      summary: Read interfaces
      description: >-
        Read interface assignments and configuration.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-interfaces-assignnetworkports`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - Interface
      summary: Create interface
      description: >-
        Configure a new interface.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-interfaces-assignnetworkports`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                if: em1.3
                descr: EXAMPLE_INTERFACE
                enable: true
                type: staticv4
                ipaddr: 10.250.0.1
                subnet: 24
                blockbogons: true
      parameters:
        - name: if
          in: body
          description: Real interface ID to configure.
          required: true
          example: em0
          schema:
            type: string
        - name: descr
          in: body
          description: Descriptive name for the new interface.
          required: true
          schema:
            type: string
        - name: enable
          in: body
          description: Enable interface upon creation.
          schema:
            type: boolean
            default: false
        - name: spoofmac
          in: body
          description: Custom MAC address to assign to the interface.
          schema:
            type: string
            default: ""
        - name: mtu
          in: body
          description: MTU for this interface. If a VLAN interface, this value must be greater than parent.
          schema:
            type: integer
            minimum: 1280
            maximum: 8192
        - name: mss
          in: body
          description: MSS for this interface.
          schema:
            type: string
            minimum: 576
            maximum: 65535
        - name: media
          in: body
          description: Speed/duplex setting for this interface. Options are dependent on physical interface capabilities.
          schema:
            type: string
        - name: type
          in: body
          description: IPv4 configuration type.
          schema:
            type: string
            enum: ["staticv4", "dhcp"]
        - name: type6
          in: body
          description: IPv6 configuration type.
          schema:
            type: string
            enum: ["staticv6", "dhcp6", "slaac", "6rd", "track6", "6to4"]
        - name: ipaddr
          in: body
          description: Interface's static IPv4 address. Required if `type` is set to `staticv4`.
          schema:
            type: string
        - name: subnet
          in: body
          description: Interface's static IPv4 address's subnet bitmask. Required if `type` is set to `staticv4`.
          schema:
            type: integer
            minimum: 1
            maximum: 32
        - name: gateway
          in: body
          description: Name of upstream IPv4 gateway for this interface. This is only necessary on WAN/UPLINK interfaces.
          example: "WANGW_V4"
          schema:
            type: string
        - name: ipaddrv6
          in: body
          description: Interface's static IPv6 address. Required if `type6` is set to `staticv6`.
          schema:
            type: string
        - name: subnetv6
          in: body
          description: Interface's static IPv6 address's subnet bitmask. Required if `type6` is set to `staticv6`.
          schema:
            type: string
        - name: gatewayv6
          in: body
          example: "WANGW_V6"
          schema:
            type: string
          description: >-
            Name of upstream IPv6 gateway for this interface. This is only necessary for WAN/UPLINK interfaces. This
            parameter is only available when `type6` is set to `staticv6`.
        - name: ipv6usev4iface
          in: body
          schema:
            type: boolean
            default: false
          description: Allow IPv6 to use IPv4 uplink connection.
        - name: dhcphostname
          in: body
          schema:
            type: string
          description: Assign IPv4 DHCP hostname. This parameter is only available when `type` is set to `dhcp`.
        - name: dhcprejectfrom
          in: body
          schema:
            type: array
            items:
              type: string
          description: >-
            Assign IPv4 DHCP rejected servers by IP. This parameter is only available when `type` is set to `dhcp`.
        - name: alias-address
          in: body
          schema:
            type: string
          description: >-
            Set the IPv4 DHCP address alias. The value in this field is used as a fixed alias IPv4 address by the DHCP 
            client. This parameter is only available when `type` is set to `dhcp`.
        - name: alias-subnet
          in: body
          description: Set the IPv4 DHCP address aliases subnet. This parameter is only available when `type` is set to `dhcp`.
          schema:
            type: integer
            minimum: 1
            maximum: 32
        - name: adv_dhcp_pt_timeout
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Set the IPv4 DHCP protocol timeout interval. Must be numeric value
            greater than 1. This parameter is only available when `type` is set to `dhcp`.
        - name: adv_dhcp_pt_retry
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Set the IPv4 DHCP protocol retry interval. Must be numeric value
            greater than 1. This parameter is only available when `type` is set to `dhcp`.
        - name: adv_dhcp_pt_select_timeout
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Set the IPv4 DHCP protocol select timeout interval. Must be numeric
            value greater than 0. This parameter is only available when `type` is set to `dhcp`.
        - name: adv_dhcp_pt_reboot
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Set the IPv4 DHCP protocol reboot interval. Must be numeric value
            greater than 1. This parameter is only available when `type` is set to `dhcp`.
        - name: adv_dhcp_pt_backoff_cutoff
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Set the IPv4 DHCP protocol backoff cutoff interval. Must be numeric
            value greater than 1. This parameter is only available when `type` is set to `dhcp`.
        - name: adv_dhcp_pt_initial_interval
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Set the IPv4 DHCP protocol initial interval. Must be numeric value
            greater than 1. This parameter is only available when `type` is set to `dhcp`.
        - name: adv_dhcp_config_advanced
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Enable the IPv4 DHCP advanced configuration options. This enables
            the DHCP options: `adv_dhcp_send_options`, `adv_dhcp_request_options`, `adv_dhcp_required_options`,
            `adv_dhcp_option_modifiers`. This parameter is only available when `type` is set to `dhcp`.
        - name: adv_dhcp_send_options
          in: body
          description: Set a custom IPv4 send option. This parameter is only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced` is set to `true`.
          schema:
            type: string
        - name: adv_dhcp_request_options
          in: body
          description: Set a custom IPv4 request option. This parameter is only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced` is set to `true`.
          schema:
            type: string
        - name: adv_dhcp_required_options
          in: body
          description: Set a custom IPv4 required option. This parameter is only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced` is set to `true`.
          schema:
            type: string
        - name: adv_dhcp_option_modifiers
          in: body
          description: Set a custom IPv4 option modifier. This parameter is only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced` is set to `true`.
          schema:
            type: string
        - name: adv_dhcp_config_file_override
          in: body
          description: Enable local DHCP configuration file override. This parameter is only available when `type` is set to `dhcp`.
          schema:
            type: boolean
            default: False
        - name: adv_dhcp_config_file_override_file
          in: body
          schema:
            type: string
          description: >-
            Set the custom DHCP configuration file's absolute path. This file
            must exist beforehand. This parameter is only available when `type` is set to `dhcp` and 
            `adv_dhcp_config_file_override` is set to `true`.
        - name: dhcpvlanenable
          in: body
          description: Enable DHCP VLAN prioritization. This parameter is only available when `type` is set to `dhcp`.
          schema:
            type: boolean
            default: false
        - name: dhcpcvpt
          in: body
          schema:
            type: integer
            enum: [0, 1, 2, 3, 4, 5, 6, 7]
          description: Set the DHCP VLAN priority. This parameter is only available when `type` is set to `dhcp` and `dhcpvlanenable` is set to `true`.
        - name: gateway-6rd
          in: body
          schema:
            type: string
          description: >-
            Set the 6RD interface IPv4 gateway address. This parameter is only required when
            `type6` is set to `6rd`
        - name: prefix-6rd
          in: body
          schema:
            type: string
          description: >-
            Set the 6RD IPv6 prefix assigned by the ISP. This parameter is only required when
            `type6` is set to `6rd`
        - name: prefix-6rd-v4plen
          in: body
          schema:
            type: integer
            minimum: 0
            maximum: 32
            default: 0
          description: >-
            Set the 6RD IPv4 prefix length. This is typically assigned by the
            ISP. This parameter is only available when `type6` is set to `6rd`.
        - name: track6-interface
          in: body
          schema:
            type: string
          description: >-
            Set the Track6 dynamic IPv6 interface. This must be a dynamically
            configured IPv6 interface. You may specify either the interface's
            descriptive name, the pfSense ID (wan, lan, optx), or the physical
            interface id (e.g. igb0). This parameter is only required with `type6` is set to
            `track6`
        - name: track6-prefix-id-hex
          in: body
          schema:
            type: integer
            default: 0
          description: >-
            Set the IPv6 prefix ID. The value in this field is the (Delegated)
            IPv6 prefix ID. This determines the configurable network ID based on
            the dynamic IPv6 connection. The default value is 0. This parameter is only available
            when `type6` is set to `track6`
        - name: blockpriv
          description: Block RFC1918 traffic from routing over this interface.
          in: body
          schema:
            type: boolean
            default: false
        - name: blockbogons
          in: body
          description: Block bogon networks from routing over this interface.
          schema:
            type: boolean
            default: false
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this interface to be applied
            immediately, or simply written to the configuration to be applied
            later. Typically, if you are creating multiple interfaces at once it
            Is best to set this to false and apply the changes afterwards using
            the `/api/v1/interface/apply` endpoint. Otherwise, If you are only
            creating a single interface, you may set this true to apply it
            immediately.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Interface
      summary: Update interface
      description: >-
        Update an existing interface.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-interfaces-assignnetworkports`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                if: em1.3
                descr: UPDATED_EXAMPLE_INTERFACE
                enable: False
                type: staticv4
                ipaddr: 10.250.0.1
                subnet: 25
                blockbogons: true
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: string
          description: >-
            Interface ID to update. You may specify either the
            interface's descriptive name, the pfSense ID (wan, lan, optx), or
            the physical interface id (e.g. igb0).
          example: string
        - name: if
          in: body
          description: Real interface ID to assign this configuration to.
          example: em0
          schema:
            type: string
        - name: descr
          in: body
          description: Descriptive name for the interface.
          schema:
            type: string
        - name: enable
          in: body
          description: Enable or disable interface upon update.
          schema:
            type: boolean
            default: false
        - name: spoofmac
          in: body
          description: Custom MAC address to assign to the interface.
          schema:
            type: string
            default: ""
        - name: mtu
          in: body
          description: MTU for this interface. If a VLAN interface, this value must be greater than parent.
          schema:
            type: integer
            minimum: 1280
            maximum: 8192
        - name: mss
          in: body
          description: MSS for this interface.
          schema:
            type: string
            minimum: 576
            maximum: 65535
        - name: media
          in: body
          description: Speed/duplex setting for this interface. Options are dependent on physical interface capabilities.
          schema:
            type: string
        - name: type
          in: body
          description: IPv4 configuration type.
          schema:
            type: string
            enum: ["staticv4", "dhcp"]
        - name: type6
          in: body
          description: IPv6 configuration type.
          schema:
            type: string
            enum: ["staticv6", "dhcp6", "slaac", "6rd", "track6", "6to4"]
        - name: ipaddr
          in: body
          description: Interface's static IPv4 address. Required if `type` is set to `staticv4`.
          schema:
            type: string
        - name: subnet
          in: body
          description: Interface's static IPv4 address's subnet bitmask. Required if `type` is set to `staticv4`.
          schema:
            type: integer
            minimum: 1
            maximum: 32
        - name: gateway
          in: body
          description: Name of upstream IPv4 gateway for this interface. This is only necessary on WAN/UPLINK interfaces.
          example: "WANGW_V4"
          schema:
            type: string
        - name: ipaddrv6
          in: body
          description: Interface's static IPv6 address. Required if `type6` is set to `staticv6`.
          schema:
            type: string
        - name: subnetv6
          in: body
          description: Interface's static IPv6 address's subnet bitmask. Required if `type6` is set to `staticv6`.
          schema:
            type: string
        - name: gatewayv6
          in: body
          example: "WANGW_V6"
          schema:
            type: string
          description: >-
            Name of upstream IPv6 gateway for this interface. This is only necessary for WAN/UPLINK interfaces. This
            parameter is only available when `type6` is set to `staticv6`.
        - name: ipv6usev4iface
          in: body
          schema:
            type: boolean
            default: false
          description: Allow IPv6 to use IPv4 uplink connection.
        - name: dhcphostname
          in: body
          schema:
            type: string
          description: Assign IPv4 DHCP hostname. This parameter is only available when `type` is set to `dhcp`.
        - name: dhcprejectfrom
          in: body
          schema:
            type: array
            items:
              type: string
          description: >-
            Assign IPv4 DHCP rejected servers by IP. This parameter is only available when `type` is set to `dhcp`.
        - name: alias-address
          in: body
          schema:
            type: string
          description: >-
            Set the IPv4 DHCP address alias. The value in this field is used as a fixed alias IPv4 address by the DHCP 
            client. This parameter is only available when `type` is set to `dhcp`.
        - name: alias-subnet
          in: body
          description: Set the IPv4 DHCP address aliases subnet. This parameter is only available when `type` is set to `dhcp`.
          schema:
            type: integer
            minimum: 1
            maximum: 32
        - name: adv_dhcp_pt_timeout
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Set the IPv4 DHCP protocol timeout interval. Must be numeric value
            greater than 1. This parameter is only available when `type` is set to `dhcp`.
        - name: adv_dhcp_pt_retry
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Set the IPv4 DHCP protocol retry interval. Must be numeric value
            greater than 1. This parameter is only available when `type` is set to `dhcp`.
        - name: adv_dhcp_pt_select_timeout
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Set the IPv4 DHCP protocol select timeout interval. Must be numeric
            value greater than 0. This parameter is only available when `type` is set to `dhcp`.
        - name: adv_dhcp_pt_reboot
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Set the IPv4 DHCP protocol reboot interval. Must be numeric value
            greater than 1. This parameter is only available when `type` is set to `dhcp`.
        - name: adv_dhcp_pt_backoff_cutoff
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Set the IPv4 DHCP protocol backoff cutoff interval. Must be numeric
            value greater than 1. This parameter is only available when `type` is set to `dhcp`.
        - name: adv_dhcp_pt_initial_interval
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Set the IPv4 DHCP protocol initial interval. Must be numeric value
            greater than 1. This parameter is only available when `type` is set to `dhcp`.
        - name: adv_dhcp_config_advanced
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Enable the IPv4 DHCP advanced configuration options. This enables
            the DHCP options: `adv_dhcp_send_options`, `adv_dhcp_request_options`, `adv_dhcp_required_options`,
            `adv_dhcp_option_modifiers`. This parameter is only available when `type` is set to `dhcp`.
        - name: adv_dhcp_send_options
          in: body
          description: Set a custom IPv4 send option. This parameter is only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced` is set to `true`.
          schema:
            type: string
        - name: adv_dhcp_request_options
          in: body
          description: Set a custom IPv4 request option. This parameter is only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced` is set to `true`.
          schema:
            type: string
        - name: adv_dhcp_required_options
          in: body
          description: Set a custom IPv4 required option. This parameter is only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced` is set to `true`.
          schema:
            type: string
        - name: adv_dhcp_option_modifiers
          in: body
          description: Set a custom IPv4 option modifier. This parameter is only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced` is set to `true`.
          schema:
            type: string
        - name: adv_dhcp_config_file_override
          in: body
          description: Enable local DHCP configuration file override. This parameter is only available when `type` is set to `dhcp`.
          schema:
            type: boolean
            default: False
        - name: adv_dhcp_config_file_override_file
          in: body
          schema:
            type: string
          description: >-
            Set the custom DHCP configuration file's absolute path. This file
            must exist beforehand. This parameter is only available when `type` is set to `dhcp` and 
            `adv_dhcp_config_file_override` is set to `true`.
        - name: dhcpvlanenable
          in: body
          description: Enable DHCP VLAN prioritization. This parameter is only available when `type` is set to `dhcp`.
          schema:
            type: boolean
            default: false
        - name: dhcpcvpt
          in: body
          schema:
            type: integer
            enum: [0, 1, 2, 3, 4, 5, 6, 7]
          description: Set the DHCP VLAN priority. This parameter is only available when `type` is set to `dhcp` and `dhcpvlanenable` is set to `true`.
        - name: gateway-6rd
          in: body
          schema:
            type: string
          description: >-
            Set the 6RD interface IPv4 gateway address. This parameter is only required when
            `type6` is set to `6rd`
        - name: prefix-6rd
          in: body
          schema:
            type: string
          description: >-
            Set the 6RD IPv6 prefix assigned by the ISP. This parameter is only required when
            `type6` is set to `6rd`
        - name: prefix-6rd-v4plen
          in: body
          schema:
            type: integer
            minimum: 0
            maximum: 32
            default: 0
          description: >-
            Set the 6RD IPv4 prefix length. This is typically assigned by the
            ISP. This parameter is only available when `type6` is set to `6rd`.
        - name: track6-interface
          in: body
          schema:
            type: string
          description: >-
            Set the Track6 dynamic IPv6 interface. This must be a dynamically
            configured IPv6 interface. You may specify either the interface's
            descriptive name, the pfSense ID (wan, lan, optx), or the physical
            interface id (e.g. igb0). This parameter is only required with `type6` is set to
            `track6`
        - name: track6-prefix-id-hex
          in: body
          schema:
            type: integer
            default: 0
          description: >-
            Set the IPv6 prefix ID. The value in this field is the (Delegated)
            IPv6 prefix ID. This determines the configurable network ID based on
            the dynamic IPv6 connection. The default value is 0. This parameter is only available
            when `type6` is set to `track6`
        - name: blockpriv
          description: Block RFC1918 traffic from routing over this interface.
          in: body
          schema:
            type: boolean
            default: false
        - name: blockbogons
          in: body
          description: Block bogon networks from routing over this interface.
          schema:
            type: boolean
            default: false
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this interface to be applied
            immediately, or simply written to the configuration to be applied
            later. Typically, if you are creating multiple interfaces at once it
            Is best to set this to false and apply the changes afterwards using
            the `/api/v1/interface/apply` endpoint. Otherwise, If you are only
            creating a single interface, you may set this true to apply it
            immediately.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Interface
      summary: Delete interface
      description: >-
        Delete an existing interface. __Note: interface deletions will be
        applied immediately, there is no need to apply interface changes
        afterwards__<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-interfaces-assignnetworkports`]
      parameters:
        - name: if
          in: body
          required: true
          schema:
            type: string
          description: >-
            Interface ID of interface to delete. You may specify either the
            interface's descriptive name, the pfSense ID (wan, lan, optx), or
            the physical interface id (e.g. igb0).
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/alias/entry:
    post:
      tags:
        - Firewall > Alias > Entry
      summary: Add firewall alias entries
      description: >-
        Add new entries to an existing firewall alias.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-alias-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: RFC1918
                address:
                  - 10.0.0.0/8
                  - 172.16.0.0/12
                  - 192.168.0.0/16
                detail:
                  - Class A
                  - Class B
                  - Class C
      parameters:
        - name: name
          in: body
          required: true
          schema:
            type: string
          description: Name of alias to add new address values to.
        - name: address
          in: body
          description: Host, network or port values to add to the alias.
          example: ["example.com", "127.0.0.1"]
          schema:
            type: array
            default: []
            items:
              type: string
        - name: detail
          in: body
          example: ["FQDN for example.com", "IP of localhost"]
          schema:
            type: array
            default: []
            items:
              type: string
          description: >-
            Descriptions for the `address` values. Descriptions must match the
            order the that they are specified in the `address` array. If you pass in less
            `detail` values than `address` values, a default auto-created detail
            will be applied to the remaining values.
        - name: apply
          in: body
          schema:
            type: boolean
            default: true
          description: >-
            Specify whether or not you would like this alias change to be applied
            immediately, or simply written to the configuration to be applied
            later. When modifying multiple aliases it is best to set this to 
            false and apply the changes afterwards using the `/api/v1/firewall/apply` 
            endpoint. 

            _Note: currently this defaults to always reload the firewall filter
            after in order to remain backwards compatible with previous
            releases, this will be changed to not reload the filter by default
            in a future release._
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Firewall > Alias > Entry
      summary: Remove firewall alias entries
      description: >-
        Delete existing entries from an existing firewall alias.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-alias-edit`]
      parameters:
        - name: name
          in: body
          required: true
          schema:
            type: string
          description: Name of alias to delete address values from.
        - name: address
          in: body
          description: Host, network or port values to remove from the alias.
          example: ["example.com", "127.0.0.1"]
          schema:
            type: array
            default: []
            items:
              type: string
        - name: apply
          in: body
          schema:
            type: boolean
            default: true
          description: >-
            Specify whether or not you would like this alias change to be applied
            immediately, or simply written to the configuration to be applied
            later. When modifying multiple aliases it is best to set this to 
            false and apply the changes afterwards using the `/api/v1/firewall/apply` 
            endpoint. 
            
            _Note: currently this defaults to always reload the firewall filter
            after in order to remain backwards compatible with previous
            releases, this will be changed to not reload the filter by default
            in a future release._
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/alias:
    get:
      tags:
        - Firewall > Alias
      summary: Read firewall aliases
      description: >-
        Read existing firewall aliases.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-aliases`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - Firewall > Alias
      summary: Create firewall alias
      description: >-
        Add a new host, network or port firewall alias.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-alias-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: RFC1918
                type: network
                descr: Networks reserved in RFC1918
                address:
                  - 10.0.0.0/8
                  - 172.16.0.0/12
                  - 192.168.0.0/24
                detail:
                  - Class A
                  - Class B
                  - Class C
      parameters:
        - name: name
          in: body
          required: true
          schema:
            type: string
          description: >-
            Name of the new alias. _Only alpha-numeric and underscore characters are
            allowed, other characters will be replaced._
        - name: type
          in: body
          description: Type of alias.
          required: true
          schema:
            type: string
            enum: ["host", "network", "port"]
        - name: descr
          in: body
          description: Description of alias.
          schema:
            type: string
            default: ""
        - name: address
          in: body
          description: Host, network or port values to add to the alias.
          required: true
          example: ["example.com", "127.0.0.1"]
          schema:
            type: array
            default: []
            items:
              type: string
        - name: detail
          in: body
          example: ["FQDN for example.com", "IP of localhost"]
          schema:
            type: array
            default: []
            items:
              type: string
          description: >-
            Descriptions for the `address` values. Descriptions must match the
            order the that they are specified in the `address` array. If you pass in less
            `detail` values than `address` values, a default auto-created detail
            will be applied to the remaining values.
        - name: apply
          in: body
          schema:
            type: boolean
            default: true
          description: >-
            Specify whether or not you would like this alias to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are creating multiple aliases at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.

            _Note: currently this defaults to always reload the firewall filter
            after in order to remain backwards compatible with previous
            releases, this will be changed to not reload the filter by default
            in a future release._
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Firewall > Alias
      summary: Update firewall alias
      description: >-
        Modify an existing firewall alias.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-alias-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: RFC1918
                name: UPDATED_RFC1918
                type: network
                descr: Example alias for RFC1918 reserved address space
                address:
                  - 192.168.0.0/16
                  - 172.16.0.0/12
                  - 10.0.0.0/8
                detail:
                  - Class C
                  - Class B
                  - Class A
      parameters:
        - name: id
          in: body
          description: Name of the existing alias to update.
          required: true
          schema:
            type: string
        - name: name
          in: body
          schema:
            type: string
          description: >-
            New name of the alias. _Only alpha-numeric and underscore characters are
            allowed, other characters will be replaced._
        - name: type
          in: body
          description: Type of alias.
          schema:
            type: string
            enum: ["host", "network", "port"]
        - name: descr
          in: body
          description: Description of alias.
          schema:
            type: string
        - name: address
          in: body
          description: Host, network or port values to add to the alias. Existing values will be overwritten.
          example: ["example.com", "127.0.0.1"]
          schema:
            type: array
            items:
              type: string
        - name: detail
          in: body
          example: ["FQDN for example.com", "IP of localhost"]
          schema:
            type: array
            items:
              type: string
          description: >-
            Descriptions for the `address` values. Descriptions must match the
            order the that they are specified in the `address` array. If you pass in less
            `detail` values than `address` values, a default auto-created detail
            will be applied to the remaining values. Existing values will be overwritten.
        - name: apply
          in: body
          schema:
            type: boolean
            default: true
          description: >-
            Specify whether or not you would like this alias to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple aliases at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.

            _Note: currently this defaults to always reload the firewall filter
            after in order to remain backwards compatible with previous
            releases, this will be changed to not reload the filter by default
            in a future release._
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Firewall > Alias
      summary: Delete firewall alias
      description: >-
        Delete an existing alias.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-alias-edit`]
      parameters:
        - name: id
          in: body
          description: Name of alias to delete. This alias cannot be in use elsewhere in configuration.
          required: true
          schema:
            type: string
        - name: apply
          in: body
          schema:
            type: boolean
            default: true
          description: >-
            Specify whether or not you would like this alias to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are creating modifying multiple aliases at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.

            _Note: currently this defaults to always reload the firewall filter
            after in order to remain backwards compatible with previous
            releases, this will be changed to not reload the filter by default
            in a future release._
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/rule/flush:
    delete:
      tags:
        - Firewall > Rule > Flush
      summary: Delete all firewall rules
      description: >-
        Deletes all existing firewall rules. This is useful for scripts that
        need to setup the firewall rules from scratch.<br><br>_Note: this
        endpoint will not reload the firewall filter automatically, you must
        make another API call to the /api/v1/firewall/apply endpoint to do so.
        Ensure firewall rules are created before reloading the filter to prevent
        lockout!_.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-rules-edit`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/rule/sort:
    put:
      tags:
        - Firewall > Rule > Sort
      summary: Sort existing firewall rules
      description: >-
        Sorts firewall rules based on specified criteria. Use caution if
        sorting firewall rules when block rules are present.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-rules`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                field: descr
                option: descend
                dry_run: true
      parameters:
        - name: field
          in: body
          required: true
          schema:
            type: string
          description: >-
            Specify the firewall rule field to sort by. This field must be
            present on at least one firewall rule for any sorting to occur. In
            most cases, this will be set to `descr` to sort firewall rules by
            their descriptions.
        - name: option
          in: body
          schema:
            type: string
            default: "ascend"
            enum: ["ascend", "descend", "natural", "numeric", "string"]
          description: >-
            Specify sorting option to use when sorting rules. See
            [https://www.php.net/manual/en/function.array-multisort.php](https://www.php.net/manual/en/function.array-multisort.php) for more
            information.
        - name: dry_run
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not the API should write the requested sorting to
            configuration. If `true`, the API will not write the sorted
            configuration, only return a representation of what the sort will
            look like. This is helpful when you are unsure if a particular sort
            will cause issues. If `false`, the sorted firewall rules will be
            written to configuration.
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not the firewall filter should be reloaded after
            sorting. If `true`, the firewall filter will be immediately reloaded
            after sorting. If `false`, the sorted configuration will be written
            but not applied and a separate call to /api/v1/firewall/apply will
            be needed to apply changes. This field has no effect when `dry_run`
            is set to `true`.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/rule:
    get:
      tags:
        - Firewall > Rule
      summary: Read existing firewall rules.
      description: >-
        Read firewall rules.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-rules`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - Firewall > Rule
      summary: Create firewall rule
      description: >-
        Add a new firewall rule.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-rules-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                type: block
                interface: wan
                ipprotocol: inet
                protocol: tcp/udp
                src: 172.16.209.138
                srcport: any
                dst: em0ip
                dstport: 443
                descr: Example block rule
                top: true
      parameters:
        - name: type
          in: body
          description: Firewall rule type.
          required: true
          schema:
            type: string
            enum: ["pass", "block", "reject"]
        - name: interface
          in: body
          required: true
          schema:
            type: string
          description: >-
            Interface this rule will apply to. You may specify either the interface's descriptive name, the pfSense 
            interface ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0).
        - name: ipprotocol
          in: body
          description: IP protocol(s) this rule will apply to.
          required: true
          schema:
            type: string
            enum: ["inet", "inet6", "inet46"]
        - name: protocol
          in: body
          description: Transfer protocol this rule will apply to.
          required: true
          schema:
            type: string
            enum: [
              "any", "tcp", "udp", "tcp/udp", "icmp", "esp", "ah",
              "gre", "ipv6", "igmp", "pim", "ospf", "carp", "pfsync"
            ]
        - name: icmptype
          in: body
          schema:
            type: array
            items:
              type: string
              enum: [
                "althost", "dataconv", "echorep", "echoreq", "inforep", "inforeq", "ipv6-here", "ipv6-where", "maskrep",
                "maskreq", "mobredir", "mobregrep", "mobregreq", "paramprob", "photuris", "redir", "routeradv",
                "routersol", "skip", "squench", "timerep", "timereq", "timex", "trace", "unreach"
              ]
          description: >-
            ICMP subtypes of the firewall rule. This parameter is only available when `protocol` is set to `icmp`.
            If this parameter is not specified, all ICMP subtypes will be assumed.
        - name: src
          in: body
          required: true
          schema:
            type: string
          description: >-
            Source address of the firewall rule. This may be a single
            IP, network CIDR, alias name, or interface. When specifying an
            interface, you may use the real interface ID (e.g. igb0), the descriptive
            interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the 
            interface's assigned address, add `ip` to the end of the interface name otherwise 
            the entire interface's subnet is implied. To negate the context of the source
            address, you may prefix the value with `!`.
        - name: dst
          in: body
          required: true
          schema:
            type: string
          description: >-
            Destination address of the firewall rule. This may be a single
            IP, network CIDR, alias name, or interface. When specifying an
            interface, you may use the real interface ID (e.g. igb0), the descriptive
            interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the 
            interface's assigned address, add `ip` to the end of the interface name otherwise 
            the entire interface's subnet is implied. To negate the context of the destination
            address, you may prefix the value with `!`.
        - name: srcport
          in: body
          schema:
            type: string
          description: >-
            TCP and/or UDP source port, port range or port alias to apply to this rule. You may specify `any` to match
            any source port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
        - name: dstport
          in: body
          schema:
            type: string
          description: >-
            TCP and/or UDP destination port, port range or port alias to apply to this rule. You may specify `any` to match
            any destination port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
        - name: gateway
          in: body
          schema:
            type: string
          description: >-
            Name of an existing gateway traffic will route over upon match. Do not specify this parameter to assume
            the default gateway. The gateway specified must be of the same IP type set in `ipprotocol`.
        - name: sched
          in: body
          description: Firewall schedule to apply to this rule. This must be an existing firewall schedule name.
          schema:
            type: string
        - name: dnpipe
          in: body
          schema:
            type: string
          description: >-
            Traffic shaper limiter (in) queue for this rule. This must
            be an existing traffic shaper limiter or queue. This field is
            required if a `pdnpipe` value is provided.
          example: string
        - name: pdnpipe
          in: body
          schema:
            type: string
          description: >-
            Traffic shaper limiter (out) queue for this rule. This
            must be an existing traffic shaper limiter or queue. This value
            cannot match the `dnpipe` value and must be a child queue if
            `dnpipe` is a child queue, or a parent limiter if `dnpipe` is a
            parent limiter.
        - name: defaultqueue
          in: body
          schema:
            type: string
          description: >-
            Default traffic shaper queue to apply to this rule. This
            must be an existing traffic shaper queue name. This field is
            required when an `ackqueue` value is provided.
        - name: ackqueue
          in: body
          schema:
            type: string
          description: >-
            Acknowledge traffic shaper queue to apply to this rule.
            This must be an existing traffic shaper queue and cannot match the
            `defaultqueue` value.
        - name: disabled
          in: body
          description: Disable the rule.
          schema:
            type: boolean
            default: false
        - name: descr
          in: body
          description: Description for the rule.
          schema:
            type: string
            default: ""
        - name: log
          in: body
          description: Enable logging of traffic matching this rule.
          schema:
            type: boolean
            default: false
        - name: floating
          in: body
          description: Set this rule as a floating firewall rule.
          schema:
            type: boolean
            default: false
        - name: direction
          in: body
          description: Direction of floating firewall rule. This parameter is only avilable when `floating` is set to `true`.
          schema:
            type: string
            enum: ["in", "out", "any"]
            default: "any"
        - name: top
          in: body
          description: Place this firewall rule at the top of the access control list.
          schema:
            type: boolean
            default: false
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this rule to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple rules at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Firewall > Rule
      summary: Update firewall rule
      description: >-
        Update an existing firewall rule.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-rules-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                tracker: 1600981687
                type: pass
                interface: wan
                ipprotocol: inet
                protocol: icmp
                src: 172.16.209.138
                dst: em0ip
                descr: Updated example rule
                top: true
      parameters:
        - name: tracker
          in: body
          description: Tracker ID of the rule to update.
          required: true
          schema:
            type: integer
        - name: type
          in: body
          description: Firewall rule type.
          schema:
            type: string
            enum: ["pass", "block", "reject"]
        - name: interface
          in: body
          schema:
            type: string
          description: >-
            Interface this rule will apply to. You may specify either the interface's descriptive name, the pfSense 
            interface ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0).
        - name: ipprotocol
          in: body
          description: IP protocol(s) this rule will apply to.
          schema:
            type: string
            enum: ["inet", "inet6", "inet46"]
        - name: protocol
          in: body
          description: Transfer protocol this rule will apply to.
          schema:
            type: string
            enum: [
              "any", "tcp", "udp", "tcp/udp", "icmp", "esp", "ah",
              "gre", "ipv6", "igmp", "pim", "ospf", "carp", "pfsync"
            ]
        - name: icmptype
          in: body
          schema:
            type: array
            items:
              type: string
              enum: [
                "althost", "dataconv", "echorep", "echoreq", "inforep", "inforeq", "ipv6-here", "ipv6-where", "maskrep",
                "maskreq", "mobredir", "mobregrep", "mobregreq", "paramprob", "photuris", "redir", "routeradv",
                "routersol", "skip", "squench", "timerep", "timereq", "timex", "trace", "unreach"
              ]
          description: >-
            ICMP subtypes of the firewall rule. This parameter is only available when `protocol` is set to `icmp`.
            If this parameter is not specified, all ICMP subtypes will be assumed.
        - name: src
          in: body
          schema:
            type: string
          description: >-
            Source address of the firewall rule. This may be a single
            IP, network CIDR, alias name, or interface. When specifying an
            interface, you may use the real interface ID (e.g. igb0), the descriptive
            interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the 
            interface's assigned address, add `ip` to the end of the interface name otherwise 
            the entire interface's subnet is implied. To negate the context of the source
            address, you may prefix the value with `!`.
        - name: dst
          in: body
          schema:
            type: string
          description: >-
            Destination address of the firewall rule. This may be a single
            IP, network CIDR, alias name, or interface. When specifying an
            interface, you may use the real interface ID (e.g. igb0), the descriptive
            interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the 
            interface's assigned address, add `ip` to the end of the interface name otherwise 
            the entire interface's subnet is implied. To negate the context of the destination
            address, you may prefix the value with `!`.
        - name: srcport
          in: body
          schema:
            type: string
          description: >-
            TCP and/or UDP source port, port range or port alias to apply to this rule. You may specify `any` to match
            any source port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
        - name: dstport
          in: body
          schema:
            type: string
          description: >-
            TCP and/or UDP destination port, port range or port alias to apply to this rule. You may specify `any` to match
            any destination port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
        - name: gateway
          in: body
          schema:
            type: string
          description: >-
            Name of an existing gateway traffic will route over upon match. Do not specify this parameter to assume
            the default gateway. The gateway specified must be of the same IP type set in `ipprotocol`.
        - name: sched
          in: body
          description: Firewall schedule to apply to this rule. This must be an existing firewall schedule name.
          schema:
            type: string
        - name: dnpipe
          in: body
          schema:
            type: string
          description: >-
            Traffic shaper limiter (in) queue for this rule. This must
            be an existing traffic shaper limiter or queue. This field is
            required if a `pdnpipe` value is provided.
          example: string
        - name: pdnpipe
          in: body
          schema:
            type: string
          description: >-
            Traffic shaper limiter (out) queue for this rule. This
            must be an existing traffic shaper limiter or queue. This value
            cannot match the `dnpipe` value and must be a child queue if
            `dnpipe` is a child queue, or a parent limiter if `dnpipe` is a
            parent limiter.
        - name: defaultqueue
          in: body
          schema:
            type: string
          description: >-
            Default traffic shaper queue to apply to this rule. This
            must be an existing traffic shaper queue name. This field is
            required when an `ackqueue` value is provided.
        - name: ackqueue
          in: body
          schema:
            type: string
          description: >-
            Acknowledge traffic shaper queue to apply to this rule.
            This must be an existing traffic shaper queue and cannot match the
            `defaultqueue` value.
        - name: disabled
          in: body
          description: Disable the rule.
          schema:
            type: boolean
        - name: descr
          in: body
          description: Description for the rule.
          schema:
            type: string
        - name: log
          in: body
          description: Enable logging of traffic matching this rule.
          schema:
            type: boolean
        - name: floating
          in: body
          description: Set this rule as a floating firewall rule.
          schema:
            type: boolean
        - name: direction
          in: body
          description: Direction of floating firewall rule. This parameter is only avilable when `floating` is set to `true`.
          schema:
            type: string
            enum: ["in", "out", "any"]
        - name: top
          in: body
          description: Place this firewall rule at the top of the access control list.
          schema:
            type: boolean
            default: false
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this rule to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple rules at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Firewall > Rule
      summary: Delete firewall rule
      description: >-
        Delete an existing firewall rule.<br>

        _Note: use caution when making this call, removing certain rules can result in
        API/webConfigurator lockout._<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-rules-edit`]
      parameters:
        - name: tracker
          in: body
          required: true
          schema:
            type: integer
          description: Tracker ID of the rule to delete.
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this rule deletion to be
            applied immediately, or simply written to the configuration to be
            applied later. If you are modifying multiple rules at once
            it Is best to set this to false and apply the changes afterwards
            using the `/api/v1/firewall/apply` endpoint.
          example: boolean
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/virtual_ip:
    get:
      tags:
        - Firewall > Virtual IP
      summary: Read virtual IPs
      description: >-
        Read existing virtual IP assignments.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-virtualipaddresses`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - Firewall > Virtual IP
      summary: Create virtual IP
      description: >-
        Add a new virtual IP.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-virtualipaddress-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                mode: carp
                interface: em0
                subnet: 172.16.77.239/32
                password: example_password
                descr: Example virtual IP created via API
      parameters:
        - name: mode
          in: body
          description: Set the virtual IP mode.
          required: true
          schema:
            type: string
            enum: ["ipalias", "carp", "proxyarp", "other"]
        - name: interface
          in: body
          required: true
          schema:
            type: string
          description: >-
            Interface that will be assigned the virtual IP. You may
            specify either the interface's descriptive name, the pfSense ID
            (wan, lan, optx), or the real interface ID (e.g. igb0).
        - name: subnet
          in: body
          description: IP or CIDR of the virtual IP.
          required: true
          schema:
            type: string
        - name: descr
          in: body
          description: Description of the virtual IP.
          schema:
            type: string
            default: ""
        - name: noexpand
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Disable IP expansion for the virtual IP address. This parameter is only available when `type` is set to 
            `proxyarp` or `other`.
        - name: vhid
          in: body
          schema:
            type: integer
            minimum: 0
            maximum: 254
          description: >-
            VHID for the CARP virtual IP. Only available for `carp` mode. Leave unspecified to automatically detect
            the next available VHID. This parameter is only available when `type` is set to `carp`.
        - name: advbase
          in: body
          description: Advertisement base for the CARP virtual IP. This parameter is only available when `type` is set to `carp`.
          schema:
            type: integer
            default: 1
            minimum: 1
            maximum: 254
        - name: advskew
          in: body
          description: Advertisement skew for the new CARP virtual IP. This parameter is only available when `type` is set to `carp`.
          schema:
            type: integer
            default: 0
            minimum: 0
            maximum: 254
        - name: password
          in: body
          description: Password for CARP virtual IP. This parameter is required when `type` is set to `carp`.
          schema:
            type: string
            format: password
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Firewall > Virtual IP
      summary: Update virtual IP
      description: >-
        Update an existing virtual IP.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-virtualipaddress-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: 0
                mode: carp
                interface: em1
                subnet: 172.16.77.252/32
                password: testpass
                descr: Updated API descr
                advskew: 5
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            ID of the virtual IP to update. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: mode
          in: body
          description: Set the virtual IP mode.
          schema:
            type: string
            enum: ["ipalias", "carp", "proxyarp", "other"]
        - name: interface
          in: body
          schema:
            type: string
          description: >-
            Interface that will be assigned the virtual IP. You may
            specify either the interface's descriptive name, the pfSense ID
            (wan, lan, optx), or the real interface ID (e.g. igb0).
        - name: subnet
          in: body
          description: IP or CIDR of the virtual IP.
          schema:
            type: string
        - name: descr
          in: body
          description: Description of the virtual IP.
          schema:
            type: string
        - name: noexpand
          in: body
          schema:
            type: boolean
          description: >-
            Disable IP expansion for the virtual IP address. This parameter is only available when `type` is set to 
            `proxyarp` or `other`.
        - name: vhid
          in: body
          schema:
            type: integer
            minimum: 0
            maximum: 254
          description: >-
            VHID for the CARP virtual IP. Only available for `carp` mode. Leave unspecified to automatically detect
            the next available VHID. This parameter is only available when `type` is set to `carp`.
        - name: advbase
          in: body
          description: Advertisement base for the CARP virtual IP. This parameter is only available when `type` is set to `carp`.
          schema:
            type: integer
            default: 1
            minimum: 1
            maximum: 254
        - name: advskew
          in: body
          description: Advertisement skew for the new CARP virtual IP. This parameter is only available when `type` is set to `carp`.
          schema:
            type: integer
            default: 0
            minimum: 0
            maximum: 254
        - name: password
          in: body
          description: Password for CARP virtual IP. This parameter is required when `type` is set to `carp` and no password is set.
          schema:
            type: string
            format: password
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Firewall > Virtual IP
      summary: Delete virtual IP
      description: >-
        Delete an existing virtual IP.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-virtualipaddress-edit`]
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            ID of the virtual IP to delete. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/nat/port_forward:
    get:
      tags:
        - Firewall > NAT > Port Forward
      summary: Read NAT port forwards
      description: >-
        Read NAT port forward rules.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-nat-portforward`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - Firewall > NAT > Port Forward
      summary: Create NAT port forward
      description: >-
        Create a new NAT port forward rule.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-nat-portforward-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                interface: wan
                protocol: tcp
                src: any
                srcport: '4433'
                dst: wanip
                dstport: '443'
                target: 192.168.1.123
                local-port: '443'
                natreflection: purenat
                descr: Example port forward
                nosync: true
                top: false
      parameters:
        - name: interface
          in: body
          required: true
          schema:
            type: string
          description: >-
            Interface the rule will apply to. You may specify either
            the interface's descriptive name, the pfSense ID (wan, lan, optx),
            or the real interface ID (e.g. igb0).
        - name: protocol
          in: body
          description: Transfer protocol this rule will apply to.
          required: true
          schema:
            type: string
            enum: ["tcp", "udp", "tcp/udp", "icmp", "esp", "ah", "gre", "ipv6", "igmp", "pim", "ospf"]
        - name: src
          in: body
          required: true
          schema:
            type: string
          description: >-
            Source address of the port forward rule. This may be a single
            IP, network CIDR, alias name, or interface. When specifying an
            interface, you may use the real interface ID (e.g. igb0), the descriptive
            interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the 
            interface's assigned address, add `ip` to the end of the interface name otherwise 
            the entire interface's subnet is implied. To negate the context of the source
            address, you may prefix the value with `!`.
        - name: dst
          in: body
          required: true
          schema:
            type: string
          description: >-
            Destination address of the port forward rule. This may be a single
            IP, network CIDR, alias name, or interface. When specifying an
            interface, you may use the real interface ID (e.g. igb0), the descriptive
            interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the 
            interface's assigned address, add `ip` to the end of the interface name otherwise 
            the entire interface's subnet is implied. To negate the context of the destination
            address, you may prefix the value with `!`.
        - name: srcport
          in: body
          schema:
            type: string
          description: >-
            TCP and/or UDP source port, port range or port alias to apply to this rule. You may specify `any` to match
            any source port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
        - name: dstport
          in: body
          schema:
            type: string
          description: >-
            TCP and/or UDP destination port, port range or port alias to apply to this rule. You may specify `any` to match
            any destination port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
        - name: target
          in: body
          description: 'IP address or alias to forward traffic to.'
          required: true
          schema:
            type: string
        - name: local-port
          in: body
          schema:
            type: string
          description: >-
            TCP and/or UDP port, port range, or port alias to forward traffic to on the `target`. This parameter
            is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
        - name: natreflection
          in: body
          description: NAT reflection mode to use for this rule. Leave unspecified to use system default.
          schema:
            type: string
            enum: ["enable", "disable", "purenat"]
        - name: descr
          in: body
          description: Description for the rule.
          schema:
            type: string
            default: ""
        - name: disabled
          in: body
          description: Disable this rule.
          schema:
            type: boolean
            default: false
        - name: nordr
          in: body
          description: Disable redirection for traffic matching this rule.
          schema:
            type: boolean
            default: false
        - name: nosync
          in: body
          description: Prevent this rule from automatically syncing to other CARP members.
          schema:
            type: boolean
            default: false
        - name: top
          in: body
          description: Place this firewall rule at the top of the access control list.
          schema:
            type: boolean
            default: false
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this rule to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple rules at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Firewall > NAT > Port Forward
      summary: Update NAT port forward
      description: >-
        Update an existing port forward rule.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-nat-portforward-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                interface: lan
                protocol: tcp/udp
                src: any
                srcport: '4433'
                dst: lanip
                dstport: '443'
                target: 192.168.1.13
                local-port: '443'
                natreflection: purenat
                descr: Updated example port forward
                nosync: false
                nordr: true
                top: true
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            ID of the port forward rule to update. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: interface
          in: body
          schema:
            type: string
          description: >-
            Interface the rule will apply to. You may specify either
            the interface's descriptive name, the pfSense ID (wan, lan, optx),
            or the real interface ID (e.g. igb0).
        - name: protocol
          in: body
          description: Transfer protocol this rule will apply to.
          schema:
            type: string
            enum: ["tcp", "udp", "tcp/udp", "icmp", "esp", "ah", "gre", "ipv6", "igmp", "pim", "ospf"]
        - name: src
          in: body
          schema:
            type: string
          description: >-
            Source address of the port forward rule. This may be a single
            IP, network CIDR, alias name, or interface. When specifying an
            interface, you may use the real interface ID (e.g. igb0), the descriptive
            interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the 
            interface's assigned address, add `ip` to the end of the interface name otherwise 
            the entire interface's subnet is implied. To negate the context of the source
            address, you may prefix the value with `!`.
        - name: dst
          in: body
          schema:
            type: string
          description: >-
            Destination address of the port forward rule. This may be a single
            IP, network CIDR, alias name, or interface. When specifying an
            interface, you may use the real interface ID (e.g. igb0), the descriptive
            interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the 
            interface's assigned address, add `ip` to the end of the interface name otherwise 
            the entire interface's subnet is implied. To negate the context of the destination
            address, you may prefix the value with `!`.
        - name: srcport
          in: body
          schema:
            type: string
          description: >-
            TCP and/or UDP source port, port range or port alias to apply to this rule. You may specify `any` to match
            any source port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
        - name: dstport
          in: body
          schema:
            type: string
          description: >-
            TCP and/or UDP destination port, port range or port alias to apply to this rule. You may specify `any` to match
            any destination port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
        - name: target
          in: body
          description: 'IP address or alias to forward traffic to.'
          schema:
            type: string
        - name: local-port
          in: body
          schema:
            type: string
          description: >-
            TCP and/or UDP port, port range, or port alias to forward traffic to on the `target`. This parameter
            is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
        - name: natreflection
          in: body
          description: NAT reflection mode to use for this rule.
          schema:
            type: string
            enum: ["enable", "disable", "purenat"]
        - name: descr
          in: body
          description: Description for the rule.
          schema:
            type: string
            default: ""
        - name: disabled
          in: body
          description: Disable this rule.
          schema:
            type: boolean
            default: false
        - name: nordr
          in: body
          description: Disable redirection for traffic matching this rule.
          schema:
            type: boolean
            default: false
        - name: nosync
          in: body
          description: Prevent this rule from automatically syncing to other CARP members.
          schema:
            type: boolean
            default: false
        - name: top
          in: body
          description: Place this firewall rule at the top of the access control list.
          schema:
            type: boolean
            default: false
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this rule to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple rules at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Firewall > NAT > Port Forward
      summary: Delete NAT port forward
      description: >-
        Delete an existing NAT rule by ID.<br>
        _Note: use caution when making this call, removing rules may result in
        API/webConfigurator lockout_<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-nat-portforward-edit`]
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            ID of the port forward rule to update. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this rule to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple rules at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/nat/one_to_one:
    get:
      tags:
        - Firewall > NAT > One-To-One
      summary: Read NAT 1-to-1 mappings
      description: >-
        Read existing 1:1 NAT mappings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-nat-1-1`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - Firewall > NAT > One-To-One
      summary: Create NAT 1-to-1 mapping
      description: >-
        Create a new NAT 1:1 mapping.<br><br>
        
        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-nat-1-1-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                interface: WAN
                src: any
                dst: em0ip
                external: 1.2.3.4
                natreflection: enable
                descr: Example 1:1 NAT entry
                nobinat: true
                top: false
                apply: true
      parameters:
        - name: interface
          in: body
          required: true
          schema:
            type: string
          description: >-
            Interface the mapping will apply to. You may specify
            either the interface's descriptive name, the pfSense ID (wan, lan,
            optx), or the real interface ID (e.g. igb0).
        - name: src
          in: body
          required: true
          schema:
            type: string
          description: >-
            Source address of the mapping. This may be a single
            IP, network CIDR, alias name, or interface. When specifying an
            interface, you may use the real interface ID (e.g. igb0), the descriptive
            interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the 
            interface's assigned address, add `ip` to the end of the interface name otherwise 
            the entire interface's subnet is implied. To negate the context of the source
            address, you may prefix the value with `!`.
        - name: dst
          in: body
          required: true
          schema:
            type: string
          description: >-
            Destination address of the mapping. This may be a single
            IP, network CIDR, alias name, or interface. When specifying an
            interface, you may use the real interface ID (e.g. igb0), the descriptive
            interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the 
            interface's assigned address, add `ip` to the end of the interface name otherwise 
            the entire interface's subnet is implied. To negate the context of the destination
            address, you may prefix the value with `!`.
        - name: external
          in: body
          description: External IPv4 or IPv6 address to map traffic to.
          required: true
          schema:
            type: string
        - name: natreflection
          in: body
          description: NAT reflection mode to use for this rule. Leave unspecified to use system default.
          schema:
            type: string
            enum: ["enable", "disable"]
        - name: descr
          in: body
          schema:
            type: string
            default: ""
          description: Description for the mapping.
        - name: disabled
          in: body
          description: Disable this mapping.
          schema:
            type: boolean
            default: false
        - name: nobinat
          in: body
          schema:
            type: boolean
            default: false
          description: Exclude the address from a later, more general rule.
        - name: top
          in: body
          description: Place this firewall rule at the top of the access control list.
          schema:
            type: boolean
            default: false
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this mapping to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple mappings at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Firewall > NAT > One-To-One
      summary: Update NAT 1-to-1 mapping
      description: >-
        Update an existing NAT 1:1 mapping.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-nat-1-1-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                interface: LAN
                src: 10.0.0.0/24
                dst: '!1.2.3.4'
                external: 4.3.2.1
                natreflection: disable
                descr: Updated example 1:1 NAT entry
                disabled: true
                nobinat: false
                top: true
                apply: false
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            ID of the mapping to update. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: interface
          in: body
          schema:
            type: string
          description: >-
            Interface the mapping will apply to. You may specify
            either the interface's descriptive name, the pfSense ID (wan, lan,
            optx), or the real interface ID (e.g. igb0).
        - name: src
          in: body
          schema:
            type: string
          description: >-
            Source address of the mapping. This may be a single
            IP, network CIDR, alias name, or interface. When specifying an
            interface, you may use the real interface ID (e.g. igb0), the descriptive
            interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the 
            interface's assigned address, add `ip` to the end of the interface name otherwise 
            the entire interface's subnet is implied. To negate the context of the source
            address, you may prefix the value with `!`.
        - name: dst
          in: body
          schema:
            type: string
          description: >-
            Destination address of the mapping. This may be a single
            IP, network CIDR, alias name, or interface. When specifying an
            interface, you may use the real interface ID (e.g. igb0), the descriptive
            interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the 
            interface's assigned address, add `ip` to the end of the interface name otherwise 
            the entire interface's subnet is implied. To negate the context of the destination
            address, you may prefix the value with `!`.
        - name: external
          in: body
          description: External IPv4 or IPv6 address to map traffic to.
          schema:
            type: string
        - name: natreflection
          in: body
          description: NAT reflection mode to use for this rule. Leave unspecified to use system default.
          schema:
            type: string
            enum: ["enable", "disable"]
        - name: descr
          in: body
          schema:
            type: string
          description: Description for the mapping.
        - name: disabled
          in: body
          description: Disable this mapping.
          schema:
            type: boolean
        - name: nobinat
          in: body
          schema:
            type: boolean
          description: Exclude the address from a later, more general rule.
        - name: top
          in: body
          description: Place this firewall rule at the top of the access control list.
          schema:
            type: boolean
            default: false
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this mapping to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple mappings at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Firewall > NAT > One-To-One
      summary: Delete NAT 1-to-1 mapping
      description: >-
        Delete an existing NAT 1:1 mapping by ID.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-nat-1-1-edit`]
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            ID of the mapping to delete. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this deletion to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple mappings at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/nat/outbound/mapping:
    get:
      tags:
        - Firewall > NAT > Outbound > Mapping
      summary: Read outbound NAT mappings
      description: >-
        Read existing outbound NAT mappings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-nat-outbound`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - Firewall > NAT > Outbound > Mapping
      summary: Create outbound NAT mapping
      description: >-
        Create new outbound NAT mapping.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-nat-outbound-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                interface: wan
                protocol: tcp
                src: 192.168.0.0/24
                srcport: any
                dst: any
                dstport: any
                target: 4.3.2.1/29
                poolopts: round-robin
                disabled: false
                descr: Example outbound NAT mapping
      parameters:
        - name: interface
          in: body
          required: true
          schema:
            type: string
          description: >-
            Set which interface the mapping will apply to. You may specify
            either the interface's descriptive name, the pfSense ID (wan, lan,
            optx), or the physical interface id (e.g. igb0).
          example: string
        - name: protocol
          in: body
          description: Transfer protocol the mapping will apply to.
          required: true
          schema:
            type: string
            enum: ["any", "tcp", "udp", "tcp/udp", "icmp", "esp", "ah", "gre", "ipv6", "igmp", "pim", "ospf"]
        - name: src
          in: body
          description: Set the source address of the firewall rule. This must be an IP, CIDR, alias or `any`.
          required: true
          schema:
            type: string
        - name: dst
          in: body
          required: true
          schema:
            type: string
          description: >-
            Destination address of the mapping. This may be a
            single IP, network CIDR, alias name or `any`. To negate the context of
            the  address, you may prefix the address with `!`
        - name: srcport
          in: body
          schema:
            type: string
          description: >-
            TCP and/or UDP source port, port range or port alias to apply to this mapping. You may specify `any` to match
            any source port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
        - name: dstport
          in: body
          schema:
            type: string
          description: >-
            TCP and/or UDP destination port or port range to apply to this mapping. You may specify `any` to match
            any destination port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
        - name: target
          in: body
          required: true
          schema:
            type: string
          description: >-
            External IP to map this traffic to. This may be an IP
            address, IP subnet, alias, or empty string to use the Interface
            address.
        - name: staticnatport
          in: body
          schema:
            type: boolean
            default: false
          description: Enable use of a static NAT port.
        - name: natport
          in: body
          schema:
            type: string
          description: >-
            External TCP and/or UDP source port or range used for remapping the original source port on connections 
            matching the rule.
        - name: descr
          in: body
          description: Description of this mapping.
          schema:
            type: string
            default: ""
        - name: poolopts
          in: body
          schema:
            type: string
            enum: [
              "round-robin", "round-robin sticky-address", "random", "random sticky-address", "source-hash", "bitmask"
            ]
          description: >-
            Outbound NAT pool option for load balancing. This is only applicable if the `target` is a subnet that 
            contains more than 1 IP address.
        - name: source_hash_key
          in: body
          schema:
            type: string
          description: >-
            Custom key hash to use when utilizing the `source-hash` NAT
            pool option. Value must start with `0x` following a 32 digit hex
            value. If this field is not specified, a random key hash will be
            generated. This parameter is only available when `poolopts` is set to
            `source-hash`.
        - name: disabled
          in: body
          description: Disable this mapping.
          schema:
            type: boolean
            default: false
        - name: nonat
          in: body
          description: Do not NAT traffic matching this mapping.
          schema:
            type: boolean
            default: false
        - name: top
          in: body
          description: Place this mapping at the top of the access control list.
          schema:
            type: boolean
            default: false
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this mapping to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple mappings at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Firewall > NAT > Outbound > Mapping
      summary: Update outbound NAT mapping
      description: >-
        Update an existing outbound NAT mapping.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-nat-outbound-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                interface: WAN
                protocol: tcp
                src: any
                srcport: '433'
                dst: em0ip
                dstport: '443'
                target: 192.168.1.123
                local-port: '443'
                natreflection: purenat
                descr: Forward pb to lc
                nosync: true
                top: false
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            ID of the outbound NAT mapping to update. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: interface
          in: body
          schema:
            type: string
          description: >-
            Set which interface the mapping will apply to. You may specify
            either the interface's descriptive name, the pfSense ID (wan, lan,
            optx), or the physical interface id (e.g. igb0).
          example: string
        - name: protocol
          in: body
          description: Transfer protocol the mapping will apply to.
          schema:
            type: string
            enum: ["any", "tcp", "udp", "tcp/udp", "icmp", "esp", "ah", "gre", "ipv6", "igmp", "pim", "ospf"]
        - name: src
          in: body
          description: Set the source address of the firewall rule. This must be an IP, CIDR, alias or `any`.
          schema:
            type: string
        - name: dst
          in: body
          schema:
            type: string
          description: >-
            Destination address of the mapping. This may be a
            single IP, network CIDR, alias name or `any`. To negate the context of
            the  address, you may prefix the address with `!`
        - name: srcport
          in: body
          schema:
            type: string
          description: >-
            TCP and/or UDP source port, port range or port alias to apply to this mapping. You may specify `any` to match
            any source port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
        - name: dstport
          in: body
          schema:
            type: string
          description: >-
            TCP and/or UDP destination port or port range to apply to this mapping. You may specify `any` to match
            any destination port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
        - name: target
          in: body
          schema:
            type: string
          description: >-
            External IP to map this traffic to. This may be an IP
            address, IP subnet, alias, or empty string to use the Interface
            address.
        - name: staticnatport
          in: body
          schema:
            type: boolean
            default: false
          description: Enable use of a static NAT port.
        - name: natport
          in: body
          schema:
            type: string
          description: >-
            External TCP and/or UDP source port or range used for remapping the original source port on connections 
            matching the rule.
        - name: descr
          in: body
          description: Description of this mapping.
          schema:
            type: string
            default: ""
        - name: poolopts
          in: body
          schema:
            type: string
            enum: [
              "round-robin", "round-robin sticky-address", "random", "random sticky-address", "source-hash", "bitmask"
            ]
          description: >-
            Outbound NAT pool option for load balancing. This is only applicable if the `target` is a subnet that 
            contains more than 1 IP address.
        - name: source_hash_key
          in: body
          schema:
            type: string
          description: >-
            Custom key hash to use when utilizing the `source-hash` NAT
            pool option. Value must start with `0x` following a 32 digit hex
            value. If this field is not specified, a random key hash will be
            generated. This parameter is only available when `poolopts` is set to
            `source-hash`.
        - name: disabled
          in: body
          description: Disable this mapping.
          schema:
            type: boolean
            default: false
        - name: nonat
          in: body
          description: Do not NAT traffic matching this mapping.
          schema:
            type: boolean
            default: false
        - name: top
          in: body
          description: Place this mapping at the top of the access control list.
          schema:
            type: boolean
            default: false
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this mapping to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple mappings at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Firewall > NAT > Outbound > Mapping
      summary: Delete outbound NAT mapping
      description: >-
        Delete an existing outbound NAT mapping.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-nat-outbound-edit`]
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            ID of the outbound NAT mapping to delete. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this change to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple mappings at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/nat/outbound:
    get:
      tags:
        - Firewall > NAT > Outbound
      summary: Read outbound NAT settings
      description: >-
        Read outbound NAT settings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-nat-outbound`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Firewall > NAT > Outbound
      summary: Update outbound NAT settings
      description: >-
        Update outbound NAT settings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-nat-outbound`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      parameters:
        - name: mode
          in: body
          description: Set outbound NAT mode.
          schema:
            type: string
            enum: ["automatic", "hybrid", "advanced"]
        - name: apply
          in: body
          schema:
            type: boolean
            default: true
          description: >-
            Specify whether or not you would like this change to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple mappings at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.

            _Note: currently this defaults to always reload the firewall filter
            after in order to remain backwards compatible with previous
            releases, this will be changed to not reload the filter by default
            in a future release._
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/states/size:
    get:
      tags:
        - Firewall > States > Size
      summary: Read firewall state size
      description: >-
        Read information about the firewall state table's current, default and maximum sizes.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-diagnostics-statessummary`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Firewall > States > Size
      summary: Update firewall state size
      description: >-
        Modify the maximum number of firewall state table entries allowed by the
        system.<br>_Note: use caution when making this call, setting the maximum
        state table size to a value lower than the current number of firewall
        state entries WILL choke the system._<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-advanced-firewall`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                maximumstates: 2000
      parameters:
        - name: maximumstates
          in: body
          required: true
          schema:
            type: string
          description: >-
            Set the maximum number of firewall state entries. Specify a numeric value
            with a minimum of `10`, or the string `default` to revert to the system default size.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/states:
    get:
      tags:
        - Firewall > States
      summary: Read firewall states
      description: >-
        Read the current firewall states table.<br>
        _Note: excessively large states tables may cause API calls to this endpoint to timeout._<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-diagnostics-statessummary`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Firewall > States
      summary: Delete firewall states
      description: >-
        Delete existing firewall states.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-diagnostics-showstates`]
      parameters:
        - name: source
          in: body
          schema:
            type: string
          description: >-
            Source IP address or CIDR of the firewall states to
            kill. This parameter is required unless `reset` is set to `true`.
        - name: destination
          in: body
          schema:
            type: string
          description: >-
            Destination IP address or CIDR of the firewall states to
            kill. This field has no effect when `reset` is set to `true`.
        - name: reset
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Reset the entire firewall states table instead of specific states. If
            `true`, all firewall states will be killed and the `source` and
            `destination` fields will have no effect. Defaults to `false`.
            _Note: setting this field to `true` when the `async`
            field is set to `false` OR the `sleep` field is set too low may
            prevent the API from sending a response._
        - name: async
          in: body
          schema:
            type: boolean
            default: true
          description: >-
            Kill states in the background. In most cases, this is required
            to prevent the state that allows the API to respond from being killed prematurely.
        - name: sleep
          in: body
          schema:
            type: integer
            minimum: 0
            maximum: 300
            default: 3
          description: >-
            Amount of time (in seconds) to wait before killing the targeted
            firewall states. Only applicable when `async` is set to `true`.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/apply:
    post:
      tags:
        - Firewall > Apply
      summary: Apply firewall changes
      description: >-
        Apply pending firewall changes. This will reload all firewall items.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-rules`, `page-firewall-rules-edit`,
        `page-firewall-aliases`, `page-firewall-alias-edit`,
        `page-firewall-nat-1-1`, `page-firewall-nat-1-1-edit`,
        `page-firewall-nat-outbound`, `page-firewall-nat-outbound-edit`,
        `page-firewall-nat-portforward`, `page-firewall-nat-portforward-edit`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/traffic_shaper/queue:
    post:
      tags:
        - Firewall > Traffic Shaper > Queue
      summary: Create traffic shapper queue
      description: >-
        Add a queue to an existing traffic shaper interface.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-trafficshaper-queues`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                interface: lan
                name: examplequeue
                bandwidthtype: Gb
                bandwidth: 1
                enabled: false
                qlimit: 1000
                apply: true
      parameters:
        - name: interface
          in: body
          required: true
          schema:
            type: string
          description: >-
            Parent interface to create the traffic shaper queue for.
            You may specify either the interface's descriptive name, the pfSense
            ID (wan, lan, optx), or the real interface ID (e.g. igb0).
        - name: name
          in: body
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 15
          description: >-
            Name for this queue. This name's length must be 15 characters or
            less, and unique from all other queues on the parent interface.
        - name: priority
          in: body
          schema:
            type: integer
            default: 1
            minimum: 1
          description: >-
            Priority of this queue. This parameter is only available when the parent's `scheduler` value is set to
            `FAIRQ`, `CBQ` or `PRIQ`.
        - name: description
          in: body
          schema:
            type: string
          description: Description for this queue.
        - name: enabled
          in: body
          schema:
            type: boolean
            default: true
          description: >-
            Enable this traffic queue.
        - name: default
          in: body
          description: Set queue as the default for the parent interface.
          schema:
            type: boolean
            default: false
        - name: red
          in: body
          description: Set the Random Early Detection option for this queue.
          schema:
            type: boolean
            default: false
        - name: rio
          in: body
          description: Set the Random Early Detection In and Out option for this queue.
          schema:
            type: boolean
            default: false
        - name: ecn
          in: body
          description: Set the Explicit Congestion Notification option for this queue.
          schema:
            type: boolean
            default: false
        - name: codel
          in: body
          description: Set the Codel Active Queue option for this queue.
          schema:
            type: boolean
            default: false
        - name: qlimit
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Specify the queue limit value for this queue. If set, this must be a
            value of `1` or greater. Do not specify this parameter to assume no limits.
        - name: bandwidthtype
          in: body
          schema:
            type: string
            default: "Mb"
            enum: ["%", "b", "Kb", "Mb", "Gb"]
          description: >-
            Bandwidth type to use when setting the `bandwidth` value.
            Choices are `%` for percentage based bandwidth, `b` for bits, `Kb`
            for kilobits, `Mb` for megabits, and `Gb` for gigabits. This parameter
            is only available when the parent traffic shaper's `scheduler` value is 
            set to `HFSC`, `CBQ`, or `FAIRQ`.
        - name: bandwidth
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Bandwidth limits of this traffic shaper. This must be a numeric
            value of `1` or greater. If you have set the `bandwidthtype` to `%`,
            this value must be `100` or less. This parameter is only available
            when the parent traffic shaper's `scheduler` value is set to `HFSC`, 
            `CBQ`, or `FAIRQ`. The sum of this value and all other child queues 
            must be less than the parent traffic shaper's `bandwidth` value.
        - name: buckets
          in: body
          schema:
            type: string
          description: >-
            Bandwidth buckets value for this queue. This parameter is only
            available when the parent traffic shaper's `scheduler` value is set to `FAIRQ`.
        - name: hogs
          in: body
          schema:
            type: string
          description: >-
            Bandwidth hogs value for this queue. This parameter is only
            available when the parent traffic shaper's `scheduler` value is set to `FAIRQ`.
        - name: borrow
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Allow queue to borrow bandwidth from other queues when available.
            This parameter is only available when the parent traffic shaper's 
            `scheduler` value is set to `CBQ`.
        - name: upperlimit
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Enable the upperlimit (max bandwidth) option for this queue.
            This parameter is only available when the parent's traffic 
            shaper's `scheduler` value is set to `HFSC`.
        - name: upperlimit1
          in: body
          schema:
            type: string
          description: >-
            First upper limit value (m1). This value must be a bandwidth
            formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter
            is only available when the parent traffic shaper's `scheduler`
            value is set to `HFSC` and `upperlimit` value is set to `true`.
        - name: upperlimit2
          in: body
          schema:
            type: integer
          description: >-
            Second upper limit value (d). This value must be an integer of
            `1` or greater. This value is required if an `upperlimit1` value 
            was specified. This parameter is only available when the parent 
            traffic shaper's `scheduler` value is set to `HFSC` and `upperlimit` 
            value is set to `true`.
        - name: upperlimit3
          in: body
          schema:
            type: string
          description: >-
            Third upper limit value (m2). This value must be a bandwidth
            formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter 
            is only available when the parent traffic shaper's `scheduler` 
            value is set to `HFSC` and `upperlimit` value is set to `true`. 
            This parameter is required if the`upperlimit` value is set to `true`.
        - name: linkshare
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Enable the linkshare (shared bandwidth) option for this queue. 
            This parameter is only available when the parent traffic shaper's 
            `scheduler` value is set to `HFSC`.
        - name: linkshare1
          in: body
          schema:
            type: string
          description: >-
            First linkshare value (m1). This value must be a bandwidth
            formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter is
            only available when the parent traffic shaper's `scheduler` value
            is set to `HFSC` and the `linkshare` value is set to `true`.
        - name: linkshare2
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Second linkshare value (d). This value must be an integer of 1
            or greater. This value is required if a `linkshare1` value was
            specified. This parameter is only available when the parent traffic
            shaper's `scheduler` value is set to `HFSC` and the `linkshare` value
            is set to `true`.
        - name: linkshare3
          in: body
          schema:
            type: string
          description: >-
            Third linkshare value (m2). This value must be a bandwidth
            formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter is only
            available when the parent traffic shaper's `scheduler` is set to `HFSC`
            and the `linkshare` value is enabled. This parameter is required if
            the`linkshare` value is enabled.
        - name: realtime
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Enable the realtime (minimum bandwidth) option for this queue. This
            parameter is only available when parent traffic shaper's `scheduler` 
            is set to `HFSC`.
        - name: realtime1
          in: body
          schema:
            type: string
          description: >-
            First realtime value (m1). This value must be a bandwidth
            formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter is
            only available when the parent traffic shaper's `scheduler` is 
            set to `HFSC` and the `realtime` value is set to `true`.
        - name: realtime2
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Second realtime value (d). This value must be an integer of 1
            or greater. This parameter is required if a `realtime1` value 
            was specified. This parameter is only available when the parent 
            traffic shaper's `scheduler` value is set to `HFSC` and the `realtime`
            value is set to `true`.
        - name: realtime3
          in: body
          schema:
            type: string
          description: >-
            Third realtime value (m2). This value must be a bandwidth
            formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter is 
            only required when the parent traffic shaper's `scheduler` value
            is set to `HFSC` and the `realtime` value is set to `true`.
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this queue to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple firewall items at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Firewall > Traffic Shaper > Queue
      summary: Delete traffic shaper queue
      description: >-
        Delete a queue from an existing traffic shaper interface.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-trafficshaper-queues`]
      parameters:
        - name: interface
          in: body
          required: true
          schema:
            type: string
          description: >-
            Parent interface to delete the traffic shaper queue
            from. You may specify either the interface's descriptive name, the
            pfSense ID (wan, lan, optx), or the real interface ID (e.g.
            igb0).
        - name: name
          in: body
          required: true
          schema:
            type: string
          description: >-
            Name of the queue to delete. This must be an existing
            queue name configured on the parent traffic shaper.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/traffic_shaper/limiter/bandwidth:
    post:
      tags:
        - Firewall > Traffic Shaper > Limiter > Bandwidth
      summary: Create limiter bandwidth
      description: >-
        Create a limiter bandwidth setting.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-trafficshaper-limiter`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Example_Limiter
                bw: 100
                bwscale: Mb
                bwsched: Example_Schedule
      parameters:
        - name: name
          in: body
          description: Name of the existing parent limiter to add this bandwidth object to.
          required: true
          schema:
            type: string
        - name: bw
          in: body
          description: Amount of bandwidth allotted to the parent limiter.
          required: true
          schema:
            type: integer
            minimum: 1
        - name: bwscale
          in: body
          description: Bandwidth scale type.
          required: true
          schema:
            type: string
            enum: ["b", "Kb", "Mb"]
        - name: bwsched
          in: body
          description: Assign a schedule for this bandwidth setting. This must be an existing firewall schedule name.
          schema:
            type: string
            default: none
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this change to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple firewall items at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Firewall > Traffic Shaper > Limiter > Bandwidth
      summary: Delete limiter bandwidth
      description: >-
        Delete a limiter bandwidth setting.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-trafficshaper-limiter`]
      parameters:
        - name: name
          in: body
          description: Name of the parent limiter to delete this bandwidth object from.
          required: true
          schema:
            type: string
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            Specify the ID of the bandwidth object to delete. The ID will be the
            array index of the object to delete within the limiter's
            bandwith-items array. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this change to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple firewall items at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/traffic_shaper/limiter/queue:
    post:
      tags:
        - Firewall > Traffic Shaper > Limiter > Queue
      summary: Create limiter queue
      description: >-
        Add a new child queue to an existing traffic shaper limiter.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-trafficshaper-limiter`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                limiter: Parent_Limiter
                name: Example_Queue
                mask: srcaddress
                maskbits: 31
                description: E2E test
                aqm: codel
                weight: 1
                plr: 0.01
                buckets: 16
                apply: true
      parameters:
        - name: limiter
          in: body
          description: Name of the parent limiter to add this queue to.
          required: true
          schema:
            type: string
        - name: name
          in: body
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 32
          description: >-
            Name for this limiter queue. This value must only contain
            alphanumerics, underscore and/or hyphens, must be 32 characters or
            less, and must be unique from all other limiters including child
            queues.
        - name: mask
          in: body
          description: Limiter address mask type.
          schema:
            type: string
            default: none
            enum: ["none", "srcaddress", "dstaddress"]
        - name: maskbits
          in: body
          schema:
            type: integer
            default: 32
            minimum: 1
            maximum: 32
          description: >-
            IPv4 subnet bitmask to apply the limiter queue to. This parameter is only available when `mask`
            is set to `srcaddress` or `dstaddress`.
        - name: maskbitsv6
          in: body
          schema:
            type: integer
            default: 128
            minimum: 1
            maximum: 32
          description: >-
            IPv6 subnet bitmask to apply the limiter queue to. This parameter is only available when `mask`
            is set to `srcaddress` or `dstaddress`.
        - name: description
          in: body
          description: Description for this limiter queue.
          schema:
            type: string
        - name: aqm
          in: body
          description: Queue Management Algorithm for this limiter queue to use.
          required: true
          schema:
            type: string
            enum: ["droptail", "codel", "pie", "red", "gred"]
        - name: enabled
          in: body
          description: Enable this limiter queue.
          schema:
            type: boolean
            default: true
        - name: ecn
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Enable Explicit Congestion Notification (ECN). This parameter is only available when `aqm` is set 
            to `codel`, `pie`, `red` or `gred`.
        - name: qlimit
          in: body
          description: Queue limit value for this limiter queue.
          schema:
            type: integer
            minimum: 1
        - name: weight
          in: body
          description: Weight value of this limiter queue.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: plr
          in: body
          description: Packet loss rate value for this limiter queue.
          schema:
            type: number
            format: float
            default: 0
            minimum: 0
            maximum: 1
        - name: buckets
          in: body
          description: Buckets for this limiter queue.
          schema:
            type: integer
            minimum: 16
            maximum: 65535
        - name: param_codel_target
          in: body
          schema:
            type: integer
            default: 5
            minimum: 0
          description: >-
            CoDel target parameter for this limiter queue. This parameter is only available when `aqm` is
            set to `codel`.
        - name: param_codel_interval
          in: body
          schema:
            type: integer
            default: 100
            minimum: 0
          description: >-
            CoDel interval parameter for this limiter queue. This parameter is only available when `aqm` is
            set to `codel`.
        - name: param_pie_target
          in: body
          schema:
            type: integer
            default: 15
            minimum: 0
          description: >-
            PIE target parameter for this limiter queue. This parameter is only available when `aqm` is
            set to `pie`.
        - name: param_pie_tupdate
          in: body
          schema:
            type: integer
            default: 15
            minimum: 0
          description: >-
            Specify the PIE tupdate parameter for this limiter queue. This parameter is only available when `aqm` is
            set to `pie`.
        - name: param_pie_alpha
          in: body
          schema:
            type: integer
            default: 125
            minimum: 0
          description: >-
            PIE alpha parameter for this limiter queue. This parameter is only available when `aqm` is
            set to `pie`.
        - name: param_pie_beta
          in: body
          schema:
            type: integer
            default: 1250
            minimum: 0
          description: >-
            PIE beta parameter for this limiter queue. This parameter is only available when `aqm` is
            set to `pie`.
        - name: param_pie_max_burst
          in: body
          schema:
            type: integer
            default: 150000
            minimum: 0
          description: >-
            PIE max burst parameter for this limiter queue. This parameter is only available when `aqm` is
            set to `pie`.
        - name: param_pie_max_ecnth
          in: body
          schema:
            type: integer
            default: 99
            minimum: 0
          description: >-
            PIE max ecnth parameter for this limiter queue. This parameter is only available when `aqm` is
            set to `pie`.
        - name: param_red_w_q
          in: body
          schema:
            type: integer
            default: 1
            minimum: 1
          description: >-
            RED w_q parameter for this limiter queue. This parameter is only available when `aqm` is
            set to `red`.
        - name: param_red_min_th
          in: body
          schema:
            type: integer
            default: 0
            minimum: 0
          description: >-
            RED min_th parameter for this limiter queue. This parameter is only available when `aqm` is
            set to `red`.
        - name: param_red_max_th
          in: body
          schema:
            type: integer
            default: 1
            minimum: 1
          description: >-
            RED max_th parameter for this limiter queue. This parameter is only available when `aqm` is
            set to `red`.
        - name: param_red_max_p
          in: body
          schema:
            type: integer
            default: 1
            minimum: 1
          description: >-
            RED max_p parameter for this limiter queue. This parameter is only available when `aqm` is
            set to `red`.
        - name: param_gred_w_q
          in: body
          schema:
            type: integer
            default: 1
            minimum: 1
          description: >-
            GRED w_q parameter for this limiter queue. This parameter is only available when `aqm` is
            set to `gred`.
        - name: param_gred_min_th
          in: body
          schema:
            type: integer
            default: 0
            minimum: 0
          description: >-
            GRED min_th parameter for this limiter queue. This parameter is only available when `aqm` is
            set to `gred`.
        - name: param_gred_max_th
          in: body
          schema:
            type: integer
            default: 1
            minimum: 1
          description: >-
            GRED max_th parameter for this limiter queue. This parameter is only available when `aqm` is
            set to `gred`.
        - name: param_gred_max_p
          in: body
          schema:
            type: integer
            default: 1
            minimum: 1
          description: >-
            GRED max_p parameter for this limiter queue. This parameter is only available when `aqm` is
            set to `gred`.
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this change to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple firewall items at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Firewall > Traffic Shaper > Limiter > Queue
      summary: Delete limiter queue
      description: >-
        Delete an existing queue from an existing traffic shaper limiter.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-trafficshaper-limiter`]
      parameters:
        - name: limiter
          in: body
          description: Name of the parent limiter to delete this queue from.
          required: true
          schema:
            type: string
        - name: name
          in: body
          description: Name of the queue to delete.
          required: true
          schema:
            type: string
        - name: apply
          in: body
          schema:
            type: string
          description: >-
            Specify whether or not you would like this change to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple firewall items at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/traffic_shaper/limiter:
    post:
      tags:
        - Firewall > Traffic Shaper > Limiter
      summary: Create limiter
      description: >-
        Create a new traffic shaper limiter.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-trafficshaper-limiter`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Example_Limiter
                bandwidth:
                  - bw: 100
                    bwscale: Mb
                mask: srcaddress
                maskbits: 31
                description: Example limiter
                aqm: codel
                sched: fq_pie
                delay: 1
                plr: 0.01
                buckets: 16
                apply: true
      parameters:
        - name: name
          in: body
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 32
          description: >-
            Name for this limiter. This value must only contain
            alphanumerics, underscore and/or hyphens, must be 32 characters or
            less, and must be unique from all other limiters Including child
            queues.
        - name: bandwidth
          in: body
          required: true
          example:
            - {"bw": 100, "bwscale": "Mb", "bwsched": "none"}
            - { "bw": 100, "bwscale": "Kb", "bwsched": "example_firewall_schedule" }
          schema:
            type: array
            items:
              type: object
              properties:
                bw:
                  type: integer
                bwscale:
                  type: string
                bwsched:
                  type: string
          description: >-
            Bandwidth objects to assign to this limiter.
            Each object will require fields as specified by the
            /api/v1/firewall/traffic_shaper/limiter/bandwidth endpoint
            documentation. At least one bandwidth object must be specified to
            create the limiter.
        - name: mask
          in: body
          description: Limiter address mask type.
          schema:
            type: string
            enum: ["none", "srcaddress", "dstaddress"]
            default: none
        - name: maskbits
          in: body
          schema:
            type: integer
            default: 32
            minimum: 1
            maximum: 32
          description: >-
            IPv4 subnet bitmask to apply the limiter to. This parameter is only available when `mask` is set
            to `srcaddress` or `dstaddress`.
        - name: maskbitsv6
          in: body
          schema:
            type: integer
            default: 128
            minimum: 1
            maximum: 128
          description: >-
            IPv6 subnet bitmask to apply the limiter to. This parameter is only available when `mask` is set
            to `srcaddress` or `dstaddress`.
        - name: description
          in: body
          description: Description for this limiter.
          schema:
            type: string
        - name: aqm
          in: body
          description: Queue Management Algorithm for this limiter to use.
          required: true
          schema:
            type: string
            enum: ["droptail", "codel", "pie", "red", "gred"]
        - name: sched
          in: body
          description: Scheduler type for this limiter to use.
          required: true
          schema:
            type: string
            enum: ["wf2q+", "fifo", "qfq", "rr", "prio", "fq_codel", "fq_pie"]
        - name: enabled
          in: body
          description: Enable this limiter.
          schema:
            type: boolean
            default: true
        - name: ecn
          in: body
          description: Enable Explicit Congestion Notification (ECN). Not every AQM and/or scheduler supports ECN.
          schema:
            type: boolean
            default: false
        - name: qlimit
          in: body
          description: Queue limit value for this limiter.
          schema:
            type: integer
            minimum: 1
        - name: delay
          in: body
          description: Delay value for this limiter.
          schema:
            type: integer
            default: 0
            minimum: 0
            maximum: 10000
        - name: plr
          in: body
          description: Packet loss rate value for this limiter.
          schema:
            type: number
            format: float
            default: 0
            minimum: 0
            maximum: 1
        - name: buckets
          in: body
          description: Buckets for this limiter.
          schema:
            type: integer
            minimum: 16
            maximum: 65535
        - name: param_codel_target
          in: body
          schema:
            type: integer
            default: 5
            minimum: 0
          description: >-
            CoDel target parameter for this limiter. This parameter is only available when `aqm` is set to `codel`.
        - name: param_codel_interval
          in: body
          schema:
            type: integer
            default: 100
            minimum: 0
          description: >-
            CoDel interval parameter for this limiter. This parameter is only available when `aqm` is set to `codel`.
          example: integer
        - name: param_pie_target
          in: body
          schema:
            type: integer
            default: 15
            minimum: 0
          description: >-
            PIE target parameter for this limiter. This parameter is only available when `aqm` is set to `pie`.
          example: integer
        - name: param_pie_tupdate
          in: body
          schema:
            type: integer
            default: 15
            minimum: 0
          description: >-
            PIE tupdate parameter for this limiter. This parameter is only available when `aqm` is set to `pie`.
        - name: param_pie_alpha
          in: body
          schema:
            type: integer
            default: 125
            minimum: 0
          description: >-
            PIE alpha parameter for this limiter. This parameter is only available when `aqm` is set to `pie`.
        - name: param_pie_beta
          in: body
          schema:
            type: integer
            default: 1250
            minimum: 0
          description: >-
            PIE beta parameter for this limiter. This parameter is only available when `aqm` is set to `pie`.
        - name: param_pie_max_burst
          in: body
          schema:
            type: integer
            default: 150000
            minimum: 0
          description: >-
            PIE max burst parameter for this limiter. This parameter is only available when `aqm` is set to `pie`.
        - name: param_pie_max_ecnth
          in: body
          schema:
            type: integer
            default: 99
            minimum: 0
          description: >-
            PIE max ecnth parameter for this limiter. This parameter is only available when `aqm` is set to `pie`.
        - name: param_red_w_q
          in: body
          schema:
            type: integer
            default: 1
            minimum: 1
          description: >-
            RED w_q parameter for this limiter. This parameter is only available when `aqm` is set to `red`.
        - name: param_red_min_th
          in: body
          schema:
            type: integer
            default: 0
            minimum: 0
          description: >-
            RED min_th parameter for this limiter. This parameter is only available when `aqm` is set to `red`.
        - name: param_red_max_th
          in: body
          schema:
            type: integer
            default: 1
            minimum: 1
          description: >-
            RED max_th parameter for this limiter. This parameter is only available when `aqm` is set to `red`.
        - name: param_red_max_p
          in: body
          schema:
            type: integer
            default: 1
            minimum: 1
          description: >-
            RED max_p parameter for this limiter. This parameter is only available when `aqm` is set to `red`.
        - name: param_gred_w_q
          in: body
          schema:
            type: integer
            default: 1
            minimum: 1
          description: >-
            GRED w_q parameter for this limiter. This parameter is only available when `aqm` is set to `gred`.
        - name: param_gred_min_th
          in: body
          schema:
            type: integer
            default: 0
            minimum: 0
          description: >-
            GRED min_th parameter for this limiter. This parameter is only available when `aqm` is set to `gred`.
        - name: param_gred_max_th
          in: body
          schema:
            type: integer
            default: 1
            minimum: 1
          description: >-
            GRED max_th parameter for this limiter. This parameter is only available when `aqm` is set to `gred`.
        - name: param_gred_max_p
          in: body
          schema:
            type: integer
            default: 1
            minimum: 1
          description: >-
            GRED max_p parameter for this limiter. This parameter is only available when `aqm` is set to `gred`.
        - name: param_fq_codel_target
          in: body
          schema:
            type: integer
            default: 5
            minimum: 0
          description: >-
            FQ_CoDel target parameter for this limiter. This parameter is only available when `sched` is
            set to `fq_codel`.
        - name: param_fq_codel_interval
          in: body
          schema:
            type: integer
            default: 100
            minimum: 0
          description: >-
            FQ_CoDel interval parameter for this limiter. This parameter is only available when `sched` is
            set to `fq_codel`.
        - name: param_fq_codel_quantum
          in: body
          schema:
            type: integer
            default: 1514
            minimum: 0
          description: >-
            FQ_CoDel quantum parameter for this limiter. This parameter is only available when `sched` is
            set to `fq_codel`.
        - name: param_fq_codel_limit
          in: body
          schema:
            type: integer
            default: 10240
            minimum: 0
          description: >-
            FQ_CoDel limit parameter for this limiter. This parameter is only available when `sched` is
            set to `fq_codel`.
        - name: param_fq_codel_flow
          in: body
          schema:
            type: integer
            default: 1024
            minimum: 0
          description: >-
            Specify the FQ_CoDel flow parameter for this limiter. This parameter is only available when `sched` is
            set to `fq_codel`.
        - name: param_fq_pie_target
          in: body
          schema:
            type: integer
            default: 15
            minimum: 0
          description: >-
            FQ_PIE target parameter for this limiter. This parameter is only available when `sched` is
            set to `fq_pie`.
        - name: param_fq_pie_tupdate
          in: body
          schema:
            type: integer
            default: 15
            minimum: 0
          description: >-
            FQ_PIE tupdate parameter for this limiter. This parameter is only available when `sched` is
            set to `fq_pie`.
        - name: param_fq_pie_alpha
          in: body
          schema:
            type: integer
            default: 125
            minimum: 0
          description: >-
            FQ_PIE alpha parameter for this limiter. This parameter is only available when `sched` is
            set to `fq_pie`.
        - name: param_fq_pie_beta
          in: body
          schema:
            type: integer
            default: 1250
            minimum: 0
          description: >-
            FQ_PIE beta parameter for this limiter. This parameter is only available when `sched` is
            set to `fq_pie`.
        - name: param_fq_pie_max_burst
          in: body
          schema:
            type: integer
            default: 150000
            minimum: 0
          description: >-
            FQ_PIE max burst parameter for this limiter. This parameter is only available when `sched` is
            set to `fq_pie`.
        - name: param_fq_pie_max_ecnth
          in: body
          schema:
            type: integer
            default: 99
            minimum: 0
          description: >-
            FQ_PIE max ecnth parameter for this limiter. This parameter is only available when `sched` is
            set to `fq_pie`.
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this change to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple firewall items at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    get:
      tags:
        - Firewall > Traffic Shaper > Limiter
      summary: Read limiters
      description: >-
        Read all existing traffic shaper limiters.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-trafficshaper-limiter`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Firewall > Traffic Shaper > Limiter
      summary: Delete limiter
      description: >-
        Delete traffic shaper limiter.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-trafficshaper-limiter`]
      parameters:
        - name: name
          in: body
          description: Name of the limiter to delete.
          required: true
          schema:
            type: string
        - name: apply
          in: body
          schema:
            type: string
          description: >-
            Specify whether or not you would like this change to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple firewall items at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/traffic_shaper:
    post:
      tags:
        - Firewall > Traffic Shaper
      summary: Create traffic shaper
      description: >-
        Add a new traffic shaper policy to an interface.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-trafficshaper`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                interface: lan
                scheduler: PRIQ
                bandwidthtype: Gb
                bandwidth: 1
                enabled: false
                qlimit: 1000
                tbrconfig: 1000
                apply: true
      parameters:
        - name: interface
          in: body
          required: true
          schema:
            type: string
          description: >-
            Interface the traffic shaper policy will apply to. You
            may specify either the interface's descriptive name, the pfSense ID
            (wan, lan, optx), or the real interface ID (e.g. igb0).
        - name: scheduler
          in: body
          description: Scheduler type for this traffic shaper.
          required: true
          schema:
            type: string
            enum: ["HFSC", "CBQ", "FAIRQ", "CODELQ", "PRIQ"]
        - name: bandwidthtype
          in: body
          required: true
          schema:
            type: string
            enum: ["%", "b", "Kb", "Mb", "Gb"]
          description: >-
            Bandwidth type to use when setting the bandwidth.
            Choices are `%` for percentage based bandwidth, `b` for bits, `Kb`
            for kilobits, `Mb` for megabits, and `Gb` for gigabits.
        - name: bandwidth
          in: body
          required: true
          schema:
            type: integer
            minimum: 1
          description: >-
            Bandwidth limit of this traffic shaper. This must be a numeric
            value of `1` or greater. If you have set the `bandwidthtype` to `%`,
            this value must be `100` or less.
        - name: enabled
          in: body
          description: Enable this traffic shaper policy.
          schema:
            type: boolean
            default: true
        - name: qlimit
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Queue limit value for this traffic shaper policy. Do not specify this field
            to assume no limits.
        - name: tbrconfig
          in: body
          description: TBR size for this traffic shaper.
          schema:
            type: integer
            minimum: 1
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this change to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple firewall items at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Firewall > Traffic Shaper
      summary: Update traffic shaper
      description: >-
        Update an existing traffic shaper policy for an interface.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-trafficshaper`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                interface: lan
                scheduler: PRIQ
                bandwidthtype: '%'
                bandwidth: 50
                enabled: true
                qlimit: 10000
                tbrconfig: 10000
                apply: true
      parameters:
        - name: interface
          in: body
          required: true
          schema:
            type: string
          description: >-
            Interface of the traffic shaper policy to update. You
            may specify either the interface's descriptive name, the pfSense ID
            (wan, lan, optx), or the real interface ID (e.g. igb0).
        - name: scheduler
          in: body
          description: Scheduler type for this traffic shaper.
          schema:
            type: string
            enum: ["HFSC", "CBQ", "FAIRQ", "CODELQ", "PRIQ"]
        - name: bandwidthtype
          in: body
          schema:
            type: string
            enum: ["%", "b", "Kb", "Mb", "Gb"]
          description: >-
            Bandwidth type to use when setting the bandwidth.
            Choices are `%` for percentage based bandwidth, `b` for bits, `Kb`
            for kilobits, `Mb` for megabits, and `Gb` for gigabits. If this value
            is updated, a new `bandwidth` value will also be required.
        - name: bandwidth
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Bandwidth limit of this traffic shaper. This must be a numeric
            value of `1` or greater. If you have set the `bandwidthtype` to `%`,
            this value must be `100` or less. This parameter is required when a
            new `bandwidthtype` value is specified.
        - name: enabled
          in: body
          description: Enable this traffic shaper policy.
          schema:
            type: boolean
            default: true
        - name: qlimit
          in: body
          schema:
            type: integer
            minimum: 1
          description: >-
            Queue limit value for this traffic shaper policy. Do not specify this field
            to assume no limits.
        - name: tbrconfig
          in: body
          description: TBR size for this traffic shaper.
          schema:
            type: integer
            minimum: 1
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this change to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple firewall items at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    get:
      tags:
        - Firewall > Traffic Shaper
      summary: Read traffic shapers
      description: >-
        Read all configured traffic shaper policies.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-trafficshaper`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Firewall > Traffic Shaper
      summary: Delete traffic shaper
      description: >-
        Delete the traffic shaper policy for a specific interface.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-trafficshaper`]
      parameters:
        - name: interface
          in: body
          required: true
          schema:
            type: string
          description: >-
            Interface of the traffic shaper policy to delete. You
            may specify either the interface's descriptive name, the pfSense ID
            (wan, lan, optx), or the real interface ID (e.g. igb0).
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this change to be applied
            immediately, or simply written to the configuration to be applied
            later. If you are modifying multiple firewall items at once it is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/firewall/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/schedule/time_range:
    post:
      tags:
        - Firewall > Schedule > Time Range
      summary: Create schedule time range
      description: >-
        Add a new time range to an existing firewall schedule.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-schedules-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Example_Schedule
                month: 1,3,5
                day: 20,24,5
                hour: 9:00-17:00
                rangedescr: Enable on Jan 20, Mar 24, and May 5 from 9AM to 5PM
      parameters:
        - name: name
          in: body
          description: Name of the existing schedule to add this time range to.
          required: true
          schema:
            type: string
        - name: position
          in: body
          schema:
            type: string
          description: >-
            Comma-separated list of week days the schedule will be
            enabled on. Options are `1` for Monday, `2` for Tuesday, `3` for
            Wednesday, `4` for Thursday, `5` for Friday, `6` for Saturday, and
            `7` for Sunday.
        - name: month
          in: body
          schema:
            type: string
          description: >-
            Comma-separated list of months the schedule will be
            enabled on. This will directly correspond with each value in the
            `day` field. For example, to enable this schedule on March 1st, and
            August 26th, the `month` field should be formatted as `"3,8"` and
            the `day` field should be formatted as `"1,26"`. This parameter is
            required if a `position` value was not specified. This parameter
            has no effect if the `position` field was specified.
        - name: day
          in: body
          schema:
            type: string
          description: >-
            Comma-separated list of days the schedule will be enabled
            for. This will directly correspond with each value in the `month`
            field. For example, to enable this schedule on March 1st, and August
            26th, the `month` field should be formatted as `"3,8"` and the `day`
            field should be formatted as `"1,26"`. This parameter is
            required if a `position` value was not specified. This parameter
            has no effect if the `position` field was specified.
        - name: hour
          in: body
          required: true
          schema:
            type: string
          description: >-
            Hour range this schedule will be enabled at. This must
            be two 24-hour time strings formatted as either HH:MM or H:MM
            separated by `-` (e.g. `9:00-17:00`). The first time range must be
            less than the second time range. The minutes portion of the time
            range must be either `00`, `15`, `30`, `45`, or `59`.
        - name: rangedescr
          in: body
          description: Description for this time range.
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Firewall > Schedule > Time Range
      summary: Delete schedule time range
      description: >-
        Remove a time range from an existing firewall schedule.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-schedules-edit`]
      parameters:
        - name: name
          in: body
          required: true
          description: Name of the existing schedule to delete this time range from.
          schema:
            type: string
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            Specify the ID of the time range to delete. This will be the
            configuration array index of the `timerange` object within the
            `schedule` object. Refer to the 'Obtaining Object IDs' section 
            in the documentation intro for help obtaining this ID.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/firewall/schedule:
    post:
      tags:
        - Firewall > Schedule
      summary: Create schedule
      description: >-
        Create a firewall schedule.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-schedules-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Example_Schedule
                descr: Example firewall schedule
                timerange:
                  - month: 1,3,5
                    day: 10,20,25
                    hour: 0:15-20:00
                    rangedescr: On Jan 1, March 20, and May 25 from 0:15 to 20:00
                  - position: 1,2,3,4,5
                    hour: 10:15-12:00
                    rangedescr: Every Mon, Tues, Wed, Thur, Fri from 10:15 to 12:00
      parameters:
        - name: name
          in: body
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 32
          description: >-
            Name of the firewall schedule. This value must be
            between 1 and 32 characters, and can only contain alphanumerics,
            underscores and hyphens. This value must be unique from all other
            firewall schedules.
        - name: timerange
          in: body
          required: true
          example:
            - month: 1,3,5
              day: 10,20,25
              hour: 0:15-20:00
              rangedescr: On Jan 1, March 20, and May 25 from 0:15 to 20:00
          schema:
            type: array
            items:
              type: object
              properties:
                position:
                  type: string
                month:
                  type: string
                day:
                  type: string
                rangedescr:
                  type: string
          description: >-
            Array of time range objects for this schedule. Each
            object must contain fields as specified in the
            /api/v1/firewall/schedule/time_range endpoint. At least 1 time range
            object must be specified.
        - name: descr
          in: body
          description: Description for this firewall schedule.
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Firewall > Schedule
      summary: Update schedule
      description: >-
        Update an existing firewall schedule.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-schedules-edit`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Test_Schedule
                descr: Updated test firewall schedule
                timerange:
                  - month: 2,4,6
                    day: 10,20,25
                    hour: 0:15-20:00
                    rangedescr: On Feb 1, Apr 20, and Jun 25 from 0:15 to 20:00
                  - position: 6,7
                    hour: 10:15-12:00
                    rangedescr: Every Sat, Sun from 10:15 to 12:00
      parameters:
        - name: name
          in: body
          description: Name of the existing firewall schedule to update.
          required: true
          schema:
            type: string
        - name: timerange
          in: body
          example:
            - month: 1,3,5
              day: 10,20,25
              hour: 0:15-20:00
              rangedescr: On Jan 1, March 20, and May 25 from 0:15 to 20:00
          schema:
            type: array
            items:
              type: object
              properties:
                position:
                  type: string
                month:
                  type: string
                day:
                  type: string
                rangedescr:
                  type: string
          description: >-
            Array of time range objects for this schedule. Each
            object must contain fields as specified in the
            /api/v1/firewall/schedule/time_range endpoint. At least 1 time range
            object must be specified. Any existing values will be overwritten.
        - name: descr
          in: body
          description: Description for this firewall schedule.
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Firewall > Schedule
      summary: Delete schedule
      description: >-
        Delete an existing firewall schedule.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-schedules-edit`]
      parameters:
        - name: name
          in: body
          description: Name of the existing firewall schedule to delete.
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    get:
      tags:
        - Firewall > Schedule
      summary: Read schedules
      description: >-
        Read all existing firewall schedules.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-firewall-schedules`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/notifications/email:
    get:
      tags:
        - System > Notifications > Email
      summary: Read email notification settings
      description: >-
        Read the current email notification settings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-advanced-notifications`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - System > Notifications > Email
      summary: Update email notification settings
      description: >-
        Update the email notification settings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-advanced-notifications`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                disabled: true
                ipaddress: smtp.example.com
                port: 25
                timeout: 10
                ssl: true
                sslvalidate: true
                fromaddress: noreply@example.com
                notifyemailaddress: recipient@example.com
                username: exampleuser
                password: examplepassword
                authentication_mechanism: LOGIN
      parameters:
        - name: disabled
          in: body
          description: Enable or disable email notifications.
          schema:
            type: boolean
        - name: ipaddress
          in: body
          description: IP address or hostname of the remote SMTP server.
          required: true
          schema:
            type: string
        - name: port
          in: body
          description: Port of the remote SMTP server.
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 65535
        - name: timeout
          in: body
          description: Timeout (in seconds) for connections to the remote SMTP server.
          schema:
            type: integer
            default: 20
            minimum: 1
        - name: ssl
          in: body
          description: Enable or disable SMTP over SSL/TLS.
          schema:
            type: boolean
        - name: sslvalidate
          in: body
          description: Enable or disable certificate verification for SSL/TLS connections.
          schema:
            type: boolean
        - name: fromaddress
          in: body
          description: Email address email notifications will be sent from.
          required: true
          schema:
            type: string
            format: email
        - name: notifyemailaddress
          in: body
          description: Email address email notifications will be sent to.
          required: true
          schema:
            type: string
            format: email
        - name: authentication_mechanism
          in: body
          description: Authentication type to use for connections to the remote SMTP server.
          required: true
          schema:
            type: string
            enum: ["PLAIN", "LOGIN"]
        - name: username
          in: body
          schema:
            type: string
          description: >-
            Username to use during authentication. This parameter is only
            available when `authentication_mechanism` is set to `LOGIN`.
        - name: password
          in: body
          schema:
            type: string
            format: password
          description: >-
            Password to use during authentication. This parameter is only
            available when `authentication_mechanism` is set to `LOGIN`.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/version:
    get:
      tags:
        - System > Version
      summary: Read system version
      description: >-
        Read the pfSense version data. This includes base version, patch version,
        buildtime, and last commit.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-dashboard-widgets`, `page-diagnostics-command`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/package:
    get:
      tags:
        - System > Package
      summary: Read system packages
      description: >-
        Read all pfSense packages that are currently installed.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-packagemanager-installed`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - System > Package
      summary: Remove system package
      description: >-
        Remove an existing pfSense package.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-packagemanager-installed`]
      parameters:
        - name: name
          in: body
          required: true
          schema:
            type: string
          description: >-
            Name of pfSense package to delete. This must be the pfSense package internal name including the 
            `pfSense-pkg-` prefix. Non-pfSense packages cannot be removed.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - System > Package
      summary: Install system package
      description: >-
        Install a pfSense package.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-packagemanager-installpackage`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: pfSense-pkg-sudo
      parameters:
        - name: name
          in: body
          required: true
          schema:
            type: string
          description: >-
            Name of pfSense package to install. This must be the pfSense package internal name including the 
            `pfSense-pkg-` prefix or a URL to an external package.
        - name: timeout
          in: body
          description: Amount of time (in seconds) to allow the package installation to take before timing out.
          schema:
            type: integer
            default: 90
            minimum: 5
            maximum: 120
        - name: force
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Force the installation of the package. Forced installs will always force the package to re-install and
            bypasses certain warnings. Use extreme caution when using forced installs.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/arp:
    get:
      tags:
        - System > ARP
      summary: Read ARP table
      description: >-
        Read the current ARP table.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-diagnostics-arptable`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - System > ARP
      summary: Delete ARP table entry
      description: >-
        Delete an IP from the ARP table.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-diagnostics-arptable`]
      parameters:
        - name: ip
          in: body
          required: true
          description: IPv4 address to delete from the ARP table.
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/config:
    get:
      tags:
        - System > Config
      summary: Read pfSense configuration
      description: >-
        Read the entire pfSense configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-diagnostics-backup-restore`, `page-diagnostics-command`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - System > Config
      summary: Update pfSense configuration
      description: >-
        Updates the entire pfSense configuration. This endpoint simply replaces the
        entire configuration with the values submitted in your request. This can
        be used to interface with configuration areas that may not be available
        to the API. Use extreme caution when utilizing this endpoint as it
        offers no input validation and has high potential for configuration
        loss. This endpoint is purely experimental.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-diagnostics-backup-restore`]
      requestBody:
        content: {}
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/hostname:
    get:
      tags:
        - System > Hostname
      summary: Read system hostname
      description: >-
        Read the system's hostname.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - System > Hostname
      summary: Update system hostname
      description: >-
        Modify the system hostname.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                hostname: hostname
                domain: domain.com
      parameters:
        - name: hostname
          in: body
          description: Hostname portion of the system hostname. Do not specify to retain existing value.
          schema:
            type: string
        - name: domain
          in: body
          schema:
            type: string
          description: Domain portion of the system hostname. Do not specify to retain existing value.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/certificate:
    get:
      tags:
        - System > Certificate
      summary: Read certificates
      description: >-
        Read installed SSL/TLS certificates.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-certmanager`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - System > Certificate
      summary: Create or import certificate
      description: >-
        Generate or import a new SSL/TLS certificate.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-certmanager`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                method: import
                cert: >-
                  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZxekNDQTVPZ0F3SUJBZ0lVQi9rT2RoMzdTZnRxeHRqL1MxSTRkUTQyYXRvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNWVk14Q3pBSkJnTlZCQWdNQWxWVU1RMHdDd1lEVlFRSERBUlBjbVZ0TVNFdwpId1lEVlFRS0RCaEpiblJsY201bGRDQlhhV1JuYVhSeklGQjBlU0JNZEdReEZ6QVZCZ05WQkFNTURuUmxjM1F1CmMyVmpiV1YwTG1Odk1CNFhEVEl3TURJd05ESXdNelV3...
                key: >-
                  LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRZ0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1N3d2dna29BZ0VBQW9JQ0FRREQ5RkNLU1U3SmY0QngKeWlKNkNOWGhOckI0ZVhjTk9TTm9GUVJIbXlsV2dHbEN5djMydFdicmF3RFhhQzk2aVpOSTFzNG5qWTdQT3BlWgpoNmFlaTJ5NllheS9VWWtOUkZGQmp4WlZlLzRwS2pKeXBQRlFBUlpMVko2TlNXaU5raGkwbDlqeWtacTlEbkFnCk1mclZyUEo1YktDM3JJVV...
                descr: Example Cert
                active: true
      parameters:
        - name: method
          in: body
          required: true
          schema:
            type: string
            enum: ["import", "existing", "internal"]
          description: >-
            Method used to add the certificate. _Note: previous releases referred to the `existing` method as `import`. 
            You may use `existing` or `import` interchangeably._
        - name: descr
          in: body
          description: Descriptive name for the certificate.
          required: true
          schema:
            type: string
        - name: crt
          in: body
          schema:
            type: string
          description: >-
            Base64 encoded PEM certificate to import. This parameter is
            required when `method` is set to `existing`. _Note: previous
            releases referred to the `crt` parameter as `cert`. Both `crt` and
            `cert` can be used interchangeably._
        - name: prv
          in: body
          schema:
            type: string
          description: >-
            Corresponding Base64 encoded certificate key. This parameter
            is required when `method` is set to `existing`. _Note: previous
            releases referred to the `prv` parameter as `key`. Both `prv` and `key`
            can be used interchangeably._
        - name: caref
          in: body
          schema:
            type: string
          description: >-
            Unique reference ID of the existing certificate signing authority to use
            for the certificate. This parameter is required when `method` is set to
            `internal`.
        - name: keytype
          in: body
          schema:
            type: string
            enum: ["RSA", "ECDSA"]
          description: >-
            Private key type to generate. Options are `RSA` or
            `ECDSA`. This parameter is required when `method` is set to `internal`.
        - name: keylen
          in: body
          schema:
            type: integer
            enum: [1024, 2048, 3072, 4096, 6144, 7680, 8192, 15360, 16384]
          description: >-
            Specify the private key length to generate. This parameter is required when `method` is set to `internal` AND
            `keytype` is set to `RSA`.
        - name: ecname
          in: body
          schema:
            type: string
          description: >-
            Elliptic curve name to use when generating the private
            key. It is recommended to view options and compatibility within the
            pfSense webConfigurator or manually through OpenSSL as certain
            curves are not compatible in some circumstances. This parameter is
            required when `method` is set to `internal` AND `keytype` is set to
            `ECDSA`. _Note: options are subject to change, when in doubt, check
            the pfSense webConfigurator options for this parameter._
        - name: digest_alg
          in: body
          schema:
            type: string
            enum: ["sha1", "sha224", "sha256", "sha384", "sha512"]
          description: >-
            Digest algorithm to use. This parameter is required when
            `method` is set to `internal`. _Note: options are subject to change,
            when in doubt, check the pfSense webConfigurator options for this
            field._
        - name: lifetime
          in: body
          schema:
            type: integer
            default: 3650
          description: >-
            Number of days you would like this certificate to be
            valid for. This must be below OpenSSL's maximum lifetime value
            (around `12000` days). This parameter is required when `method` is set 
            to `internal`. _Note: maximum value is subject to change, when in doubt, 
            check the pfSense webConfigurator options for this parameter._
        - name: dn_commonname
          in: body
          schema:
            type: string
          description: >-
            Common name of this certificate. In mose cases, this
            will be a hostname. This parameter is required when `method` is set to
            `internal`.
        - name: dn_country
          in: body
          schema:
            type: string
          description: >-
            Country code for this certificate. This must be a known
            2-digit country code. This parameter is only available when `method` is
            set to `internal`.
        - name: dn_state
          in: body
          schema:
            type: string
          description: >-
            State or province for this certificate. This parameter is
            only available when `method` is set to `internal`.
        - name: dn_city
          in: body
          schema:
            type: string
          description: >-
            City or locale for this certificate. This parameter is only
            available when `method` is set to `internal`.
        - name: dn_organization
          in: body
          schema:
            type: string
          description: >-
            The managing organization for this certificate. This parameter
            is only available when `method` is set to `internal`.
        - name: dn_organizationalunit
          in: body
          schema:
            type: string
          description: >-
            The managing organizational unit or team for this certificate. This parameter is only available when 
            `method` is set to `internal`.
        - name: type
          in: body
          description: Type of certificate to generate. This parameter is required when `method` is set to `internal`.
          schema:
            type: string
            enum: ["server", "user"]
        - name: altnames
          in: body
          example:
            - {"dns": "example.com"}
            - {"ip": "127.0.0.1"}
            - {"uri": "https://example.com/test"}
            - {"email": "example@example.com"}
          schema:
            type: array
            items:
              type: object
          description: >-
            Subject alternative names to list in this certificate. This
            must be an array of objects with each object containing a alt name
            type as the key and the alt name value as the value. Supported alt
            name types are `dns` for FQDNs, `ip` for IP addresses, `uri` for
            URLs, and `email` for email addresses. This parameter is only available
            when `method` is set to `internal`.
        - name: active
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Set this certificate as the active certificate used by the webConfigurator. This parameter is only available
            when `type` is set to `server` or `method` is set to `existing`.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - System > Certificate
      summary: Update certificate
      description: >-
        Update an imported SSL/TLS certificate.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-certmanager`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                cert: >-
                  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZxekNDQTVPZ0F3SUJBZ0lVQi9rT2RoMzdTZnRxeHRqL1MxSTRkUTQyYXRvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNWVk14Q3pBSkJnTlZCQWdNQWxWVU1RMHdDd1lEVlFRSERBUlBjbVZ0TVNFdwpId1lEVlFRS0RCaEpiblJsY201bGRDQlhhV1JuYVhSeklGQjBlU0JNZEdReEZ6QVZCZ05WQkFNTURuUmxjM1F1CmMyVmpiV1YwTG1Odk1CNFhEVEl3TURJd05ESXdNelV3...
                key: >-
                  LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRZ0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1N3d2dna29BZ0VBQW9JQ0FRREQ5RkNLU1U3SmY0QngKeWlKNkNOWGhOckI0ZVhjTk9TTm9GUVJIbXlsV2dHbEN5djMydFdicmF3RFhhQzk2aVpOSTFzNG5qWTdQT3BlWgpoNmFlaTJ5NllheS9VWWtOUkZGQmp4WlZlLzRwS2pKeXBQRlFBUlpMVko2TlNXaU5raGkwbDlqeWtacTlEbkFnCk1mclZyUEo1YktDM3JJVV...
                descr: Updated Example Cert
                active: true
      parameters:
        - name: crt
          in: body
          required: true
          schema:
            type: string
          description: >-
            Base64 encoded PEM certificate to import. _Note: previous
            releases referred to the `crt` parameter as `cert`. Both `crt` and
            `cert` can be used interchangeably._
        - name: prv
          in: body
          required: true
          schema:
            type: string
          description: >-
            Corresponding Base64 encoded certificate key. _Note: previous
            releases referred to the `prv` parameter as `key`. Both `prv` and `key`
            can be used interchangeably._
        - name: descr
          in: body
          description: Descriptive name for the certificate.
          schema:
            type: string
        - name: active
          in: body
          description: Set this certificate as the active certificate used by the webConfigurator.
          schema:
            type: boolean
            default: false
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - System > Certificate
      summary: Delete certificate
      description: >-
        Delete an existing SSL/TLS certificate.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-certmanager`]
      parameters:
        - name: refid
          in: body
          description: The `refid` of the certificate to delete.
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/ca:
    get:
      tags:
        - System > CA
      summary: Read CA certificates
      description: >-
        Read installed CA certificates.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-camanager`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - System > CA
      summary: Create or import CA certificate
      description: >-
        Generate or import a new CA certificate.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-camanager`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                method: existing
                crt: >-
                  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZxekNDQTVPZ0F3SUJBZ0lVQi9rT2RoMzdTZnRxeHRqL1MxSTRkUTQyYXRvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNWVk14Q3pBSkJnTlZCQWdNQWxWVU1RMHdDd1lEVlFRSERBUlBjbVZ0TVNFdwpId1lEVlFRS0RCaEpiblJsY201bGRDQlhhV1JuYVhSeklGQjBlU0JNZEdReEZ6QVZCZ05WQkFNTURuUmxjM1F1CmMyVmpiV1YwTG1Odk1CNFhEVEl3TURJd05ESXdNelV3...
                prv: >-
                  LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRZ0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1N3d2dna29BZ0VBQW9JQ0FRREQ5RkNLU1U3SmY0QngKeWlKNkNOWGhOckI0ZVhjTk9TTm9GUVJIbXlsV2dHbEN5djMydFdicmF3RFhhQzk2aVpOSTFzNG5qWTdQT3BlWgpoNmFlaTJ5NllheS9VWWtOUkZGQmp4WlZlLzRwS2pKeXBQRlFBUlpMVko2TlNXaU5raGkwbDlqeWtacTlEbkFnCk1mclZyUEo1YktDM3JJVV...
                descr: Example CA
      parameters:
        - name: method
          in: body
          required: true
          schema:
            type: string
            enum: ["import", "existing", "internal", "intermediate"]
          description: >-
            Method used to add the CA. _Note: previous releases
            referred to the `existing` method as `import`. You may use
            `existing` or `import` interchangeably._
        - name: descr
          in: body
          description: Descriptive name for the CA.
          required: true
          schema:
            type: string
        - name: trust
          in: body
          description: Trust this CA across the entire system.
          schema:
            type: boolean
            default: false
        - name: randomserial
          in: body
          description: Use randomized serial numbers for certificates signed by this CA.
          schema:
            type: boolean
            default: false
        - name: crt
          in: body
          schema:
            type: string
          description: Base64 encoded PEM CA certificate to import. This parameter
            is required when `method` is set to `existing`.
        - name: prv
          in: body
          schema:
            type: string
          description: >-
            Corresponding Base64 encoded CA certificate key. This
            parameter is only available when `method` is set to `existing`.
        - name: serial
          in: body
          schema:
            type: integer
            default: 1
            minimum: 1
          description: >-
            Set the serial number to be assigned to the next certificate
            signed by this CA. This field is only available when
            `method` is set to `existing`.
        - name: caref
          in: body
          schema:
            type: string
          description: >-
            Specify the unique reference ID of the root certificate signing authority
            for the intermediate CA certificate. This parameter is required when
            `method` is set to `intermediate`.
        - name: keytype
          in: body
          schema:
            type: string
            enum: ["RSA", "ECDSA"]
          description: >-
            Specify the private key type to generate. This parameter is required when `method` is set to `internal`
            or `intermediate`.
        - name: keylen
          in: body
          schema:
            type: integer
            enum: [1024, 2048, 3072, 4096, 6144, 7680, 8192, 15360, 16384]
          description: >-
            Private key length to generate. This parameter is required when `method` is set to `internal` or
            `intermediate` AND `keytype` is set to `RSA`.
        - name: ecname
          in: body
          schema:
            type: string
          description: >-
            Elliptic curve name to use when generating the private
            key. It is recommended to view options and compatibility within the
            pfSense webConfigurator or manually through OpenSSL as certain
            curves are not compatible in some circumstances. This parameter is
            required when `method` is set to `internal` or `intermediate` AND
            `keytype` is set to `ECDSA`. _Note: options are subject to change,
            when in doubt, check the pfSense webConfigurator options for this
            field._
        - name: digest_alg
          in: body
          schema:
            type: string
            enum: ["sha1", "sha224", "sha256", "sha384", "sha512"]
          description: >-
            Digest algorithm to use. This parameter is required when
            `method` is set to `internal` or `intermediate`. _Note: options are
            subject to change, when in doubt, check the pfSense webConfigurator
            options for this field._
        - name: lifetime
          in: body
          schema:
            type: integer
            default: 3650
          description: >-
            Number of days you would like this CA to be valid for.
            This must be below OpenSSL's maximum lifetime value (around `12000`
            days). This parameter is required when `method`
            is set to `internal` or `intermediate`. _Note: maximum value is
            subject to change, when in doubt, check the pfSense webConfigurator
            options for this field._
        - name: dn_commonname
          in: body
          schema:
            type: string
          description: >-
            Common name of this CA. In mose cases, this will be a
            hostname. This parameter is required when `method` is set to `internal`
            or `intermediate`.
        - name: dn_country
          in: body
          schema:
            type: string
          description: >-
            Country code for this CA. This must be a known 2-digit
            country code. This parameter is only available when `method` is set to
            `internal` or `intermediate`.
        - name: dn_state
          in: body
          schema:
            type: string
          description: >-
            State or province for this CA. This parameter is only
            available when `method` is set to `internal` or `intermediate`.
        - name: dn_city
          in: body
          schema:
            type: string
          description: >-
            City or locale for this CA. This parameter is only available
            when `method` is set to `internal` or `intermediate`.
        - name: dn_organization
          in: body
          schema:
            type: string
          description: >-
            The managing organization for this CA. This parameter is only
            available when `method` is set to `internal` or `intermediate`.
        - name: dn_organizationalunit
          in: body
          schema:
            type: string
          description: >-
            The managing organizational unit or team for this CA. This
            parameter is only available when `method` is set to `internal` or
            `intermediate`.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - System > CA
      summary: Delete CA certificate
      description: >-
        Delete an existing CA certificate.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-camanager`]
      parameters:
        - name: refid
          in: body
          required: true
          schema:
            type: string
          description: >-
            The `refid` of the existing CA to delete.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/crl:
    get:
      tags:
        - System > CRL
      summary: Read CRLs
      description: >-
        Read installed CRLs.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-crlmanager`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - System > CRL
      summary: Create CRL
      description: >-
        Add a new CRL.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-crlmanager`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                method: internal
                descr: EXAMPLE_CRL
                caref: 61c410f04b782
                lifetime: 3650
                serial: 10
      parameters:
        - name: caref
          in: body
          required: true
          schema:
            type: string
          description: >-
            Specify the unique reference ID of the certificate signing authority
            for the certificate revocation list.
        - name: method
          in: body
          required: true
          schema:
            type: string
            enum: ["existing", "internal"]
          description: >-
            Method used to add the certificate revocation list. _Note: `internal`
            method will create new certificate revocation list for CA provided
            in `caref`_.
        - name: descr
          in: body
          description: Descriptive name for the certificate revocation list.
          required: true
          schema:
            type: string
        - name: crl_data
          in: body
          schema:
            type: string
          description: >-
            Base64 encoded PEM certificate revocation list to
            import. This parameter is required when `method` is set to `existing`.
            _Note: Import Certificate Revocation List in X.509 CRL format.
            `-----BEGIN X509 CRL-----[A bunch of random-looking base64-encoded
            data]-----END X509 CRL-----`._
        - name: lifetime
          in: body
          schema:
            type: integer
            default: 9999
          description: >-
            Number of days you would like this certificate
            revocation list to be valid for. This must be below OpenSSL's
            maximum lifetime value (around `12000` days). This parameter is 
            only available when `method` is set to `internal`. _Note: maximum 
            value is subject to change, when in doubt, check the pfSense webConfigurator 
            options for this field._
        - name: serial
          in: body
          schema:
            type: integer
            default: 0
          description: >-
            Serial number to be assigned to the next certificate
            revocation list. This parameter is only available when
            `method` is set to `internal`.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - System > CRL
      summary: Delete CRL
      description: >-
        Delete an existing CRL.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-crlmanager`]
      parameters:
        - name: refid
          in: body
          required: true
          schema:
            type: string
          description: >-
            The `refid` of the existing certificate revocation list to delete.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/api:
    get:
      tags:
        - System > API
      summary: Read API configuration
      description: >-
        Read the current API configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-api`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - System > API
      summary: Update API configuration
      description: >-
        Update the API configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-api`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                persist: false
                jwt_exp: 86400
                authmode: token
                hashalgo: sha512
                keybytes: 64
                allowed_interfaces:
                  - WAN
                custom_headers:
                  custom-header-1: Value1
                  custom-header-2: Value2
                allow_options: true
      parameters:
        - name: enable
          in: body
          schema:
            type: boolean
          description: >-
            Enable or disable the API. If set to `false`, the API will be disabled and you will no longer be able to 
            API requests until the API enabled via the webConfigurator.
        - name: persist
          in: body
          schema:
            type: boolean
          description: >-
            Enable or disable persistent API configuration. If set to `true`,
            the API will store a copy of the API configuration in the case a
            system update or package update is needed and/or the API
            configuration must be restored. If set to `false`, all API
            configuration will be lost whenever the system updates, the package
            is updated, or the package is deleted. It is recommended to keep
            this feature enabled.
        - name: readonly
          in: body
          schema:
            type: boolean
          description: >-
            Enable or disable read-only API mode. If `true`, the API will only respond to read requests and
            modifications to configuration will not be allowed.
        - name: allow_options
          in: body
          schema:
            type: boolean
          description: >-
            Enable or disable the Options request method from API responses. If set
            to `true`, the API will answer Options requests. If set to `false`,
            the API will return a 405 Method Not Allowed response.
        - name: available_interfaces
          in: body
          example: ["lan", "localhost"]
          schema:
            type: array
            items:
              type: string
          description: >-
            Interfaces that are allowed to answer API requests. Each
            item in the array must be a valid real interface ID (e.g.
            `em0`), pfSense interface ID, (e.g. `opt1`), or descriptive
            interface name (e.g. `"WAN"`). Additionally you may add
            `localhost` to allow local API requests, or add `any` to allow
            any interface to answer API requests. It is best practice to only
            allow inside interfaces to answer API requests, or use firewall
            rules to filter requests made to outside interfaces.
        - name: authmode
          in: body
          schema:
            type: string
            enum: ["local", "jwt", "token"]
          description: >-
            Update the API authentication mode.
        - name: jwt_exp
          in: body
          schema:
            type: integer
            minimum: 300
            maximum: 86400
          description: >-
            JWT expiration interval (in seconds). This parameter is only available when `authmode` is set 
            to `jwt`.
        - name: keyhash
          in: body
          schema:
            type: string
            enum: ["sha256", "sha384", "sha512", "md5"]
          description: >-
            Hashing algorithm to use when generating API tokens. This parameter is only available when `authmode` is 
            set to `token`.
        - name: keybytes
          in: body
          schema:
            type: integer
            enum: [16, 32, 64]
          description: >-
            Key byte strength to use when generating API tokens. This parameter is only available when `authmode` is 
            set to `token`.
        - name: custom_headers
          in: body
          example:
            - {"Custom-Header-1": "custom header 1 value"}
            - {"Custom-Header-2": "custom header 2 value"}
          schema:
            type: array
            items:
              type: object
          description: >-
            Custom response headers for the API to return in API
            responses. To revert custom headers to the default state, simply pass in an empty array. In most cases,
            custom headers are not necessary. An example use case for custom headers is setting CORS policy headers 
            required by some frontend web applications.
        - name: access_list
          in: body
          example: ["127.0.0.1/32", "192.168.1.0/24"]
          schema:
            type: array
            items:
              type: string
          description: >-
            Set the API access list. This must be an array of IPv4 or IPv6
            subnets in CIDR notation. If left blank, all subnets will be
            allowed.
        - name: hasync
          in: body
          description: Enable or disable HA sync for API configurations.
          schema:
            type: boolean
        - name: hasync_hosts
          in: body
          example: ["pfsense-node-1.example.com", "pfsense-node-2.example.com"]
          schema:
            type: array
            items:
              type: string
          description: >-
            Hosts to sync API configurations to. This must be an
            array of IP addresses or FQDN strings. At least one host must be
            specified when `hasync` is set to `true`.
        - name: hasync_username
          in: body
          schema:
            type: string
          description: >-
            Username to authenticate as for HA synchronization. This
            user must be present on ALL hosts specified in the `hasync_hosts`
            value and must hold the `page-system-api` privilege. This parameter
            is required when `hasync` is set to `true`.
        - name: hasync_password
          in: body
          schema:
            type: string
            format: password
          description: >-
            Password of the username to authenticate as for HA synchronization. This parameter is required when 
            `hasync` is set to `true`.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/api/error:
    get:
      tags:
        - System > API
      summary: Read API error library
      description: >-
        Read the error code library. This function does not require
        authentication and is intended to be used by third-party
        scripts/software to translate error codes to their full error message.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/api/version:
    get:
      tags:
        - System > API
      summary: Read API version
      description: >-
        Read the current API version and locate available version
        updates.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-api`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/dns/server:
    delete:
      tags:
        - System > DNS > Server
      summary: Remove system DNS servers
      description: >-
        Remove existing system DNS servers.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system`]
      parameters:
        - name: dnsserver
          in: body
          description: IP(s) of the system DNS servers to remove.
          example: ["192.168.1.1", "172.16.12.5"]
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - System > DNS > Server
      summary: Add system DNS servers
      description: >-
        Add new DNS servers to the system DNS servers.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                dnsserver: [192.168.1.5]
      parameters:
        - name: dnsserver
          in: body
          description: IP(s) of the DNS servers to add.
          example: ["192.168.1.1", "172.16.12.5"]
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/dns:
    get:
      tags:
        - System > DNS
      summary: Read system DNS settings
      description: >-
        Read current system DNS settings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - System > DNS
      summary: Update system DNS settings
      description: >-
        Modify the existing system DNS settings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                dnsserver:
                  - 8.8.4.4
                  - 1.1.1.1
                  - 8.8.8.8
                dnslocalhost: true
                dnsallowoverride: false
      parameters:
        - name: dnsserver
          in: body
          description: DNS servers to assign the system. Existing values will be overwritten.
          example: [192.168.1.5, 172.16.12.5]
          schema:
            type: array
            items:
              type: string
        - name: dnsallowoverride
          in: body
          schema:
            type: boolean
          description: Allow or deny DNS server list to be overridden by DHCP/PPP on WAN or remote OpenVPN server.
        - name: dnslocalhost
          in: body
          schema:
            type: boolean
          description: Enable or disable system DNS resolution via local DNS services.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/tunable:
    get:
      tags:
        - System > Tunable
      summary: Read system tunables
      description: >-
        Read current system tunable configurations.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-advanced-sysctl`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - System > Tunable
      summary: Create system tunable
      description: >-
        Create a new system tunable.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-advanced-sysctl`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                tunable: example
                value: 1
                descr: An example tunable added via API
      parameters:
        - name: tunable
          in: body
          description: Name of this tunable. This should be a value recognized by sysctl.
          required: true
          schema:
            type: string
        - name: value
          in: body
          description: Value to assign this tunable.
          required: true
          schema:
            type: string
        - name: descr
          in: body
          description: Description for this tunable.
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - System > Tunable
      summary: Update system tunable
      description: >-
        Update an existing system tunable.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-advanced-sysctl`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: example
                tunable: updated.example
                value: 0
                descr: An updated example tunable added via API
      parameters:
        - name: id
          in: body
          description: Name of the existing tunable to update.
          required: true
          schema:
            type: string
        - name: tunable
          in: body
          description: New name to assign this tunable. This should be a value recognized by sysctl.
          schema:
            type: string
        - name: value
          in: body
          description: Value to assign this tunable.
          schema:
            type: string
        - name: descr
          in: body
          description: Description for this tunable.
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - System > Tunable
      summary: Delete system tunable
      description: >-
        Delete an existing system tunable.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-advanced-sysctl`]
      parameters:
        - name: id
          in: body
          description: Name of the existing tunable to delete.
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/table:
    get:
      tags:
        - System > Table
      summary: Read tables
      description: >-
        Read existing table entries.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-diagnostics-tables`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/console:
    put:
      tags:
        - System > Console
      summary: Update console settings
      description: >-
        Update console settings.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-advanced-admin`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                disableconsolemenu: true
      parameters:
        - name: disableconsolemenu
          in: body
          description: Enable or disable console password protection.
          schema:
            type: boolean
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/reboot:
    post:
      tags:
        - System > Reboot
      summary: Initiate system reboot
      description: >-
        Reboot the pfSense system.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-diagnostics-rebootsystem`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/system/halt:
    post:
      tags:
        - System > Halt
      summary: Initiate system shutdown
      description: >-
        Shutdown the pfSense system.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-diagnostics-haltsystem`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/routing/gateway/detail:
    get:
      tags:
        - Routing > Gateway > Detail
      summary: Read gateway details
      description: >-
        Read verbose routing gateway details about both dynamic/system gateways
        and static gateways.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-gateways`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/routing/gateway:
    get:
      tags:
        - Routing > Gateway
      summary: Read gateways
      description: >-
        Read existing gateways.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-gateways`]

        _Note: This endpoint originally returned verbose routing gateway
        details. This functionality has moved to
        /api/v1/routing/gateway/detail._
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Routing > Gateway
      summary: Delete gateway
      description: >-
        Delete an existing routing gateway.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-gateways-editgateway`]
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >- 
            ID of the gateway to delete. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - Routing > Gateway
      summary: Create gateway
      description: >-
        Create a new gateway.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-gateways-editgateway`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                interface: wan
                name: EXAMPLE_GATEWAY
                ipprotocol: inet
                gateway: 172.16.209.1
                monitor: 172.16.209.250
                descr: Test gateway
      parameters:
        - name: interface
          in: body
          required: true
          schema:
            type: string
          description: >-
            Interface the gateway will apply to. You may specify
            either the interface's descriptive name, the pfSense ID (wan, lan,
            optx), or the real interface ID (e.g. igb0).
        - name: ipprotocol
          in: body
          description: IP protocol this gateway will apply to.
          required: true
          schema:
            type: string
            enum: ["inet", "inet6"]
        - name: name
          in: body
          required: true
          schema:
            type: string
          description: >- 
            Descriptive name for this gateway. This name must be unique,
            and can only contain alphanumeric characters and underscores.
        - name: gateway
          in: body
          required: true
          schema:
            type: string
          description: >-
            IP address of the gateway. This value must be a valid IPv4
            address if  `ipprotocol` is set to `inet`, or a valid IPv6 
            address if `ipprotocol` is set to `inet6`.
        - name: monitor
          in: body
          schema:
            type: string
          description: >-
            IP address used to monitor this gateway. This is only necessary if the `gateway` IP does not accept ICMP probes.
            Defaults to the `gateway` value.
        - name: disabled
          in: body
          description: Disable this gateway.
          schema:
            type: boolean
            default: false
        - name: monitor_disable
          in: body
          description: Disable gateway monitoring for this gateway.
          schema:
            type: boolean
            default: false
        - name: action_disable
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Disable any action taken on gateway events for this gateway. This
            will consider the gateway as always up.
        - name: force_down
          in: body
          description: Force this gateway to always be considered down.
          schema:
            type: boolean
            default: false
        - name: descr
          in: body
          description: Description for this gateway.
          schema:
            type: string
        - name: weight
          in: body
          description: Gateway's weight when utilizing gateway load balancing within a gateway group.
          schema:
            type: integer
            default: 1
            minimum: 1
            maximum: 30
        - name: data_payload
          in: body
          description: Data payload to send in ICMP packets sent to the gateway monitor IP.
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: latencylow
          in: body
          schema:
            type: integer
            default: 200
            minimum: 1
          description: >-
            Low threshold (in milliseconds) for latency. Any packet that
            exceeds this threshold will trigger a minor latency gateway
            event.
        - name: latencyhigh
          in: body
          schema:
            type: integer
            default: 500
          description: >-
            High threshold (in milliseconds) for latency. Any packet that
            exceeds this threshold will trigger a major latency gateway
            event. This value must be greater than the `latencylow` value.
        - name: losslow
          in: body
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: >-
            Low threshold (in %) for packet loss. If total packet loss
            exceeds this percentage, a minor packet loss gateway event will be
            triggered.
        - name: losshigh
          in: body
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: >-
            High threshold (in %) for packet loss. If total packet loss
            exceeds this percentage, a major packet loss gateway event will be
            triggered. This value must be greater than the `losslow` value.
        - name: interval
          in: body
          description: How often (in milliseconds) gateway monitor ICMP probes will be sent.
          schema:
            type: integer
            default: 500
            minimum: 1
            maximum: 3600000
        - name: loss_interval
          in: body
          schema:
            type: integer
            default: 2000
          description: >-
            How long (in milliseconds) the gateway monitor will wait for
            response packets before considering the packet lost. This value must
            be greater than or equal to the `latencyhigh` value.
        - name: time_period
          in: body
          schema:
            type: integer
            default: 60000
          description: >-
            Time period (in milliseconds) for gateway monitor metrics to be averaged. This value must be greater than 
            twice the `interval` value plus the `loss_interval` value.
        - name: alert_interval
          in: body
          schema:
            type: integer
            default: 1000
          description: >-
            Time interval (in milliseconds) which alert conditions will be
            checked. This value must be greater than or equal to the `interval`
            value.
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this gateway to be applied
            immediately, or simply written to the configuration to be applied
            later. Typically, if you are creating multiple gateways at once it
            is best to set this to false and apply the changes afterwards using
            the `/api/v1/routing/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Routing > Gateway
      summary: Update gateway
      description: >-
        Update an existing gateway.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-gateways-editgateway`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: 0
                name: UPDATED_EXAMPLE_GATEWAY
                ipprotocol: inet6
                gateway: 2001:0db8:85a3:0000:0000:8a2e:0370:7334
                monitor: 2001:0db8:85a3:0000:0000:8a2e:0370:7334
                descr: Updated E2E Test
                disabled: true
                action_disable: true
                monitor_disable: true
                weight: 2
                data_payload: 5
                latencylow: 300
                latencyhigh: 600
                interval: 2100
                loss_interval: 2500
                action_interval: 1040
                time_period: 66000
                losslow: 5
                losshigh: 10
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            ID of the gateway to update. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: interface
          in: body
          schema:
            type: string
          description: >-
            Interface the gateway will apply to. You may specify
            either the interface's descriptive name, the pfSense ID (wan, lan,
            optx), or the real interface ID (e.g. igb0).
        - name: ipprotocol
          in: body
          description: IP protocol this gateway will apply to.
          schema:
            type: string
            enum: ["inet", "inet6"]
        - name: name
          in: body
          schema:
            type: string
          description: >- 
            Descriptive name for this gateway. This name must be unique,
            and can only contain alphanumeric characters and underscores.
        - name: gateway
          in: body
          schema:
            type: string
          description: >-
            IP address of the gateway. This value must be a valid IPv4
            address if  `ipprotocol` is set to `inet`, or a valid IPv6 
            address if `ipprotocol` is set to `inet6`.
        - name: monitor
          in: body
          schema:
            type: string
          description: >-
            IP address used to monitor this gateway. This is only necessary if the `gateway` IP does not accept ICMP probes.
            Defaults to the `gateway` value.
        - name: disabled
          in: body
          description: Disable this gateway.
          schema:
            type: boolean
            default: false
        - name: monitor_disable
          in: body
          description: Disable gateway monitoring for this gateway.
          schema:
            type: boolean
            default: false
        - name: action_disable
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Disable any action taken on gateway events for this gateway. This
            will consider the gateway as always up.
        - name: force_down
          in: body
          description: Force this gateway to always be considered down.
          schema:
            type: boolean
            default: false
        - name: descr
          in: body
          description: Description for this gateway.
          schema:
            type: string
        - name: weight
          in: body
          description: Gateway's weight when utilizing gateway load balancing within a gateway group.
          schema:
            type: integer
            default: 1
            minimum: 1
            maximum: 30
        - name: data_payload
          in: body
          description: Data payload to send in ICMP packets sent to the gateway monitor IP.
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: latencylow
          in: body
          schema:
            type: integer
            default: 200
            minimum: 1
          description: >-
            Low threshold (in milliseconds) for latency. Any packet that
            exceeds this threshold will trigger a minor latency gateway
            event.
        - name: latencyhigh
          in: body
          schema:
            type: integer
            default: 500
          description: >-
            High threshold (in milliseconds) for latency. Any packet that
            exceeds this threshold will trigger a major latency gateway
            event. This value must be greater than the `latencylow` value.
        - name: losslow
          in: body
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: >-
            Low threshold (in %) for packet loss. If total packet loss
            exceeds this percentage, a minor packet loss gateway event will be
            triggered.
        - name: losshigh
          in: body
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: >-
            High threshold (in %) for packet loss. If total packet loss
            exceeds this percentage, a major packet loss gateway event will be
            triggered. This value must be greater than the `losslow` value.
        - name: interval
          in: body
          description: How often (in milliseconds) gateway monitor ICMP probes will be sent.
          schema:
            type: integer
            default: 500
            minimum: 1
            maximum: 3600000
        - name: loss_interval
          in: body
          schema:
            type: integer
            default: 2000
          description: >-
            How long (in milliseconds) the gateway monitor will wait for
            response packets before considering the packet lost. This value must
            be greater than or equal to the `latencyhigh` value.
        - name: time_period
          in: body
          schema:
            type: integer
            default: 60000
          description: >-
            Time period (in milliseconds) for gateway monitor metrics to be averaged. This value must be greater than 
            twice the `interval` value plus the `loss_interval` value.
        - name: alert_interval
          in: body
          schema:
            type: integer
            default: 1000
          description: >-
            Time interval (in milliseconds) which alert conditions will be
            checked. This value must be greater than or equal to the `interval`
            value.
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this gateway to be applied
            immediately, or simply written to the configuration to be applied
            later. Typically, if you are creating multiple gateways at once it
            is best to set this to false and apply the changes afterwards using
            the `/api/v1/routing/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/routing/static_route:
    get:
      tags:
        - Routing > Static Route
      summary: Read static routes
      description: >-
        Read existing static routes.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-staticroutes`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Routing > Static Route
      summary: Delete static route
      description: >-
        Delete existing static routes. __Note: route deletions will be applied
        immediately, there is no need to apply routing changes
        afterwards__<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-staticroutes-editroute`]
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            ID of the static route to delete. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - Routing > Static Route
      summary: Create static route
      description: >-
        Create a new static route.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-staticroutes-editroute`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                network: 10.1.1.1/24
                gateway: WAN_DHCP
      parameters:
        - name: network
          in: body
          description: IPv4 CIDR, IPv6 CIDR or network alias this route will apply to.
          required: true
          schema:
            type: string
        - name: gateway
          in: body
          description: Name of the gateway traffic matching this route will use.
          required: true
          schema:
            type: string
        - name: descr
          in: body
          description: Description for this route.
          schema:
            type: string
            default: ""
        - name: disabled
          in: body
          description: Disable this route.
          schema:
            type: boolean
            default: false
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this route to be applied
            immediately, or simply written to the configuration to be applied
            later. Typically, if you are creating multiple routes at once it Is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/routing/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Routing > Static Route
      summary: Update static route
      description: >-
        Update an existing static route.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-staticroutes-editroute`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: 0
                network: 10.1.2.0/24
                gateway: WAN_DHCP
                descr: New Description
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            ID of the static route to update. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: network
          in: body
          description: IPv4 CIDR, IPv6 CIDR or network alias this route will apply to.
          schema:
            type: string
        - name: gateway
          in: body
          description: Name of the gateway traffic matching this route will use.
          schema:
            type: string
        - name: descr
          in: body
          description: Description for this route.
          schema:
            type: string
            default: ""
        - name: disabled
          in: body
          description: Disable this route.
          schema:
            type: boolean
            default: false
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this route to be applied
            immediately, or simply written to the configuration to be applied
            later. Typically, if you are creating multiple routes at once it Is
            best to set this to false and apply the changes afterwards using the
            `/api/v1/routing/apply` endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/routing/apply:
    post:
      tags:
        - Routing > Apply
      summary: Apply routing changes
      description: >-
        Apply pending routing changes.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-gateways`, `page-system-gateways-editgateway`,
        `page-system-staticroutes`, `page-system-staticroutes-editroute`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/status/carp:
    get:
      tags:
        - Status > CARP
      summary: Read CARP status
      description: >-
        Read the CARP (failover) status.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-carp`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Status > CARP
      summary: Update CARP status
      description: >-
        Update the CARP (failover) status.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-carp`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                enable: true
                maintenance_mode: true
      parameters:
        - name: enable
          in: body
          schema:
            type: boolean
          description: Enable or disable CARP.
        - name: maintenance_mode
          in: body
          schema:
            type: boolean
          description: Enable or disable CARP maintenance mode.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/status/openvpn:
    get:
      tags:
        - Status > OpenVPN
      summary: Read OpenVPN status
      description: >-
        Read the OpenVPN status.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-openvpn`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/status/log/system:
    get:
      tags:
        - Status > Log
      summary: Read system log
      description: >-
        Read the system.log file.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-diagnostics-logs-system`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/status/log/firewall:
    get:
      tags:
        - Status > Log
      summary: Read firewall log
      description: >-
        Read the filter.log file.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-diagnostics-logs-firewall`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/status/log/dhcp:
    get:
      tags:
        - Status > Log
      summary: Read DHCP log
      description: >-
        Read the dhcpd.log file.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-diagnostics-logs-dhcp`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/status/log/config_history:
    get:
      tags:
        - Status > Log
      summary: Read configuration history log
      description: >-
        Read the configuration history log.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-diagnostics-configurationhistory`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/status/gateway:
    get:
      tags:
        - Status > Gateway
      summary: Read gateway status
      description: >-
        Read gateway status and metrics.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-gateway`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/status/interface:
    get:
      tags:
        - Status > Interface
      summary: Read interface status
      description: >-
        Read interface status and metrics.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-interfaces`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/status/system:
    get:
      tags:
        - Status > System
      summary: Read system status
      description: >-
        Read system status and metrics. All usage values are represented as a
        decimal percentage. Temperature readings require thermal sensor and/or
        driver configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-dashboard-widgets`, `page-dashboard-all`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/openvpn/csc:
    get:
      tags:
        - Services > OpenVPN > CSC
      summary: Read OpenVPN client specific overrides
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - Services > OpenVPN > CSC
      summary: Create OpenVPN client specific override
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                server_list: 1, 2, 3
                custom_options: ifconfig-push xxx.xxx.xxx.xxx 255.255.255.0;
                disable: true
                common_name: commonname
                block: true
                description: An override, that is specific...
                tunnel_network: 10.0.8.5/24
                tunnel_networkv6: 2001:db9:1:1::100/64
                local_network: 10.0.9.5/24, 10.0.8.5/24, 10.0.10.5/24
                local_networkv6: >-
                  2001:db9:1:1::100/64, 2002:db9:1:1::100/64,
                  2003:db9:1:1::100/64
                remote_network: 10.0.9.5/24, 10.0.8.5/24, 10.0.10.5/24
                remote_networkv6: >-
                  2001:db9:1:1::100/64, 2002:db9:1:1::100/64,
                  2003:db9:1:1::100/64
                redirect_gateway: true
                prevent_server_definitions: true
                remove_server_routes: true
                dns_domain: google.com
                dns_servers: 8.8.8.8, 8.8.4.4, 8.8.3.3, 8.8.2.2
                ntp_servers: 192.168.56.101, 192.168.56.102
                netbios_enable: true
                netbios_node_type: p
                netbios_scope: '5'
                wins_servers: 192.168.56.103, 192.168.56.104
      parameters:
        - name: server_list
          in: body
          schema:
            type: string
          description: >-
            Comma separated string containing the ids of the OpenVPN servers
            that use this override. Omitting this activates the override for all
            servers.
        - name: custom_options
          in: body
          example: 'push "route 10.0.0.0 255.255.255.0"'
          schema:
            type: string
          description: >-
            Additional options to add for this client specific
            override, separated by a semicolon.
        - name: disable
          in: body
          schema:
            type: boolean
            default: false
          description: Disable this override without removing it.
        - name: common_name
          in: body
          required: true
          schema:
            type: string
          description: >-
            X.509 common name for the client certificate, or the
            username for VPNs utilizing password authentication. This match is
            case sensitive.
        - name: block
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Prevents the client from connecting to this server. Do not use this
            option to permanently disable a client due to a compromised key or
            password. Use a CRL (certificate revocation list) instead.
        - name: description
          in: body
          schema:
            type: string
            default: ""
          description: Description for administrative reference.
        - name: tunnel_network
          in: body
          schema:
            type: string
            default: ""
          description: >-
            Virtual IPv4 network used for private communications between
            this client and the server expressed using CIDR (e.g. 10.0.8.5/24).

            With subnet topology, enter the client IP address and the subnet
            mask must match the IPv4 Tunnel Network on the server.

            With net30 topology, the first network address of the /30 is assumed
            to be the server address and the second network address will be
            assigned to the client.
        - name: tunnel_networkv6
          in: body
          schema:
            type: string
            default: ""
          description: >-
            Virtual IPv6 network used for private communications between
            this client and the server expressed using prefix (e.g.
            2001:db9:1:1::100/64).

            Enter the client IPv6 address and prefix. The prefix must match the
            IPv6 Tunnel Network prefix on the server.
        - name: local_network
          in: body
          schema:
            type: string
            default: ""
          description: >-
            IPv4 server-side networks that will be accessible from
            this particular client. Expressed as a comma-separated list of one
            or more CIDR networks.

            NOTE: Networks do not need to be specified here if they have already
            been defined on the main server configuration.
        - name: local_networkv6
          in: body
          schema:
            type: string
            default: ""
          description: >-
            IPv6 server-side networks that will be accessible from
            this particular client. Expressed as a comma-separated list of one
            or more IP/PREFIX networks.

            NOTE: Networks do not need to be specified here if they have already
            been defined on the main server configuration.
        - name: remote_network
          in: body
          schema:
            type: string
            default: ""
          description: >-
            IPv4 client-side networks that will be routed to this
            client specifically using iroute, so that a site-to-site VPN can be
            established. Expressed as a comma-separated list of one or more CIDR
            ranges. May be left blank if there are no client-side networks to be
            routed.

            NOTE: Remember to add these subnets to the IPv4 Remote Networks list
            on the corresponding OpenVPN server settings.
        - name: remote_networkv6
          in: body
          schema:
            type: string
            default: ""
          description: >-
            IPv6 client-side networks that will be routed to this
            client specifically using iroute, so that a site-to-site VPN can be
            established. Expressed as a comma-separated list of one or more
            IP/PREFIX networks. May be left blank if there are no client-side
            networks to be routed.

            NOTE: Remember to add these subnets to the IPv6 Remote Networks list
            on the corresponding OpenVPN server settings.
        - name: redirect_gateway
          in: body
          schema:
            type: boolean
            default: false
          description: Force all client generated traffic through the tunnel.
        - name: prevent_server_definitions
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Prevent this client from receiving any server-defined client
            settings.
        - name: remove_server_routes
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Prevent this client from receiving any server-defined routes without
            removing any other options.
        - name: dns_domain
          in: body
          schema:
            type: string
            default: ""
          description: Domain name for DNS to provide to the client.
        - name: dns_servers
          in: body
          schema:
            type: string
            default: ""
          description: >-
            Comma-separated list of no more than 4 DNS server IP addresses
            (i.e. 8.8.8.8). Any more than the first four are ignored. This list
            is provided to the clent.
        - name: ntp_servers
          in: body
          schema:
            type: string
            default: ""
          description: >-
            Comma-separated list of no more than 2 NTP server IP addresses.
            Any more than the first two are ignored.
        - name: netbios_enable
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Enable NetBIOS over TCP/IP. If this option is not set, all
            NetBIOS-over-TCP/IP options (including WINS) will be disabled.
        - name: netbios_node_type
          in: body
          schema:
            type: string
            enum: [b, p, m, h]
          description: >-
            Possible options: b (broadcasts), p (point-to-point name queries to
            a WINS server), m (broadcast then query name server), and h (query
            name server, then broadcast). This parameter takes a single letter
            either b, p, m, or h. Any other string will result in this option
            being set to none.
        - name: netbios_scope
          in: body
          schema:
            type: string
            default: ""
          description: >-
            NetBIOS Scope ID provides an extended naming service for NetBIOS
            over TCP/IP. The NetBIOS scope ID isolates NetBIOS traffic on a
            single network to only those nodes with the same NetBIOS scope ID.
        - name: wins_servers
          in: body
          schema:
            type: string
            default: ""
          description: >-
            Comma-separated list of no more than 2 WINS server IP addresses.
            Any more than the first two are ignored.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Services > OpenVPN > CSC
      summary: Update OpenVPN client specific override
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                refid: 0
                server_list: 1, 2
                custom_options: ifconfig-push 10.10.10.1 255.255.255.0;
                disable: false
                common_name: commonname2
                block: false
                description: An override, that is VERY specific...
                tunnel_network: 10.0.8.6/24
                tunnel_networkv6: 2001:dc9:1:1::100/64
                local_network: 10.0.9.6/24, 10.0.8.5/24, 10.0.10.6/24
                local_networkv6: >-
                  2001:dc9:1:1::100/64, 2002:dc9:1:1::100/64,
                  2003:dc9:1:1::100/64
                remote_network: 10.0.9.6/24, 10.0.8.5/24, 10.0.10.6/24
                remote_networkv6: >-
                  2001:dc9:1:1::100/64, 2002:dc9:1:1::100/64,
                  2003:dc9:1:1::100/64
                redirect_gateway: false
                prevent_server_definitions: false
                remove_server_routes: false
                dns_domain: github.com
                dns_servers: 8.8.8.7, 8.8.4.7, 8.8.3.7, 8.8.2.7
                ntp_servers: 192.168.56.106, 192.168.56.107
                netbios_enable: false
                netbios_node_type: m
                netbios_scope: '42'
                wins_servers: 192.168.56.108, 192.168.56.194
      parameters:
        - name: id
          required: true
          in: body
          schema:
            type: string
          description: >-
            ID of the client specific override to update. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: server_list
          in: body
          schema:
            type: string
          description: >-
            Comma separated string containing the ids of the OpenVPN servers
            that use this override. Omitting this activates the override for all
            servers.
        - name: custom_options
          in: body
          example: 'push "route 10.0.0.0 255.255.255.0"'
          schema:
            type: string
          description: >-
            Additional options to add for this client specific
            override, separated by a semicolon.
        - name: disable
          in: body
          schema:
            type: boolean
            default: false
          description: Disable this override without removing it.
        - name: common_name
          in: body
          schema:
            type: string
          description: >-
            X.509 common name for the client certificate, or the
            username for VPNs utilizing password authentication. This match is
            case sensitive.
        - name: block
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Prevents the client from connecting to this server. Do not use this
            option to permanently disable a client due to a compromised key or
            password. Use a CRL (certificate revocation list) instead.
        - name: description
          in: body
          schema:
            type: string
            default: ""
          description: Description for administrative reference.
        - name: tunnel_network
          in: body
          schema:
            type: string
            default: ""
          description: >-
            Virtual IPv4 network used for private communications between
            this client and the server expressed using CIDR (e.g. 10.0.8.5/24).

            With subnet topology, enter the client IP address and the subnet
            mask must match the IPv4 Tunnel Network on the server.

            With net30 topology, the first network address of the /30 is assumed
            to be the server address and the second network address will be
            assigned to the client.
        - name: tunnel_networkv6
          in: body
          schema:
            type: string
            default: ""
          description: >-
            Virtual IPv6 network used for private communications between
            this client and the server expressed using prefix (e.g.
            2001:db9:1:1::100/64).

            Enter the client IPv6 address and prefix. The prefix must match the
            IPv6 Tunnel Network prefix on the server.
        - name: local_network
          in: body
          schema:
            type: string
            default: ""
          description: >-
            IPv4 server-side networks that will be accessible from
            this particular client. Expressed as a comma-separated list of one
            or more CIDR networks.

            NOTE: Networks do not need to be specified here if they have already
            been defined on the main server configuration.
        - name: local_networkv6
          in: body
          schema:
            type: string
            default: ""
          description: >-
            IPv6 server-side networks that will be accessible from
            this particular client. Expressed as a comma-separated list of one
            or more IP/PREFIX networks.

            NOTE: Networks do not need to be specified here if they have already
            been defined on the main server configuration.
        - name: remote_network
          in: body
          schema:
            type: string
            default: ""
          description: >-
            IPv4 client-side networks that will be routed to this
            client specifically using iroute, so that a site-to-site VPN can be
            established. Expressed as a comma-separated list of one or more CIDR
            ranges. May be left blank if there are no client-side networks to be
            routed.

            NOTE: Remember to add these subnets to the IPv4 Remote Networks list
            on the corresponding OpenVPN server settings.
        - name: remote_networkv6
          in: body
          schema:
            type: string
            default: ""
          description: >-
            IPv6 client-side networks that will be routed to this
            client specifically using iroute, so that a site-to-site VPN can be
            established. Expressed as a comma-separated list of one or more
            IP/PREFIX networks. May be left blank if there are no client-side
            networks to be routed.

            NOTE: Remember to add these subnets to the IPv6 Remote Networks list
            on the corresponding OpenVPN server settings.
        - name: redirect_gateway
          in: body
          schema:
            type: boolean
            default: false
          description: Force all client generated traffic through the tunnel.
        - name: prevent_server_definitions
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Prevent this client from receiving any server-defined client
            settings.
        - name: remove_server_routes
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Prevent this client from receiving any server-defined routes without
            removing any other options.
        - name: dns_domain
          in: body
          schema:
            type: string
            default: ""
          description: Domain name for DNS to provide to the client.
        - name: dns_servers
          in: body
          schema:
            type: string
            default: ""
          description: >-
            Comma-separated list of no more than 4 DNS server IP addresses
            (i.e. 8.8.8.8). Any more than the first four are ignored. This list
            is provided to the clent.
        - name: ntp_servers
          in: body
          schema:
            type: string
            default: ""
          description: >-
            Comma-separated list of no more than 2 NTP server IP addresses.
            Any more than the first two are ignored.
        - name: netbios_enable
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Enable NetBIOS over TCP/IP. If this option is not set, all
            NetBIOS-over-TCP/IP options (including WINS) will be disabled.
        - name: netbios_node_type
          in: body
          schema:
            type: string
            enum: [b, p, m, h]
          description: >-
            Possible options: b (broadcasts), p (point-to-point name queries to
            a WINS server), m (broadcast then query name server), and h (query
            name server, then broadcast). This parameter takes a single letter
            either b, p, m, or h. Any other string will result in this option
            being set to none.
        - name: netbios_scope
          in: body
          schema:
            type: string
            default: ""
          description: >-
            NetBIOS Scope ID provides an extended naming service for NetBIOS
            over TCP/IP. The NetBIOS scope ID isolates NetBIOS traffic on a
            single network to only those nodes with the same NetBIOS scope ID.
        - name: wins_servers
          in: body
          schema:
            type: string
            default: ""
          description: >-
            Comma-separated list of no more than 2 WINS server IP addresses.
            Any more than the first two are ignored.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Services > OpenVPN > CSC
      summary: Delete OpenVPN client specific override
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: string
          description: >-
            ID of the client specific override to update. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/unbound/access_list/row:
    post:
      tags:
        - Services > Unbound > Access List > Row
      summary: Add DNS Resolver (Unbound) access list row
      description: >-
        Add a new row (network entry) to an existing DNS Resolver (Unbound) access
        list.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsresolver-acls`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: 0
                acl_network: 10.0.0.0
                mask: 8
                description: Class A subnet
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            ID of the access list to apply this row to. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: acl_network
          in: body
          description: IPv4 or IPv6 address of the network to add to the access list.
          required: true
          schema:
            type: string
        - name: mask
          in: body
          required: true
          schema:
            type: integer
          description: >-
            Subnet mask of the `acl_network`. This must be a value
            between `0` and `32` for IPv4 addresses or `0` and `128` or IPv6 addresses.
        - name: description
          in: body
          description: Description of the access list row (optional)
          schema:
            type: string
            default: ""
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this access list row to be
            applied immediately, or simply written to the configuration to be
            applied later. Typically, if you are creating multiple access list
            rows at once it Is best to set this to false and apply the changes
            afterwards using the /api/v1/services/unbound/apply endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/unbound/access_list:
    get:
      tags:
        - Services > Unbound > Access List
      summary: Read DNS Resolver (Unbound) access lists
      description: >-
        Read configured DNS Resolver (Unbound) access lists.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsresolver-acls`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - Services > Unbound > Access List
      summary: Create DNS Resolver (Unbound) access list
      description: >-
        Create a new DNS Resolver (Unbound) access list.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsresolver-acls`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                aclname: Allow_All
                aclaction: allow
                description: Test ACL
                row:
                  - acl_network: 0.0.0.0
                    mask: 0
                    description: Test ACL entry
      parameters:
        - name: aclname
          in: body
          description: Name for this access list.
          schema:
            type: string
            default: ""
        - name: aclaction
          in: body
          description: Action this access list will enforce.
          required: true
          schema:
            type: string
            enum: ["allow", "deny", "refuse", "allow snoop", "deny nonlocal", "refuse nonlocal"]
        - name: description
          in: body
          description: Detailed description for this access list.
          schema:
            type: string
            default: ""
        - name: row
          in: body
          required: true
          example:
            - {"acl_network": "192.168.1.0", "mask": 32, "description": "Example IPv4 access list row"}
            - {"acl_network": "0::", "mask": 128, "description": "Example IPv6 access list row"}
          schema:
            type: array
            items:
              type: object
          description: >-
            Set networks to match for this access list. This must be an array of
            access list row objects and must contain at least one object. For
            more information on access list object fields, see documentation for
            /api/v1/services/unbound/access_list/row.
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not the DNS Resolver (Unbound) configuration should be reloaded
            immediately after. `true` to apply immediately, `false` to
            keep the changes pending. If `false`, the DNS Resolver (Unbound) configuration must
            be reloaded manually by calling the /api/v1/services/unbound/apply
            endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Services > Unbound > Access List
      summary: Update DNS Resolver (Unbound) access list
      description: >-
        Modify an existing DNS Resolver (Unbound) access list.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsresolver-acls`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: 0
                aclname: Deny_all
                aclaction: deny
                description: Updated example ACL
                row:
                  - acl_network: '0::'
                    mask: 0
                    description: Updated example ACL entry
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            ID of the access list to update. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: aclname
          in: body
          description: Name for this access list.
          schema:
            type: string
            default: ""
        - name: aclaction
          in: body
          description: Action this access list will enforce.
          schema:
            type: string
            enum: ["allow", "deny", "refuse", "allow snoop", "deny nonlocal", "refuse nonlocal"]
        - name: description
          in: body
          description: Detailed description for this access list.
          schema:
            type: string
            default: ""
        - name: row
          in: body
          example:
            - {"acl_network": "192.168.1.0", "mask": 32, "description": "Example IPv4 access list row"}
            - {"acl_network": "0::", "mask": 128, "description": "Example IPv6 access list row"}
          schema:
            type: array
            items:
              type: object
          description: >-
            Set networks to match for this access list. This must be an array of
            access list row objects and must contain at least one object. For
            more information on access list object fields, see documentation for
            /api/v1/services/unbound/access_list/row. Existing values will be overwritten.
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not the DNS Resolver (Unbound) configuration should be reloaded
            immediately after. `true` to apply immediately, `false` to
            keep the changes pending. If `false`, the DNS Resolver (Unbound) configuration must
            be reloaded manually by calling the /api/v1/services/unbound/apply
            endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Services > Unbound > Access List
      summary: Delete DNS Resolver (Unbound) access list
      description: >-
        Delete DNS Resolver (Unbound) access list.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsresolver-acls`]
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            ID of the access list to delete. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not the DNS Resolver (Unbound) configuration should be reloaded
            immediately after. `true` to apply immediately, `false` to
            keep the changes pending. If `false`, the DNS Resolver (Unbound) configuration must
            be reloaded manually by calling the /api/v1/services/unbound/apply
            endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/unbound/host_override/alias:
    post:
      tags:
        - Services > Unbound > Host Override > Alias
      summary: Create DNS Resolver (Unbound) host override alias
      description: >-
        Add a new host override alias to the DNS Resolver (Unbound).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsresolver-edithost`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: 0
                host: alias
                domain: example.com
                descr: Example alias
                apply: true
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: >-
            ID of the host override to apply this alias to. Refer to the 'Obtaining Object IDs' section in
            the documentation intro for help obtaining this ID.
        - name: host
          in: body
          description: Hostname of the alias.
          required: true
          schema:
            type: string
        - name: domain
          in: body
          description: Domain of the alias.
          required: true
          schema:
            type: string
        - name: description
          in: body
          description: Description of the alias.
          schema:
            type: string
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this host override alias to be
            applied immediately, or simply written to the configuration to be
            applied later. Typically, if you are creating multiple host override
            aliases at once it Is best to set this to false and apply the
            changes afterwards using the `/api/v1/services/unbound/apply`
            endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/unbound/host_override:
    post:
      tags:
        - Services > Unbound > Host Override
      summary: Create DNS Resolver (Unbound) host override
      description: >-
        Add a new host override to the DNS Resolver (Unbound).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsresolver-edithost`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                host: override
                domain: example.com
                ip: 127.0.0.1
                descr: Example host override
                aliases:
                  - host: alias
                    domain: example.com
                    descr: >-
                      Example alias
      parameters:
        - name: host
          in: body
          description: Hostname portion of the host override.
          required: true
          schema:
            type: string
          example: string
        - name: domain
          in: body
          description: Domain portion of the host override.
          required: true
          schema:
            type: string
        - name: ip
          in: body
          required: true
          example: [127.0.0.1]
          schema:
            type: array
            items:
              type: string
          description: >-
            IPv4 or IPv6 address this entry will resolve. This can
            be passed in as a string to resolve a single IP, or an array of
            strings to resolve multiple IPs. At least 1 value is required.
        - name: descr
          in: body
          description: Description of the host override.
          schema:
            type: string
        - name: aliases
          in: body
          example:
            - {"host": "example", "domain": "example.com", "descr": "Example alias 1"}
            - {"host": "example2", "domain": "example.com", "descr": "Example alias 2"}
          schema:
            type: array
            default: []
            items:
              type: object
          description: >-
            Host override aliases to associate with this host override.
            For more information on alias object fields, see documentation for
            /api/v1/services/unbound/host_override/alias.
        - name: apply
          in: body
          schema:
            type: boolean
            default: true
          description: >-
            Specify whether or not you would like this host override to be
            applied immediately, or simply written to the configuration to be
            applied later. Typically, if you are modifying multiple host
            overrides at once it Is best to set this to false and apply the
            changes afterwards using the `/api/v1/services/unbound/apply`
            endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Services > Unbound > Host Override
      summary: Update DNS Resolver (Unbound) host override
      description: >-
        Modify host overrides from the DNS Resolver (Unbound).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsresolver-edithost`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: 0
                host: updated-host-override
                domain: example.com
                ip: 127.0.0.2
                descr: Updated example host override
                aliases:
                  - host: updated-alias-1
                    domain: example.com
                    descr: Update example alias 1
                  - host: updated-alias-2
                    domain: example.com
                    descr: Update example alias 2
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: ID of the host override to update. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: host
          in: body
          description: Hostname portion of the host override.
          schema:
            type: string
          example: string
        - name: domain
          in: body
          description: Domain portion of the host override.
          schema:
            type: string
        - name: ip
          in: body
          example: [127.0.0.1]
          schema:
            type: array
            items:
              type: string
          description: >-
            IPv4 or IPv6 address this entry will resolve. This can
            be passed in as a string to resolve a single IP, or an array of
            strings to resolve multiple IPs. At least 1 value is required.
            Any existing values will be overwritten.
        - name: descr
          in: body
          description: Description of the host override.
          schema:
            type: string
        - name: aliases
          in: body
          example:
            - {"host": "example", "domain": "example.com", "descr": "Example alias 1"}
            - {"host": "example2", "domain": "example.com", "descr": "Example alias 2"}
          schema:
            type: array
            default: []
            items:
              type: object
          description: >-
            Host override aliases to associate with this host override.
            For more information on alias object fields, see documentation for
            /api/v1/services/unbound/host_override/alias. Existing entries will be
            overwritten.
        - name: apply
          in: body
          schema:
            type: boolean
            default: true
          description: >-
            Specify whether or not you would like this host override to be
            applied immediately, or simply written to the configuration to be
            applied later. Typically, if you are modifying multiple host
            overrides at once it Is best to set this to false and apply the
            changes afterwards using the `/api/v1/services/unbound/apply`
            endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Services > Unbound > Host Override
      summary: Delete DNS Resolver (Unbound) host override
      description: >-
        Delete host overrides from the DNS Resolver (Unbound).<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsresolver-edithost`]
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: ID of the host override to delete. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: apply
          in: body
          schema:
            type: string
          description: >-
            Specify whether or not you would like this deletion to be
            applied immediately, or simply written to the configuration to be
            applied later. Typically, if you are modifying multiple host
            overrides at once it Is best to set this to false and apply the
            changes afterwards using the `/api/v1/services/unbound/apply`
            endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    get:
      tags:
        - Services > Unbound > Host Override
      summary: Read DNS Resolver (Unbound) host overrides
      description: >-
        Read host overrides from the DNS Resolver (Unbound).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsresolver`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/unbound:
    get:
      tags:
        - Services > Unbound
      summary: Read DNS Resolver (Unbound) configuration
      description: >-
        Read the entire DNS Resolver (Unbound) configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsresolver`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/unbound/start:
    post:
      tags:
        - Services > Unbound
      summary: Start DNS Resolver (Unbound) service
      description: >-
        Start the DNS Resolver (Unbound) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/unbound/restart:
    post:
      tags:
        - Services > Unbound
      summary: Restart DNS Resolver (Unbound) service
      description: >-
        Restart the DNS Resolver (Unbound) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/unbound/stop:
    post:
      tags:
        - Services > Unbound
      summary: Stop DNS Resolver (Unbound) service
      description: >-
        Stop the DNS Resolver (Unbound) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/unbound/apply:
    post:
      tags:
        - Services > Unbound
      summary: Apply pending DNS Resolver (Unbound) changes
      description: >-
        Apply pending DNS Resolver (Unbound) changes.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsresolver`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/dnsmasq/host_override/alias:
    post:
      tags:
        - Services > DNSMASQ > Host Override > Alias
      summary: Create DNS Forwarder (dnsmasq) host override alias
      description: >-
        Add a new host override alias to the DNS Forwarder (dnsmasq).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsforwarder-edithost`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: 0
                host: alias
                domain: example.com
                descr: Example alias
                apply: true
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: ID of the host override to apply this alias to. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: host
          in: body
          description: Hostname of the alias.
          required: true
          schema:
            type: string
        - name: domain
          in: body
          description: Domain of the alias
          required: true
          schema:
            type: string
        - name: description
          in: body
          description: Description for the alias.
          schema:
            type: string
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this host override alias to be
            applied immediately, or simply written to the configuration to be
            applied later. Typically, if you are creating multiple host override
            aliases at once it Is best to set this to false and apply the
            changes afterwards using the `/api/v1/services/dnsmasq/apply`
            endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/dnsmasq/host_override:
    post:
      tags:
        - Services > DNSMASQ > Host Override
      summary: Create DNS Forwarder (dnsmasq) host override
      description: >-
        Add a new host override to the DNS Forwarder (dnsmasq).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsforwarder-edithost`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                host: host-override
                domain: example.com
                ip: 127.0.0.1
                descr: Example host override
                aliases:
                  - host: alias
                    domain: example.com
                    descr: Example alias
      parameters:
        - name: host
          in: body
          description: Hostname of the host override.
          required: true
          schema:
            type: string
        - name: domain
          in: body
          description: Domain of the host override.
          required: true
          schema:
            type: string
        - name: ip
          in: body
          description: IPv4 or IPv6 of the host override.
          required: true
          schema:
            type: string
        - name: descr
          in: body
          description: Description of the host override.
          schema:
            type: string
        - name: aliases
          in: body
          example:
            - {"host": "example", "domain": "example.com", "descr": "Example alias 1"}
            - {"host": "example2", "domain": "example.com", "descr": "Example alias 2"}
          schema:
            type: array
            default: []
            items:
              type: object
          description: >-
            Host override aliases to associate with this host override.
            For more information on alias object fields, see documentation for
            /api/v1/services/dnsmasq/host_override/alias.
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this host override to be
            applied immediately, or simply written to the configuration to be
            applied later. Typically, if you are modifying multiple host
            overrides at once it Is best to set this to false and apply the
            changes afterwards using the `/api/v1/services/dnsmasq/apply`
            endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Services > DNSMASQ > Host Override
      summary: Update DNS Forwarder (dnsmasq) host override
      description: >-
        Modify an existing host override from the DNS Forwarder (dnsmasq).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsforwarder-edithost`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                host: update-host-override
                domain: example.com
                ip: 127.0.0.2
                descr: Updated host override
                aliases:
                  - host: alias1
                    domain: example.com
                    descr: Example alias 1
                  - host: alias2
                    domain: example.com
                    descr: Example alias 2
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: ID of the host override to update. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: host
          in: body
          description: Hostname of the host override.
          schema:
            type: string
        - name: domain
          in: body
          description: Domain of the host override.
          schema:
            type: string
        - name: ip
          in: body
          description: IPv4 or IPv6 of the host override.
          schema:
            type: string
        - name: descr
          in: body
          description: Description of the host override.
          schema:
            type: string
        - name: aliases
          in: body
          example:
            - {"host": "example", "domain": "example.com", "descr": "Example alias 1"}
            - {"host": "example2", "domain": "example.com", "descr": "Example alias 2"}
          schema:
            type: array
            default: []
            items:
              type: object
          description: >-
            Host override aliases to associate with this host override.
            For more information on alias object fields, see documentation for
            /api/v1/services/dnsmasq/host_override/alias. Existing entries will
            be overwritten.
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this host override to be
            applied immediately, or simply written to the configuration to be
            applied later. Typically, if you are modifying multiple host
            overrides at once it Is best to set this to false and apply the
            changes afterwards using the `/api/v1/services/dnsmasq/apply`
            endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Services > DNSMASQ > Host Override
      summary: Delete DNS Forwarder (dnsmasq) host override
      description: >-
        Delete an existing host override from the DNS Forwarder (dnsmasq).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsforwarder-edithost`]
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: ID of the host override to delete. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: apply
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not you would like this host override to be
            applied immediately, or simply written to the configuration to be
            applied later. Typically, if you are modifying multiple host
            overrides at once it Is best to set this to false and apply the
            changes afterwards using the `/api/v1/services/dnsmasq/apply`
            endpoint.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    get:
      tags:
        - Services > DNSMASQ > Host Override
      summary: Read DNS Forwarder (dnsmasq) host overrides
      description: >-
        Read host overrides from the DNS Forwarder (dnsmasq).<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsforwarder`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/dnsmasq:
    get:
      tags:
        - Services > DNSMASQ
      summary: Read DNS Forwarder (dnsmasq) configuration
      description: >-
        Read the entire DNS Forwarder (dnsmasq) configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsforwarder`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/dnsmasq/start:
    post:
      tags:
        - Services > DNSMASQ
      summary: Start DNS Forwarder (dnsmasq) service
      description: >-
        Start the DNS Forwarder (dnsmasq) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/dnsmasq/restart:
    post:
      tags:
        - Services > DNSMASQ
      summary: Restart DNS Forwarder (dnsmasq) service
      description: >-
        Restart the DNS Forwarder (dnsmasq) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/dnsmasq/stop:
    post:
      tags:
        - Services > DNSMASQ
      summary: Stop DNS Forwarder (dnsmasq) service
      description: >-
        Stop the DNS Forwarder (dnsmasq) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/dnsmasq/apply:
    post:
      tags:
        - Services > DNSMASQ
      summary: Apply pending DNS Forwarder (dnsmasq) changes
      description: >-
        Apply pending DNS Forwarder (dnsmasq) changes.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dnsforwarder`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/dhcpd/static_mapping:
    get:
      tags:
        - Services > DHCPD > Static Mapping
      summary: Read DHCP Server (dhcpd) static mappings
      description: >-
        Read existing DHCP Server (dhcpd) static mappings.<br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dhcpserver-editstaticmapping`]
      parameters:
        - name: interface
          in: body
          required: true
          schema:
            type: string
          description: >-
            Interface to read static mappings from. You may specify either the interface's descriptive name, the pfSense
            interface ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0).
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    post:
      tags:
        - Services > DHCPD > Static Mapping
      summary: Create DHCP Server (dhcpd) static mapping
      description: >-
        Create a new DHCP Server (dhcpd) static mapping.<br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dhcpserver-editstaticmapping`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                interface: lan
                mac: ac:de:48:00:11:22
                ipaddr: 192.168.1.254
                cid: a098b-zpe9s-1vr45
                descr: Example DHCP server static mapping
                hostname: example-host
                domain: example.com
                dnsserver:
                  - 1.1.1.1
                domainsearchlist:
                  - example.com
                gateway: 192.168.1.1
                arp_table_static_entry: true
      parameters:
        - name: interface
          in: body
          required: true
          schema:
            type: string
          description: >-
            Interface to assign this static mapping to. You may specify either the interface's descriptive name, the pfSense
            interface ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0).
        - name: mac
          in: body
          description: MAC address of the host this mapping will apply to.
          required: true
          schema:
            type: string
        - name: ipaddr
          in: body
          description: IPv4 address the MAC address will be assigned.
          required: true
          schema:
            type: string
        - name: cid
          in: body
          schema:
            type: string
          description: Set a client identifier.
        - name: hostname
          in: body
          schema:
            type: string
          description: Hostname for this host.
        - name: domain
          in: body
          description: Domain for this host.
          schema:
            type: string
        - name: descr
          in: body
          description: Description for this mapping.
          schema:
            type: string
        - name: dnsserver
          in: body
          description: DNS servers to assign this client. Each value must be a valid IPv4 address.
          schema:
            type: array
            items:
              type: string
        - name: domainsearchlist
          in: body
          description: Search domains to assign to this host. Each value must be a valid domain name.
          schema:
            type: array
            items:
              type: string
        - name: gateway
          in: body
          description: Gateway to assign this host. This value must be a valid IPv4 address within the interface's subnet.
          schema:
            type: string
        - name: arp_table_static_entry
          in: body
          description: Create a static ARP entry for this static mapping.
          schema:
            type: boolean
            default: false
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Services > DHCPD > Static Mapping
      summary: Update DHCP Server (dhcpd) static mapping
      description: >-
        Update an existing DHCP Server (dhcpd) static mapping.<br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dhcpserver-editstaticmapping`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: 0
                interface: lan
                mac: ac:de:48:00:11:22
                ipaddr: 192.168.1.250
                cid: updated-a098b-zpe9s-1vr45
                descr: Updated example static mapping
                hostname: updated-example-mapping
                domain: updated.example.com
                dnsserver:
                  - 8.8.8.8
                  - 8.8.4.4
                  - 1.1.1.1
                domainsearchlist:
                  - updated.example.com
                  - extra.example.com
                gateway: 192.168.1.2
                arp_table_static_entry: false
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: ID of the static mapping to update. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: interface
          in: body
          required: true
          schema:
            type: string
          description: >-
            Interface of the static mapping to update. You may specify either the interface's descriptive name, the pfSense
            interface ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0).
        - name: mac
          in: body
          description: MAC address of the host this mapping will apply to.
          schema:
            type: string
        - name: ipaddr
          in: body
          description: IPv4 address the MAC address will be assigned.
          schema:
            type: string
        - name: cid
          in: body
          schema:
            type: string
          description: Set a client identifier.
        - name: hostname
          in: body
          schema:
            type: string
          description: Hostname for this host.
        - name: domain
          in: body
          description: Domain for this host.
          schema:
            type: string
        - name: descr
          in: body
          description: Description for this mapping.
          schema:
            type: string
        - name: dnsserver
          in: body
          description: DNS servers to assign this client. Each value must be a valid IPv4 address.
          schema:
            type: array
            items:
              type: string
        - name: domainsearchlist
          in: body
          description: Search domains to assign to this host. Each value must be a valid domain name.
          schema:
            type: array
            items:
              type: string
        - name: gateway
          in: body
          schema:
            type: string
          description: >-
            Gateway to assign this host. This value must be a valid IPv4 address within the interface's subnet. You 
            may pass in an empty string to revert to the default gateway.
        - name: arp_table_static_entry
          in: body
          description: Create a static ARP entry for this static mapping.
          schema:
            type: boolean
            default: false
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Services > DHCPD > Static Mapping
      summary: Delete DHCP Server (dhcpd) static mapping
      description: >-
        Delete an existing DHCP Server (dhcpd) static mapping.<br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dhcpserver-editstaticmapping`]
      parameters:
        - name: id
          in: body
          required: true
          schema:
            type: integer
          description: ID of the static mapping to delete. Refer to the 'Obtaining Object IDs' section in the documentation
            intro for help obtaining this ID.
        - name: interface
          in: body
          required: true
          schema:
            type: string
          description: >-
            Interface of the static mapping to delete. You may specify either the interface's descriptive name, the pfSense
            interface ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0).
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/dhcpd/options:
    post:
      tags:
        - Services > DHCPD > Options
      summary: Set DHCP Server (dhcpd) option
      description: >-
        Set new DHCP Server (dhcpd) option.<br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dhcpserver`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                interface: lan
                number: 2
                type: boolean
                value: true
      parameters:
        - name: interface
          in: body
          required: true
          schema:
            type: string
          description: >-
            Interface to create the DHCP option for. You may
            specify either the interface's descriptive name, the pfSense ID
            (wan, lan, optx), or the real interface ID (e.g. igb0).
        - name: number
          in: body
          description: DHCP option number to set. This must be a value between 1 and 254.
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 254
        - name: type
          in: body
          description: DHCP option type.
          required: true
          schema:
            type: string
            enum:
              - "text"
              - "string"
              - "boolean"
              - "unsigned integer 8"
              - "unsigned integer 16"
              - "unsigned integer 32"
              - "signed integer 8"
              - "signed integer 16"
              - "signed integer 32"
              - "ip-address"
        - name: value
          in: body
          required: true
          schema:
            oneOf:
              - type: string
              - type: integer
              - type: boolean
          description: >-
            DHCP option's value. If `type` is set to `text`, this
            field must be string that does not contain quotations marks. If
            `type` is set to `string`, this field must be string enclosed in
            quotes or is a hexadecimal value. If `type` is set to `boolean`,
            this value must be `true` or `false` as a boolean OR `true`,
            `false`, `on` or `off` as a string. If `type` is set to `unsigned
            integer 8`, this field must be an integer between `1` and `255`. If
            `type` is set to `unsigned integer 16`, this field must be an
            integer between `1` and `65535`. If `type` is set to `unsigned
            integer 32`, this field must be an integer between `1` and
            `4294967295`. If `type` is set to `signed integer 8`, this field
            must be an integer between `-128` and `127`. If `type` is set to
            `signed integer 16`, this field must be an integer between `-32768`
            and `32767`. If `type` is set to `signed integer 32`, this field
            must be an integer between `-2147483648` and `2147483647`. If `type`
            is set to `ip-address`, this field must be a string containing a
            valid IPv4 address or hostname.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/dhcpd/lease:
    get:
      tags:
        - Services > DHCPD > Lease
      summary: Read DHCP Server (dhcpd) leases
      description: >-
        Read the current DHCP Server (dhcpd) leases.<br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-dhcpleases`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/dhcpd/start:
    post:
      tags:
        - Services > DHCPD
      summary: Start DHCP Server (dhcpd) service
      description: >-
        Start the DHCP Server (dhcpd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/dhcpd:
    get:
      tags:
        - Services > DHCPD
      summary: Read DHCP Server (dhcpd) configuration
      description: >-
        Read the entire DHCP Server (dhcpd) configuration.<br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dhcpserverpage-services-dhcpserver`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Services > DHCPD
      summary: Update DHCP Server (dhcpd) configuration
      description: >-
        Update the current DHCP Server (dhcpd) configuration for a specified interface.<br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dhcpserver`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                interface: lan
                enable: true
                ignorebootp: false
                denyunknown: false
                range_from: 192.168.1.25
                range_to: 192.168.1.50
                dnsserver:
                  - 1.1.1.1
                gateway: 192.168.1.2
                domainsearchlist:
                  - example.com
                domain: example.com
                mac_allow:
                  - 00:00:00:01:E5:FF
                  - 00:00:00:01:E5
                mac_deny: []
      parameters:
        - name: interface
          in: body
          required: true
          schema:
            type: string
          description: >-
            Interface of DHCP server configuration to update. You may
            specify either the interface's descriptive name, the pfSense ID
            (wan, lan, optx), or the real interface ID (e.g. igb0). This
            interface must host a static IPv4 subnet that has more than one
            available within the subnet.
        - name: enable
          in: body
          schema:
            type: boolean
          description: Enable the DHCP server for this interface.
        - name: range_from
          in: body
          schema:
            type: string
          description: >-
            DHCP pool's starting IPv4 address. This must be an available
            address within the interface's subnet and be less than the
            `range_to` value. This field is required if no `range_from` value has been
            set previously.
        - name: range_to
          in: body
          schema:
            type: string
          description: >-
            DHCP pool's ending IPv4 address. This must be an available
            address within the interface's subnet and be greater than the
            `range_from` value. This field is required if no `range_to` has been
            set previously.
        - name: dnsserver
          in: body
          description: DNS servers to hand out in DHCP leases.
          example: ["8.8.8.8", "8.8.4.4"]
          schema:
            type: array
            items:
              type: string
        - name: domain
          in: body
          schema:
            type: string
          description: >-
            Domain name to include in DHCP leass. This must be a
            valid domain name or an empty string to assume the system default.
        - name: domainsearchlist
          in: body
          description: Search domains to include in DHCP leases. Each entry must be a valid domain name.
          example: [example.com]
          schema:
            type: array
            items:
              type: string
        - name: defaultleasetime
          in: body
          schema:
            oneOf:
              - type: string
              - type: integer
          description: >-
            Default DHCP lease time. This must be a value of `60` or
            greater and must be less than `maxleasetime`. This
            field can be unset to the system default by passing in an empty
            string.
        - name: maxleasetime
          in: body
          schema:
            oneOf:
              - type: string
              - type: integer
          description: >-
            Maximum DHCP lease time. This must be a value of `60` or
            greater and must be greater than `defaultleasetime`. This
            field can be unset to the system default by passing in an empty
            string.
        - name: mac_allow
          in: body
          example: [00:00:00:01:E5:FF]
          schema:
            type: array
            items:
              type: string
          description: MAC addresses allowed to register DHCP leases.
        - name: mac_deny
          in: body
          example: [00:00:00:01:E5:FF]
          schema:
            type: array
            items:
              type: string
          description: MAC addresses denied from registering DHCP leases.
        - name: gateway
          in: body
          schema:
            type: string
          description: >-
            Gateway to hand out in DHCP leases. This value must be a
            valid IPv4 address within the interface's subnet. This field
            can be unset to the system default by passing in an empty string.
        - name: staticarp
          in: body
          schema:
            type: boolean
          description: Create a static ARP entry for DHCP leases on this interface.
        - name: ignorebootp
          in: body
          schema:
            type: boolean
          description: Ignore BOOTP requests.
        - name: denyunknown
          in: body
          schema:
            type: boolean
          description: >-
            Deny unknown MAC addresses. If true, you
            must specify MAC addresses in the `mac_allow` field or add a static
            DHCP entry to receive DHCP requests.
        - name: numberoptions
          in: body
          example: [{"number": 2, "type": "boolean", "value": true}]
          schema:
            type: object
            properties:
              number:
                type: integer
              type:
                type: string
              value:
                oneOf:
                  - type: string
                  - type: integer
                  - type: boolean
          description: >-
            Set DHCP options. This must be an array of option
            objects. See documentation for the /api/v1/services/dhcpd/options
            endpoint to object fields. To unset DHCP options, pass in an empty
            array.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/dhcpd/restart:
    post:
      tags:
        - Services > DHCPD
      summary: Restart DHCP Server (dhcpd) service
      description: >-
        Restart the DHCP Server (dhcpd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/dhcpd/stop:
    post:
      tags:
        - Services > DHCPD
      summary: Stop DHCP Server (dhcpd) service
      description: >-
        Stop the DHCP Server (dhcpd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/dpinger/start:
    post:
      tags:
        - Services > DPINGER
      summary: Start Gateway Monitoring (dpinger) service
      description: >-
        Start the Gateway Monitoring (dpinger) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/dpinger/restart:
    post:
      tags:
        - Services > DPINGER
      summary: Restart Gateway Monitoring (dpinger) service
      description: >-
        Restart the Gateway Monitoring (dpinger) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/dpinger/stop:
    post:
      tags:
        - Services > DPINGER
      summary: Stop Gateway Monitoring (dpinger) service
      description: >-
        Stop the Gateway Monitoring (dpinger) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/ntpd/time_server:
    post:
      tags:
        - Services > NTPD > Time Server
      summary: Add NTP (ntpd) time server
      description: >-
        Add a new NTP time server to the NTP (ntpd) configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-ntpd`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                timeserver: ntp.pool.org
                ispool: true
                prefer: true
                noselect: false
      parameters:
        - name: timeserver
          in: body
          description: IP or hostname of the NTP time server to add.
          required: true
          schema:
            type: string
        - name: ispool
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Specify whether or not this time server represents an NTP server
            pool or a single NTP server.
        - name: noselect
          in: body
          description: Prevent this NTP server from being selected for time.
          schema:
            type: boolean
            default: false
        - name: prefer
          in: body
          schema:
            type: boolean
            default: false
          description: >-
            Set this NTP time server as a preferred NTP time
            server. If `true`, this time server will take preference over other
            time servers.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    delete:
      tags:
        - Services > NTPD > Time Server
      summary: Delete NTP (ntpd) time server
      description: >-
        Delete an existing NTP time server from the NTP (ntpd) configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-ntpd`]
      parameters:
        - name: timeserver
          in: body
          required: true
          schema:
            type: string
          description: >-
            IP or hostname of the NTP time server to delete. If more
            than one time server exists with this value, only the first match
            will be deleted. In the case that the last remaining time server was
            deleted, the default time server `pool.ntp.org` will be written.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/ntpd/start:
    post:
      tags:
        - Services > NTPD
      summary: Start NTP (ntpd) service
      description: >-
        Start the NTP (ntpd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/ntpd:
    get:
      tags:
        - Services > NTPD
      summary: Read NTP (ntpd) service
      description: >-
        Read the NTP (ntpd) service configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-ntpd`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    put:
      tags:
        - Services > NTPD
      summary: Update NTP (ntpd) service
      description: >-
        Update the NTP (ntpd) service configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-ntpd`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                interface:
                  - WAN
                  - lan
                  - lo0
                orphan: 15
                logpeer: true
                logsys: true
                clockstats: true
                loopstats: false
                peerstats: true
                statsgraph: true
                timeservers:
                  - timeserver: ntp.pool.org
                    ispool: true
                    prefer: true
                    noselect: false
      parameters:
        - name: interface
          in: body
          example: [lan, opt1]
          schema:
            type: array
            items:
              type: string
          description: >-
            Update the interfaces NTP will listen on. You may specify either the physical Interface ID, the
            pfSense Interface ID or the descriptive Interface name. To match any
            interface, you may pass in an empty array.
        - name: time_servers
          in: body
          example:
            - {"timeserver": "time.example.com", "ispool": true, "noselect": false, "prefer": true}
          schema:
            type: array
            items:
              type: object
          description: >-
            Update the time servers used by the system. Each object may use the parameters available in the
            /api/v1/services/ntpd/time_server endpoint. To revert to the default timeserver, you may pass in an 
            empty array. Existing values will be overwritten.
        - name: orphan
          in: body
          schema:
            type: integer
            minimum: 1
            maximum: 15
          description: >-
            Update the orphan mode value. This must be a value between `1` and
            `15`. Orphan mode allows the system clock to be used when no other
            clocks are available. The number here specifies the stratum reported
            during orphan mode and should normally be set to a number high
            enough to insure that any other servers available to clients are
            preferred over this server.
        - name: leapsec
          in: body
          schema:
            type: string
          description: >-
            Update the leap seconds configuration. This should be the contents
            of the leap seconds file received from the IERS.
        - name: statsgraph
          in: body
          description: Enable RRD graphs of NTP metrics.
          schema:
            type: boolean
        - name: logpeer
          in: body
          description: Enable logging of peer messages.
          schema:
            type: boolean
        - name: logsys
          in: body
          schema:
            type: boolean
          description: Enable logging of system messages.
        - name: clockstats
          in: body
          description: Enable logging of reference clock statistics.
          schema:
            type: boolean
        - name: loopstats
          in: body
          description: Enable logging of clock discipline statistics.
          schema:
            type: boolean
        - name: peerstats
          in: body
          description: Enable logging of NTP peer statistics.
          schema:
            type: boolean
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/ntpd/restart:
    post:
      tags:
        - Services > NTPD
      summary: Restart NTP (ntpd) Service
      description: >-
        Restart the NTP (ntpd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/ntpd/stop:
    post:
      tags:
        - Services > NTPD
      summary: Stop NTP (ntpd) Service
      description: >-
        Stop the NTP (ntpd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/sshd/start:
    post:
      tags:
        - Services > SSHD
      summary: Start Secure Shell (sshd) service
      description: >-
        Start the Secure Shell (sshd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/sshd:
    put:
      tags:
        - Services > SSHD
      summary: Update Secure Shell (sshd) configuration
      description: >-
        Modify the Secure Shell (sshd) service configuration.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-advanced-admin`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                enable: true
                sshdkeyonly: both
                sshdagentforwarding: false
                port: 2222
      parameters:
        - name: enable
          in: body
          description: Enable the Secure Shell (sshd) service.
          schema:
            type: boolean
        - name: sshdkeyonly
          in: body
          schema:
            type: string
            enum: ["disabled", "enabled", "both"]
          description: >-
            Secure Shell authentication type. Use `disabled` for password OR public key,
            `enabled` for public key only, or `both` to require both a password AND
            public key.
        - name: sshdagentforwarding
          in: body
          description: Enable Secure Shell agent forwarding.
          schema:
            type: boolean
        - name: port
          in: body
          description: Port the Secure Shell server will bind to.
          schema:
            type: integer
            minimum: 1
            maximum: 65535
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

    get:
      tags:
        - Services > SSHD
      summary: Read Secure Shell (sshd) configuration
      description: >-
        Read the current Secure Shell (sshd) configuration. <br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-system-advanced-admin`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/sshd/restart:
    post:
      tags:
        - Services > SSHD
      summary: Restart Secure Shell (sshd) service
      description: >-
        Restart the Secure Shell (sshd) service.<br><br>


        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/sshd/stop:
    post:
      tags:
        - Services > SSHD
      summary: Stop Secure Shell (sshd) service
      description: >-
        Stop the Secure Shell (sshd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/syslogd/start:
    post:
      tags:
        - Services > SYSLOGD
      summary: Start System Logger (syslogd) service
      description: >-
        Start the System Logger (syslogd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/syslogd/restart:
    post:
      tags:
        - Services > SYSLOGD
      summary: Restart System Logger (syslogd) service
      description: >-
        Restart the System Logger (syslogd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/syslogd/stop:
    post:
      tags:
        - Services > SYSLOGD
      summary: Stop System Logger (syslogd) service
      description: >-
        Stop the System Logger (syslogd) service.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/ddns:
    get:
      tags:
        - Services > DDNS
      summary: Read dynamic DNS configuration
      description: >-
        Read configured dynamic DNS settings and statuses.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-services-dynamicdnsclients`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services:
    get:
      tags:
        - Services
      summary: Read all service statuses
      description: >-
        Read available services.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/start:
    post:
      tags:
        - Services
      summary: Start all services
      description: >-
        Start all available services.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/stop:
    post:
      tags:
        - Services
      summary: Stop all services
      description: >-
        Stop all available services.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/services/restart:
    post:
      tags:
        - Services
      summary: Restart services
      description: >-
        Restart available services.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-status-services`]
      parameters:
        - name: service
          in: body
          description: >-
            Specify the name of a single service to restart. If this field is not specified, all services 
            will be restarted.
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

  /api/v1/diagnostics/command_prompt:
    post:
      tags:
        - Diagnostics > Command Prompt
      summary: Execute shell command
      description: >-
        Execute a shell command.<br><br>

        _Requires at least one of the following privileges:_ [`page-all`,
        `page-diagnostics-command`]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                shell_cmd: echo 'Test command'
      parameters:
        - name: shell_cmd
          in: body
          required: true
          schema:
            type: string
          description: >-
            Shell command to execute on pfSense. Interactive commands are not supported and may result in the API being 
            unable to respond to the request.
      responses:
        200:
          $ref: "#/components/responses/Success"
        401:
          $ref: "#/components/responses/AuthenticationFailed"

