#!/bin/sh
if [ "${2}" != "POST-INSTALL" ]; then
	exit 0
fi

# Make this package known to pfSense
/usr/local/bin/php -f /etc/rc.packages %%PORTNAME%% ${2}

# Check the local systems version of pfSense before assigning file overrides
PFSENSE_VERSION=$(/bin/cat /etc/version)
echo "Checking pfSense version... done."

# pfSense 2.7.0/23.05+ support custom nginx configurations for package. Only override files on previous versions.
if [ "${PFSENSE_VERSION}" == "23.01-RELEASE" ]
then
  # Backup original files before overriding
  echo "Creating backups of files to override... done."
  /bin/cp /etc/inc/system.inc /etc/inc/system.inc.original

  # Use the corresponding pfSense version's file overrides if they exist. Otherwise print warning and use default.
  if [ -d "/etc/inc/api/framework/overrides/${PFSENSE_VERSION}" ]
  then
      /bin/cp "/etc/inc/api/framework/overrides/${PFSENSE_VERSION}/system.inc" "/etc/inc/system.inc"
      echo "Installing file overrides for ${PFSENSE_VERSION}... done."
  else
      echo "WARNING: No overrides exist for ${PFSENSE_VERSION}, it may be unsupported. Using default overrides."
      /bin/cp "/etc/inc/api/framework/overrides/default/system.inc" "/etc/inc/system.inc"
      echo "Installing default file overrides... done."
  fi
fi

# Setup the pfsense-api command line tool
/bin/chmod +x /usr/local/share/pfSense-pkg-API/manage.php
/bin/ln -s /usr/local/share/pfSense-pkg-API/manage.php /usr/local/bin/pfsense-api

# Build API endpoints and restore any existing configuration
/usr/local/bin/php -f /usr/local/share/pfSense-pkg-API/manage.php buildendpoints
/usr/local/bin/php -f /usr/local/share/pfSense-pkg-API/manage.php restore

